// Code generated by protoc-gen-go.
// source: ProtocolInfo.proto
// DO NOT EDIT!

package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// *
// Request to get protocol versions for all supported rpc kinds.
type GetProtocolVersionsRequestProto struct {
	Protocol         *string `protobuf:"bytes,1,req,name=protocol" json:"protocol,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetProtocolVersionsRequestProto) Reset()         { *m = GetProtocolVersionsRequestProto{} }
func (m *GetProtocolVersionsRequestProto) String() string { return proto.CompactTextString(m) }
func (*GetProtocolVersionsRequestProto) ProtoMessage()    {}
func (*GetProtocolVersionsRequestProto) Descriptor() ([]byte, []int) {
	return fileDescriptor11, []int{0}
}

func (m *GetProtocolVersionsRequestProto) GetProtocol() string {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return ""
}

// *
// Protocol version with corresponding rpc kind.
type ProtocolVersionProto struct {
	RpcKind          *string  `protobuf:"bytes,1,req,name=rpcKind" json:"rpcKind,omitempty"`
	Versions         []uint64 `protobuf:"varint,2,rep,name=versions" json:"versions,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ProtocolVersionProto) Reset()                    { *m = ProtocolVersionProto{} }
func (m *ProtocolVersionProto) String() string            { return proto.CompactTextString(m) }
func (*ProtocolVersionProto) ProtoMessage()               {}
func (*ProtocolVersionProto) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{1} }

func (m *ProtocolVersionProto) GetRpcKind() string {
	if m != nil && m.RpcKind != nil {
		return *m.RpcKind
	}
	return ""
}

func (m *ProtocolVersionProto) GetVersions() []uint64 {
	if m != nil {
		return m.Versions
	}
	return nil
}

// *
// Get protocol version response.
type GetProtocolVersionsResponseProto struct {
	ProtocolVersions []*ProtocolVersionProto `protobuf:"bytes,1,rep,name=protocolVersions" json:"protocolVersions,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *GetProtocolVersionsResponseProto) Reset()         { *m = GetProtocolVersionsResponseProto{} }
func (m *GetProtocolVersionsResponseProto) String() string { return proto.CompactTextString(m) }
func (*GetProtocolVersionsResponseProto) ProtoMessage()    {}
func (*GetProtocolVersionsResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor11, []int{2}
}

func (m *GetProtocolVersionsResponseProto) GetProtocolVersions() []*ProtocolVersionProto {
	if m != nil {
		return m.ProtocolVersions
	}
	return nil
}

// *
// Get protocol signature request.
type GetProtocolSignatureRequestProto struct {
	Protocol         *string `protobuf:"bytes,1,req,name=protocol" json:"protocol,omitempty"`
	RpcKind          *string `protobuf:"bytes,2,req,name=rpcKind" json:"rpcKind,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetProtocolSignatureRequestProto) Reset()         { *m = GetProtocolSignatureRequestProto{} }
func (m *GetProtocolSignatureRequestProto) String() string { return proto.CompactTextString(m) }
func (*GetProtocolSignatureRequestProto) ProtoMessage()    {}
func (*GetProtocolSignatureRequestProto) Descriptor() ([]byte, []int) {
	return fileDescriptor11, []int{3}
}

func (m *GetProtocolSignatureRequestProto) GetProtocol() string {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return ""
}

func (m *GetProtocolSignatureRequestProto) GetRpcKind() string {
	if m != nil && m.RpcKind != nil {
		return *m.RpcKind
	}
	return ""
}

// *
// Get protocol signature response.
type GetProtocolSignatureResponseProto struct {
	ProtocolSignature []*ProtocolSignatureProto `protobuf:"bytes,1,rep,name=protocolSignature" json:"protocolSignature,omitempty"`
	XXX_unrecognized  []byte                    `json:"-"`
}

func (m *GetProtocolSignatureResponseProto) Reset()         { *m = GetProtocolSignatureResponseProto{} }
func (m *GetProtocolSignatureResponseProto) String() string { return proto.CompactTextString(m) }
func (*GetProtocolSignatureResponseProto) ProtoMessage()    {}
func (*GetProtocolSignatureResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor11, []int{4}
}

func (m *GetProtocolSignatureResponseProto) GetProtocolSignature() []*ProtocolSignatureProto {
	if m != nil {
		return m.ProtocolSignature
	}
	return nil
}

type ProtocolSignatureProto struct {
	Version          *uint64  `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	Methods          []uint32 `protobuf:"varint,2,rep,name=methods" json:"methods,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ProtocolSignatureProto) Reset()                    { *m = ProtocolSignatureProto{} }
func (m *ProtocolSignatureProto) String() string            { return proto.CompactTextString(m) }
func (*ProtocolSignatureProto) ProtoMessage()               {}
func (*ProtocolSignatureProto) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{5} }

func (m *ProtocolSignatureProto) GetVersion() uint64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *ProtocolSignatureProto) GetMethods() []uint32 {
	if m != nil {
		return m.Methods
	}
	return nil
}

func init() {
	proto.RegisterType((*GetProtocolVersionsRequestProto)(nil), "hadoop.common.GetProtocolVersionsRequestProto")
	proto.RegisterType((*ProtocolVersionProto)(nil), "hadoop.common.ProtocolVersionProto")
	proto.RegisterType((*GetProtocolVersionsResponseProto)(nil), "hadoop.common.GetProtocolVersionsResponseProto")
	proto.RegisterType((*GetProtocolSignatureRequestProto)(nil), "hadoop.common.GetProtocolSignatureRequestProto")
	proto.RegisterType((*GetProtocolSignatureResponseProto)(nil), "hadoop.common.GetProtocolSignatureResponseProto")
	proto.RegisterType((*ProtocolSignatureProto)(nil), "hadoop.common.ProtocolSignatureProto")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for ProtocolInfoService service

type ProtocolInfoServiceClient interface {
	// *
	// Return protocol version corresponding to protocol interface for each
	// supported rpc kind.
	GetProtocolVersions(ctx context.Context, in *GetProtocolVersionsRequestProto, opts ...grpc.CallOption) (*GetProtocolVersionsResponseProto, error)
	// *
	// Return protocol version corresponding to protocol interface.
	GetProtocolSignature(ctx context.Context, in *GetProtocolSignatureRequestProto, opts ...grpc.CallOption) (*GetProtocolSignatureResponseProto, error)
}

type protocolInfoServiceClient struct {
	cc *grpc.ClientConn
}

func NewProtocolInfoServiceClient(cc *grpc.ClientConn) ProtocolInfoServiceClient {
	return &protocolInfoServiceClient{cc}
}

func (c *protocolInfoServiceClient) GetProtocolVersions(ctx context.Context, in *GetProtocolVersionsRequestProto, opts ...grpc.CallOption) (*GetProtocolVersionsResponseProto, error) {
	out := new(GetProtocolVersionsResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.common.ProtocolInfoService/getProtocolVersions", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protocolInfoServiceClient) GetProtocolSignature(ctx context.Context, in *GetProtocolSignatureRequestProto, opts ...grpc.CallOption) (*GetProtocolSignatureResponseProto, error) {
	out := new(GetProtocolSignatureResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.common.ProtocolInfoService/getProtocolSignature", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ProtocolInfoService service

type ProtocolInfoServiceServer interface {
	// *
	// Return protocol version corresponding to protocol interface for each
	// supported rpc kind.
	GetProtocolVersions(context.Context, *GetProtocolVersionsRequestProto) (*GetProtocolVersionsResponseProto, error)
	// *
	// Return protocol version corresponding to protocol interface.
	GetProtocolSignature(context.Context, *GetProtocolSignatureRequestProto) (*GetProtocolSignatureResponseProto, error)
}

func RegisterProtocolInfoServiceServer(s *grpc.Server, srv ProtocolInfoServiceServer) {
	s.RegisterService(&_ProtocolInfoService_serviceDesc, srv)
}

func _ProtocolInfoService_GetProtocolVersions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProtocolVersionsRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtocolInfoServiceServer).GetProtocolVersions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.common.ProtocolInfoService/GetProtocolVersions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtocolInfoServiceServer).GetProtocolVersions(ctx, req.(*GetProtocolVersionsRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtocolInfoService_GetProtocolSignature_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProtocolSignatureRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtocolInfoServiceServer).GetProtocolSignature(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.common.ProtocolInfoService/GetProtocolSignature",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtocolInfoServiceServer).GetProtocolSignature(ctx, req.(*GetProtocolSignatureRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProtocolInfoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hadoop.common.ProtocolInfoService",
	HandlerType: (*ProtocolInfoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getProtocolVersions",
			Handler:    _ProtocolInfoService_GetProtocolVersions_Handler,
		},
		{
			MethodName: "getProtocolSignature",
			Handler:    _ProtocolInfoService_GetProtocolSignature_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor11,
}

func init() { proto.RegisterFile("ProtocolInfo.proto", fileDescriptor11) }

var fileDescriptor11 = []byte{
	// 338 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x53, 0x5d, 0x4b, 0xc3, 0x30,
	0x14, 0xa5, 0xdd, 0x40, 0xbd, 0x32, 0xd0, 0x6c, 0xc8, 0xd8, 0x83, 0xce, 0x8a, 0xb0, 0xa7, 0x28,
	0x7b, 0x14, 0x7c, 0xd9, 0x8b, 0x88, 0x82, 0x92, 0x81, 0xf8, 0x5a, 0xb3, 0xac, 0x2b, 0xd8, 0x26,
	0x26, 0x6d, 0xd1, 0x7f, 0xb0, 0x9f, 0xe1, 0x4f, 0xb5, 0x5d, 0xda, 0xd2, 0x8f, 0xa8, 0x7d, 0x6a,
	0x4f, 0x72, 0xce, 0xbd, 0xf7, 0xdc, 0x9b, 0x0b, 0xe8, 0x59, 0xf2, 0x88, 0x53, 0xfe, 0x7e, 0x1f,
	0xae, 0x39, 0x16, 0x19, 0x40, 0x83, 0x8d, 0xbb, 0xe2, 0x5c, 0x60, 0xca, 0x83, 0x80, 0x87, 0xce,
	0x2d, 0x9c, 0xdd, 0xb1, 0xa8, 0xe0, 0xbd, 0x30, 0xa9, 0x7c, 0x1e, 0x2a, 0xc2, 0x3e, 0x62, 0xa6,
	0xf4, 0x31, 0x9a, 0xc0, 0xbe, 0xc8, 0xef, 0xc7, 0xd6, 0xd4, 0x9e, 0x1d, 0x90, 0x12, 0x3b, 0x8f,
	0x30, 0x6a, 0x68, 0xb5, 0x66, 0x0c, 0x7b, 0x52, 0xd0, 0x07, 0x3f, 0x5c, 0xe5, 0x92, 0x02, 0x66,
	0xd1, 0x92, 0x3c, 0xcb, 0xd8, 0x9e, 0xf6, 0x66, 0x7d, 0x52, 0x62, 0x47, 0xc1, 0xd4, 0x58, 0x8c,
	0x12, 0xe9, 0x87, 0xe9, 0xc8, 0x4f, 0x70, 0x24, 0x1a, 0x84, 0x34, 0x45, 0x6f, 0x76, 0x38, 0xbf,
	0xc0, 0x35, 0x6b, 0xd8, 0x54, 0x18, 0x69, 0x89, 0x9d, 0xd7, 0x5a, 0xd2, 0xa5, 0xef, 0x85, 0x6e,
	0x14, 0x4b, 0xd6, 0xb5, 0x05, 0x55, 0xab, 0x76, 0xcd, 0xaa, 0xf3, 0x09, 0xe7, 0xe6, 0xc8, 0x55,
	0x3f, 0x4b, 0x38, 0x16, 0x4d, 0x46, 0x6e, 0xe8, 0xf2, 0x17, 0x43, 0x25, 0x4f, 0x5b, 0x6a, 0xeb,
	0xd3, 0xb1, 0x9c, 0x98, 0xc9, 0x59, 0xb5, 0x79, 0xbb, 0x77, 0x46, 0xfa, 0xa4, 0x80, 0xd9, 0x4d,
	0xc0, 0xa2, 0x0d, 0x5f, 0xe9, 0xb9, 0x0c, 0x48, 0x01, 0xe7, 0x5b, 0x1b, 0x86, 0xd5, 0x97, 0xb4,
	0x64, 0x32, 0xf1, 0x29, 0x43, 0x09, 0x0c, 0xbd, 0xf6, 0xb8, 0x10, 0x6e, 0x94, 0xfd, 0xcf, 0xfb,
	0x9a, 0x5c, 0x75, 0xe1, 0x57, 0x5b, 0xf6, 0x05, 0x23, 0xcf, 0xd0, 0x57, 0xf4, 0x47, 0x20, 0xe3,
	0x58, 0x27, 0xd7, 0x9d, 0x04, 0x95, 0xd4, 0x8b, 0x1b, 0x38, 0xe5, 0xd2, 0xc3, 0xae, 0x70, 0xe9,
	0x86, 0x15, 0x6a, 0x5f, 0x50, 0xbd, 0x5c, 0x6f, 0xf1, 0x7a, 0x51, 0xdb, 0xb9, 0xdd, 0xbf, 0xda,
	0x5a, 0xd6, 0xb7, 0x65, 0xfd, 0x04, 0x00, 0x00, 0xff, 0xff, 0x42, 0x12, 0xbd, 0x0a, 0x8e, 0x03,
	0x00, 0x00,
}
