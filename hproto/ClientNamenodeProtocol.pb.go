// Code generated by protoc-gen-go.
// source: ClientNamenodeProtocol.proto
// DO NOT EDIT!

package hproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CreateFlagProto int32

const (
	CreateFlagProto_CREATE       CreateFlagProto = 1
	CreateFlagProto_OVERWRITE    CreateFlagProto = 2
	CreateFlagProto_APPEND       CreateFlagProto = 4
	CreateFlagProto_LAZY_PERSIST CreateFlagProto = 16
	CreateFlagProto_NEW_BLOCK    CreateFlagProto = 32
)

var CreateFlagProto_name = map[int32]string{
	1:  "CREATE",
	2:  "OVERWRITE",
	4:  "APPEND",
	16: "LAZY_PERSIST",
	32: "NEW_BLOCK",
}
var CreateFlagProto_value = map[string]int32{
	"CREATE":       1,
	"OVERWRITE":    2,
	"APPEND":       4,
	"LAZY_PERSIST": 16,
	"NEW_BLOCK":    32,
}

func (x CreateFlagProto) Enum() *CreateFlagProto {
	p := new(CreateFlagProto)
	*p = x
	return p
}
func (x CreateFlagProto) String() string {
	return proto.EnumName(CreateFlagProto_name, int32(x))
}
func (x *CreateFlagProto) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CreateFlagProto_value, data, "CreateFlagProto")
	if err != nil {
		return err
	}
	*x = CreateFlagProto(value)
	return nil
}
func (CreateFlagProto) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

type AddBlockFlagProto int32

const (
	AddBlockFlagProto_NO_LOCAL_WRITE AddBlockFlagProto = 1
)

var AddBlockFlagProto_name = map[int32]string{
	1: "NO_LOCAL_WRITE",
}
var AddBlockFlagProto_value = map[string]int32{
	"NO_LOCAL_WRITE": 1,
}

func (x AddBlockFlagProto) Enum() *AddBlockFlagProto {
	p := new(AddBlockFlagProto)
	*p = x
	return p
}
func (x AddBlockFlagProto) String() string {
	return proto.EnumName(AddBlockFlagProto_name, int32(x))
}
func (x *AddBlockFlagProto) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AddBlockFlagProto_value, data, "AddBlockFlagProto")
	if err != nil {
		return err
	}
	*x = AddBlockFlagProto(value)
	return nil
}
func (AddBlockFlagProto) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

type DatanodeReportTypeProto int32

const (
	DatanodeReportTypeProto_ALL             DatanodeReportTypeProto = 1
	DatanodeReportTypeProto_LIVE            DatanodeReportTypeProto = 2
	DatanodeReportTypeProto_DEAD            DatanodeReportTypeProto = 3
	DatanodeReportTypeProto_DECOMMISSIONING DatanodeReportTypeProto = 4
)

var DatanodeReportTypeProto_name = map[int32]string{
	1: "ALL",
	2: "LIVE",
	3: "DEAD",
	4: "DECOMMISSIONING",
}
var DatanodeReportTypeProto_value = map[string]int32{
	"ALL":             1,
	"LIVE":            2,
	"DEAD":            3,
	"DECOMMISSIONING": 4,
}

func (x DatanodeReportTypeProto) Enum() *DatanodeReportTypeProto {
	p := new(DatanodeReportTypeProto)
	*p = x
	return p
}
func (x DatanodeReportTypeProto) String() string {
	return proto.EnumName(DatanodeReportTypeProto_name, int32(x))
}
func (x *DatanodeReportTypeProto) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DatanodeReportTypeProto_value, data, "DatanodeReportTypeProto")
	if err != nil {
		return err
	}
	*x = DatanodeReportTypeProto(value)
	return nil
}
func (DatanodeReportTypeProto) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

type SafeModeActionProto int32

const (
	SafeModeActionProto_SAFEMODE_LEAVE      SafeModeActionProto = 1
	SafeModeActionProto_SAFEMODE_ENTER      SafeModeActionProto = 2
	SafeModeActionProto_SAFEMODE_GET        SafeModeActionProto = 3
	SafeModeActionProto_SAFEMODE_FORCE_EXIT SafeModeActionProto = 4
)

var SafeModeActionProto_name = map[int32]string{
	1: "SAFEMODE_LEAVE",
	2: "SAFEMODE_ENTER",
	3: "SAFEMODE_GET",
	4: "SAFEMODE_FORCE_EXIT",
}
var SafeModeActionProto_value = map[string]int32{
	"SAFEMODE_LEAVE":      1,
	"SAFEMODE_ENTER":      2,
	"SAFEMODE_GET":        3,
	"SAFEMODE_FORCE_EXIT": 4,
}

func (x SafeModeActionProto) Enum() *SafeModeActionProto {
	p := new(SafeModeActionProto)
	*p = x
	return p
}
func (x SafeModeActionProto) String() string {
	return proto.EnumName(SafeModeActionProto_name, int32(x))
}
func (x *SafeModeActionProto) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SafeModeActionProto_value, data, "SafeModeActionProto")
	if err != nil {
		return err
	}
	*x = SafeModeActionProto(value)
	return nil
}
func (SafeModeActionProto) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

type RollingUpgradeActionProto int32

const (
	RollingUpgradeActionProto_QUERY    RollingUpgradeActionProto = 1
	RollingUpgradeActionProto_START    RollingUpgradeActionProto = 2
	RollingUpgradeActionProto_FINALIZE RollingUpgradeActionProto = 3
)

var RollingUpgradeActionProto_name = map[int32]string{
	1: "QUERY",
	2: "START",
	3: "FINALIZE",
}
var RollingUpgradeActionProto_value = map[string]int32{
	"QUERY":    1,
	"START":    2,
	"FINALIZE": 3,
}

func (x RollingUpgradeActionProto) Enum() *RollingUpgradeActionProto {
	p := new(RollingUpgradeActionProto)
	*p = x
	return p
}
func (x RollingUpgradeActionProto) String() string {
	return proto.EnumName(RollingUpgradeActionProto_name, int32(x))
}
func (x *RollingUpgradeActionProto) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RollingUpgradeActionProto_value, data, "RollingUpgradeActionProto")
	if err != nil {
		return err
	}
	*x = RollingUpgradeActionProto(value)
	return nil
}
func (RollingUpgradeActionProto) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

type CacheFlagProto int32

const (
	CacheFlagProto_FORCE CacheFlagProto = 1
)

var CacheFlagProto_name = map[int32]string{
	1: "FORCE",
}
var CacheFlagProto_value = map[string]int32{
	"FORCE": 1,
}

func (x CacheFlagProto) Enum() *CacheFlagProto {
	p := new(CacheFlagProto)
	*p = x
	return p
}
func (x CacheFlagProto) String() string {
	return proto.EnumName(CacheFlagProto_name, int32(x))
}
func (x *CacheFlagProto) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CacheFlagProto_value, data, "CacheFlagProto")
	if err != nil {
		return err
	}
	*x = CacheFlagProto(value)
	return nil
}
func (CacheFlagProto) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{5} }

type GetBlockLocationsRequestProto struct {
	Src              *string `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	Offset           *uint64 `protobuf:"varint,2,req,name=offset" json:"offset,omitempty"`
	Length           *uint64 `protobuf:"varint,3,req,name=length" json:"length,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetBlockLocationsRequestProto) Reset()                    { *m = GetBlockLocationsRequestProto{} }
func (m *GetBlockLocationsRequestProto) String() string            { return proto.CompactTextString(m) }
func (*GetBlockLocationsRequestProto) ProtoMessage()               {}
func (*GetBlockLocationsRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *GetBlockLocationsRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *GetBlockLocationsRequestProto) GetOffset() uint64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *GetBlockLocationsRequestProto) GetLength() uint64 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

type GetBlockLocationsResponseProto struct {
	Locations        *LocatedBlocksProto `protobuf:"bytes,1,opt,name=locations" json:"locations,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *GetBlockLocationsResponseProto) Reset()                    { *m = GetBlockLocationsResponseProto{} }
func (m *GetBlockLocationsResponseProto) String() string            { return proto.CompactTextString(m) }
func (*GetBlockLocationsResponseProto) ProtoMessage()               {}
func (*GetBlockLocationsResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *GetBlockLocationsResponseProto) GetLocations() *LocatedBlocksProto {
	if m != nil {
		return m.Locations
	}
	return nil
}

type GetServerDefaultsRequestProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetServerDefaultsRequestProto) Reset()                    { *m = GetServerDefaultsRequestProto{} }
func (m *GetServerDefaultsRequestProto) String() string            { return proto.CompactTextString(m) }
func (*GetServerDefaultsRequestProto) ProtoMessage()               {}
func (*GetServerDefaultsRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

type GetServerDefaultsResponseProto struct {
	ServerDefaults   *FsServerDefaultsProto `protobuf:"bytes,1,req,name=serverDefaults" json:"serverDefaults,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *GetServerDefaultsResponseProto) Reset()                    { *m = GetServerDefaultsResponseProto{} }
func (m *GetServerDefaultsResponseProto) String() string            { return proto.CompactTextString(m) }
func (*GetServerDefaultsResponseProto) ProtoMessage()               {}
func (*GetServerDefaultsResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *GetServerDefaultsResponseProto) GetServerDefaults() *FsServerDefaultsProto {
	if m != nil {
		return m.ServerDefaults
	}
	return nil
}

type CreateRequestProto struct {
	Src                   *string                      `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	Masked                *FsPermissionProto           `protobuf:"bytes,2,req,name=masked" json:"masked,omitempty"`
	ClientName            *string                      `protobuf:"bytes,3,req,name=clientName" json:"clientName,omitempty"`
	CreateFlag            *uint32                      `protobuf:"varint,4,req,name=createFlag" json:"createFlag,omitempty"`
	CreateParent          *bool                        `protobuf:"varint,5,req,name=createParent" json:"createParent,omitempty"`
	Replication           *uint32                      `protobuf:"varint,6,req,name=replication" json:"replication,omitempty"`
	BlockSize             *uint64                      `protobuf:"varint,7,req,name=blockSize" json:"blockSize,omitempty"`
	CryptoProtocolVersion []CryptoProtocolVersionProto `protobuf:"varint,8,rep,name=cryptoProtocolVersion,enum=hadoop.hdfs.CryptoProtocolVersionProto" json:"cryptoProtocolVersion,omitempty"`
	XXX_unrecognized      []byte                       `json:"-"`
}

func (m *CreateRequestProto) Reset()                    { *m = CreateRequestProto{} }
func (m *CreateRequestProto) String() string            { return proto.CompactTextString(m) }
func (*CreateRequestProto) ProtoMessage()               {}
func (*CreateRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

func (m *CreateRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *CreateRequestProto) GetMasked() *FsPermissionProto {
	if m != nil {
		return m.Masked
	}
	return nil
}

func (m *CreateRequestProto) GetClientName() string {
	if m != nil && m.ClientName != nil {
		return *m.ClientName
	}
	return ""
}

func (m *CreateRequestProto) GetCreateFlag() uint32 {
	if m != nil && m.CreateFlag != nil {
		return *m.CreateFlag
	}
	return 0
}

func (m *CreateRequestProto) GetCreateParent() bool {
	if m != nil && m.CreateParent != nil {
		return *m.CreateParent
	}
	return false
}

func (m *CreateRequestProto) GetReplication() uint32 {
	if m != nil && m.Replication != nil {
		return *m.Replication
	}
	return 0
}

func (m *CreateRequestProto) GetBlockSize() uint64 {
	if m != nil && m.BlockSize != nil {
		return *m.BlockSize
	}
	return 0
}

func (m *CreateRequestProto) GetCryptoProtocolVersion() []CryptoProtocolVersionProto {
	if m != nil {
		return m.CryptoProtocolVersion
	}
	return nil
}

type CreateResponseProto struct {
	Fs               *HdfsFileStatusProto `protobuf:"bytes,1,opt,name=fs" json:"fs,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CreateResponseProto) Reset()                    { *m = CreateResponseProto{} }
func (m *CreateResponseProto) String() string            { return proto.CompactTextString(m) }
func (*CreateResponseProto) ProtoMessage()               {}
func (*CreateResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{5} }

func (m *CreateResponseProto) GetFs() *HdfsFileStatusProto {
	if m != nil {
		return m.Fs
	}
	return nil
}

type AppendRequestProto struct {
	Src              *string `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	ClientName       *string `protobuf:"bytes,2,req,name=clientName" json:"clientName,omitempty"`
	Flag             *uint32 `protobuf:"varint,3,opt,name=flag" json:"flag,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AppendRequestProto) Reset()                    { *m = AppendRequestProto{} }
func (m *AppendRequestProto) String() string            { return proto.CompactTextString(m) }
func (*AppendRequestProto) ProtoMessage()               {}
func (*AppendRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{6} }

func (m *AppendRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *AppendRequestProto) GetClientName() string {
	if m != nil && m.ClientName != nil {
		return *m.ClientName
	}
	return ""
}

func (m *AppendRequestProto) GetFlag() uint32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

type AppendResponseProto struct {
	Block            *LocatedBlockProto   `protobuf:"bytes,1,opt,name=block" json:"block,omitempty"`
	Stat             *HdfsFileStatusProto `protobuf:"bytes,2,opt,name=stat" json:"stat,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *AppendResponseProto) Reset()                    { *m = AppendResponseProto{} }
func (m *AppendResponseProto) String() string            { return proto.CompactTextString(m) }
func (*AppendResponseProto) ProtoMessage()               {}
func (*AppendResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{7} }

func (m *AppendResponseProto) GetBlock() *LocatedBlockProto {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *AppendResponseProto) GetStat() *HdfsFileStatusProto {
	if m != nil {
		return m.Stat
	}
	return nil
}

type SetReplicationRequestProto struct {
	Src              *string `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	Replication      *uint32 `protobuf:"varint,2,req,name=replication" json:"replication,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SetReplicationRequestProto) Reset()                    { *m = SetReplicationRequestProto{} }
func (m *SetReplicationRequestProto) String() string            { return proto.CompactTextString(m) }
func (*SetReplicationRequestProto) ProtoMessage()               {}
func (*SetReplicationRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{8} }

func (m *SetReplicationRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *SetReplicationRequestProto) GetReplication() uint32 {
	if m != nil && m.Replication != nil {
		return *m.Replication
	}
	return 0
}

type SetReplicationResponseProto struct {
	Result           *bool  `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SetReplicationResponseProto) Reset()                    { *m = SetReplicationResponseProto{} }
func (m *SetReplicationResponseProto) String() string            { return proto.CompactTextString(m) }
func (*SetReplicationResponseProto) ProtoMessage()               {}
func (*SetReplicationResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{9} }

func (m *SetReplicationResponseProto) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type SetStoragePolicyRequestProto struct {
	Src              *string `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	PolicyName       *string `protobuf:"bytes,2,req,name=policyName" json:"policyName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SetStoragePolicyRequestProto) Reset()                    { *m = SetStoragePolicyRequestProto{} }
func (m *SetStoragePolicyRequestProto) String() string            { return proto.CompactTextString(m) }
func (*SetStoragePolicyRequestProto) ProtoMessage()               {}
func (*SetStoragePolicyRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{10} }

func (m *SetStoragePolicyRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *SetStoragePolicyRequestProto) GetPolicyName() string {
	if m != nil && m.PolicyName != nil {
		return *m.PolicyName
	}
	return ""
}

type SetStoragePolicyResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SetStoragePolicyResponseProto) Reset()                    { *m = SetStoragePolicyResponseProto{} }
func (m *SetStoragePolicyResponseProto) String() string            { return proto.CompactTextString(m) }
func (*SetStoragePolicyResponseProto) ProtoMessage()               {}
func (*SetStoragePolicyResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{11} }

type UnsetStoragePolicyRequestProto struct {
	Src              *string `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UnsetStoragePolicyRequestProto) Reset()                    { *m = UnsetStoragePolicyRequestProto{} }
func (m *UnsetStoragePolicyRequestProto) String() string            { return proto.CompactTextString(m) }
func (*UnsetStoragePolicyRequestProto) ProtoMessage()               {}
func (*UnsetStoragePolicyRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{12} }

func (m *UnsetStoragePolicyRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

type UnsetStoragePolicyResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *UnsetStoragePolicyResponseProto) Reset()         { *m = UnsetStoragePolicyResponseProto{} }
func (m *UnsetStoragePolicyResponseProto) String() string { return proto.CompactTextString(m) }
func (*UnsetStoragePolicyResponseProto) ProtoMessage()    {}
func (*UnsetStoragePolicyResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{13}
}

type GetStoragePolicyRequestProto struct {
	Path             *string `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetStoragePolicyRequestProto) Reset()                    { *m = GetStoragePolicyRequestProto{} }
func (m *GetStoragePolicyRequestProto) String() string            { return proto.CompactTextString(m) }
func (*GetStoragePolicyRequestProto) ProtoMessage()               {}
func (*GetStoragePolicyRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{14} }

func (m *GetStoragePolicyRequestProto) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

type GetStoragePolicyResponseProto struct {
	StoragePolicy    *BlockStoragePolicyProto `protobuf:"bytes,1,req,name=storagePolicy" json:"storagePolicy,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *GetStoragePolicyResponseProto) Reset()                    { *m = GetStoragePolicyResponseProto{} }
func (m *GetStoragePolicyResponseProto) String() string            { return proto.CompactTextString(m) }
func (*GetStoragePolicyResponseProto) ProtoMessage()               {}
func (*GetStoragePolicyResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{15} }

func (m *GetStoragePolicyResponseProto) GetStoragePolicy() *BlockStoragePolicyProto {
	if m != nil {
		return m.StoragePolicy
	}
	return nil
}

type GetStoragePoliciesRequestProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetStoragePoliciesRequestProto) Reset()                    { *m = GetStoragePoliciesRequestProto{} }
func (m *GetStoragePoliciesRequestProto) String() string            { return proto.CompactTextString(m) }
func (*GetStoragePoliciesRequestProto) ProtoMessage()               {}
func (*GetStoragePoliciesRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{16} }

type GetStoragePoliciesResponseProto struct {
	Policies         []*BlockStoragePolicyProto `protobuf:"bytes,1,rep,name=policies" json:"policies,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *GetStoragePoliciesResponseProto) Reset()         { *m = GetStoragePoliciesResponseProto{} }
func (m *GetStoragePoliciesResponseProto) String() string { return proto.CompactTextString(m) }
func (*GetStoragePoliciesResponseProto) ProtoMessage()    {}
func (*GetStoragePoliciesResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{17}
}

func (m *GetStoragePoliciesResponseProto) GetPolicies() []*BlockStoragePolicyProto {
	if m != nil {
		return m.Policies
	}
	return nil
}

type SetPermissionRequestProto struct {
	Src              *string            `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	Permission       *FsPermissionProto `protobuf:"bytes,2,req,name=permission" json:"permission,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *SetPermissionRequestProto) Reset()                    { *m = SetPermissionRequestProto{} }
func (m *SetPermissionRequestProto) String() string            { return proto.CompactTextString(m) }
func (*SetPermissionRequestProto) ProtoMessage()               {}
func (*SetPermissionRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{18} }

func (m *SetPermissionRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *SetPermissionRequestProto) GetPermission() *FsPermissionProto {
	if m != nil {
		return m.Permission
	}
	return nil
}

type SetPermissionResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SetPermissionResponseProto) Reset()                    { *m = SetPermissionResponseProto{} }
func (m *SetPermissionResponseProto) String() string            { return proto.CompactTextString(m) }
func (*SetPermissionResponseProto) ProtoMessage()               {}
func (*SetPermissionResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{19} }

type SetOwnerRequestProto struct {
	Src              *string `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	Username         *string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Groupname        *string `protobuf:"bytes,3,opt,name=groupname" json:"groupname,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SetOwnerRequestProto) Reset()                    { *m = SetOwnerRequestProto{} }
func (m *SetOwnerRequestProto) String() string            { return proto.CompactTextString(m) }
func (*SetOwnerRequestProto) ProtoMessage()               {}
func (*SetOwnerRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{20} }

func (m *SetOwnerRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *SetOwnerRequestProto) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *SetOwnerRequestProto) GetGroupname() string {
	if m != nil && m.Groupname != nil {
		return *m.Groupname
	}
	return ""
}

type SetOwnerResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SetOwnerResponseProto) Reset()                    { *m = SetOwnerResponseProto{} }
func (m *SetOwnerResponseProto) String() string            { return proto.CompactTextString(m) }
func (*SetOwnerResponseProto) ProtoMessage()               {}
func (*SetOwnerResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{21} }

type AbandonBlockRequestProto struct {
	B                *ExtendedBlockProto `protobuf:"bytes,1,req,name=b" json:"b,omitempty"`
	Src              *string             `protobuf:"bytes,2,req,name=src" json:"src,omitempty"`
	Holder           *string             `protobuf:"bytes,3,req,name=holder" json:"holder,omitempty"`
	FileId           *uint64             `protobuf:"varint,4,opt,name=fileId,def=0" json:"fileId,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *AbandonBlockRequestProto) Reset()                    { *m = AbandonBlockRequestProto{} }
func (m *AbandonBlockRequestProto) String() string            { return proto.CompactTextString(m) }
func (*AbandonBlockRequestProto) ProtoMessage()               {}
func (*AbandonBlockRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{22} }

const Default_AbandonBlockRequestProto_FileId uint64 = 0

func (m *AbandonBlockRequestProto) GetB() *ExtendedBlockProto {
	if m != nil {
		return m.B
	}
	return nil
}

func (m *AbandonBlockRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *AbandonBlockRequestProto) GetHolder() string {
	if m != nil && m.Holder != nil {
		return *m.Holder
	}
	return ""
}

func (m *AbandonBlockRequestProto) GetFileId() uint64 {
	if m != nil && m.FileId != nil {
		return *m.FileId
	}
	return Default_AbandonBlockRequestProto_FileId
}

type AbandonBlockResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *AbandonBlockResponseProto) Reset()                    { *m = AbandonBlockResponseProto{} }
func (m *AbandonBlockResponseProto) String() string            { return proto.CompactTextString(m) }
func (*AbandonBlockResponseProto) ProtoMessage()               {}
func (*AbandonBlockResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{23} }

type AddBlockRequestProto struct {
	Src              *string              `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	ClientName       *string              `protobuf:"bytes,2,req,name=clientName" json:"clientName,omitempty"`
	Previous         *ExtendedBlockProto  `protobuf:"bytes,3,opt,name=previous" json:"previous,omitempty"`
	ExcludeNodes     []*DatanodeInfoProto `protobuf:"bytes,4,rep,name=excludeNodes" json:"excludeNodes,omitempty"`
	FileId           *uint64              `protobuf:"varint,5,opt,name=fileId,def=0" json:"fileId,omitempty"`
	FavoredNodes     []string             `protobuf:"bytes,6,rep,name=favoredNodes" json:"favoredNodes,omitempty"`
	Flags            []AddBlockFlagProto  `protobuf:"varint,7,rep,name=flags,enum=hadoop.hdfs.AddBlockFlagProto" json:"flags,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *AddBlockRequestProto) Reset()                    { *m = AddBlockRequestProto{} }
func (m *AddBlockRequestProto) String() string            { return proto.CompactTextString(m) }
func (*AddBlockRequestProto) ProtoMessage()               {}
func (*AddBlockRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{24} }

const Default_AddBlockRequestProto_FileId uint64 = 0

func (m *AddBlockRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *AddBlockRequestProto) GetClientName() string {
	if m != nil && m.ClientName != nil {
		return *m.ClientName
	}
	return ""
}

func (m *AddBlockRequestProto) GetPrevious() *ExtendedBlockProto {
	if m != nil {
		return m.Previous
	}
	return nil
}

func (m *AddBlockRequestProto) GetExcludeNodes() []*DatanodeInfoProto {
	if m != nil {
		return m.ExcludeNodes
	}
	return nil
}

func (m *AddBlockRequestProto) GetFileId() uint64 {
	if m != nil && m.FileId != nil {
		return *m.FileId
	}
	return Default_AddBlockRequestProto_FileId
}

func (m *AddBlockRequestProto) GetFavoredNodes() []string {
	if m != nil {
		return m.FavoredNodes
	}
	return nil
}

func (m *AddBlockRequestProto) GetFlags() []AddBlockFlagProto {
	if m != nil {
		return m.Flags
	}
	return nil
}

type AddBlockResponseProto struct {
	Block            *LocatedBlockProto `protobuf:"bytes,1,req,name=block" json:"block,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *AddBlockResponseProto) Reset()                    { *m = AddBlockResponseProto{} }
func (m *AddBlockResponseProto) String() string            { return proto.CompactTextString(m) }
func (*AddBlockResponseProto) ProtoMessage()               {}
func (*AddBlockResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{25} }

func (m *AddBlockResponseProto) GetBlock() *LocatedBlockProto {
	if m != nil {
		return m.Block
	}
	return nil
}

type GetAdditionalDatanodeRequestProto struct {
	Src                  *string              `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	Blk                  *ExtendedBlockProto  `protobuf:"bytes,2,req,name=blk" json:"blk,omitempty"`
	Existings            []*DatanodeInfoProto `protobuf:"bytes,3,rep,name=existings" json:"existings,omitempty"`
	Excludes             []*DatanodeInfoProto `protobuf:"bytes,4,rep,name=excludes" json:"excludes,omitempty"`
	NumAdditionalNodes   *uint32              `protobuf:"varint,5,req,name=numAdditionalNodes" json:"numAdditionalNodes,omitempty"`
	ClientName           *string              `protobuf:"bytes,6,req,name=clientName" json:"clientName,omitempty"`
	ExistingStorageUuids []string             `protobuf:"bytes,7,rep,name=existingStorageUuids" json:"existingStorageUuids,omitempty"`
	FileId               *uint64              `protobuf:"varint,8,opt,name=fileId,def=0" json:"fileId,omitempty"`
	XXX_unrecognized     []byte               `json:"-"`
}

func (m *GetAdditionalDatanodeRequestProto) Reset()         { *m = GetAdditionalDatanodeRequestProto{} }
func (m *GetAdditionalDatanodeRequestProto) String() string { return proto.CompactTextString(m) }
func (*GetAdditionalDatanodeRequestProto) ProtoMessage()    {}
func (*GetAdditionalDatanodeRequestProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{26}
}

const Default_GetAdditionalDatanodeRequestProto_FileId uint64 = 0

func (m *GetAdditionalDatanodeRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *GetAdditionalDatanodeRequestProto) GetBlk() *ExtendedBlockProto {
	if m != nil {
		return m.Blk
	}
	return nil
}

func (m *GetAdditionalDatanodeRequestProto) GetExistings() []*DatanodeInfoProto {
	if m != nil {
		return m.Existings
	}
	return nil
}

func (m *GetAdditionalDatanodeRequestProto) GetExcludes() []*DatanodeInfoProto {
	if m != nil {
		return m.Excludes
	}
	return nil
}

func (m *GetAdditionalDatanodeRequestProto) GetNumAdditionalNodes() uint32 {
	if m != nil && m.NumAdditionalNodes != nil {
		return *m.NumAdditionalNodes
	}
	return 0
}

func (m *GetAdditionalDatanodeRequestProto) GetClientName() string {
	if m != nil && m.ClientName != nil {
		return *m.ClientName
	}
	return ""
}

func (m *GetAdditionalDatanodeRequestProto) GetExistingStorageUuids() []string {
	if m != nil {
		return m.ExistingStorageUuids
	}
	return nil
}

func (m *GetAdditionalDatanodeRequestProto) GetFileId() uint64 {
	if m != nil && m.FileId != nil {
		return *m.FileId
	}
	return Default_GetAdditionalDatanodeRequestProto_FileId
}

type GetAdditionalDatanodeResponseProto struct {
	Block            *LocatedBlockProto `protobuf:"bytes,1,req,name=block" json:"block,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *GetAdditionalDatanodeResponseProto) Reset()         { *m = GetAdditionalDatanodeResponseProto{} }
func (m *GetAdditionalDatanodeResponseProto) String() string { return proto.CompactTextString(m) }
func (*GetAdditionalDatanodeResponseProto) ProtoMessage()    {}
func (*GetAdditionalDatanodeResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{27}
}

func (m *GetAdditionalDatanodeResponseProto) GetBlock() *LocatedBlockProto {
	if m != nil {
		return m.Block
	}
	return nil
}

type CompleteRequestProto struct {
	Src              *string             `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	ClientName       *string             `protobuf:"bytes,2,req,name=clientName" json:"clientName,omitempty"`
	Last             *ExtendedBlockProto `protobuf:"bytes,3,opt,name=last" json:"last,omitempty"`
	FileId           *uint64             `protobuf:"varint,4,opt,name=fileId,def=0" json:"fileId,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CompleteRequestProto) Reset()                    { *m = CompleteRequestProto{} }
func (m *CompleteRequestProto) String() string            { return proto.CompactTextString(m) }
func (*CompleteRequestProto) ProtoMessage()               {}
func (*CompleteRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{28} }

const Default_CompleteRequestProto_FileId uint64 = 0

func (m *CompleteRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *CompleteRequestProto) GetClientName() string {
	if m != nil && m.ClientName != nil {
		return *m.ClientName
	}
	return ""
}

func (m *CompleteRequestProto) GetLast() *ExtendedBlockProto {
	if m != nil {
		return m.Last
	}
	return nil
}

func (m *CompleteRequestProto) GetFileId() uint64 {
	if m != nil && m.FileId != nil {
		return *m.FileId
	}
	return Default_CompleteRequestProto_FileId
}

type CompleteResponseProto struct {
	Result           *bool  `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CompleteResponseProto) Reset()                    { *m = CompleteResponseProto{} }
func (m *CompleteResponseProto) String() string            { return proto.CompactTextString(m) }
func (*CompleteResponseProto) ProtoMessage()               {}
func (*CompleteResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{29} }

func (m *CompleteResponseProto) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type ReportBadBlocksRequestProto struct {
	Blocks           []*LocatedBlockProto `protobuf:"bytes,1,rep,name=blocks" json:"blocks,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *ReportBadBlocksRequestProto) Reset()                    { *m = ReportBadBlocksRequestProto{} }
func (m *ReportBadBlocksRequestProto) String() string            { return proto.CompactTextString(m) }
func (*ReportBadBlocksRequestProto) ProtoMessage()               {}
func (*ReportBadBlocksRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{30} }

func (m *ReportBadBlocksRequestProto) GetBlocks() []*LocatedBlockProto {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type ReportBadBlocksResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ReportBadBlocksResponseProto) Reset()                    { *m = ReportBadBlocksResponseProto{} }
func (m *ReportBadBlocksResponseProto) String() string            { return proto.CompactTextString(m) }
func (*ReportBadBlocksResponseProto) ProtoMessage()               {}
func (*ReportBadBlocksResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{31} }

type ConcatRequestProto struct {
	Trg              *string  `protobuf:"bytes,1,req,name=trg" json:"trg,omitempty"`
	Srcs             []string `protobuf:"bytes,2,rep,name=srcs" json:"srcs,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ConcatRequestProto) Reset()                    { *m = ConcatRequestProto{} }
func (m *ConcatRequestProto) String() string            { return proto.CompactTextString(m) }
func (*ConcatRequestProto) ProtoMessage()               {}
func (*ConcatRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{32} }

func (m *ConcatRequestProto) GetTrg() string {
	if m != nil && m.Trg != nil {
		return *m.Trg
	}
	return ""
}

func (m *ConcatRequestProto) GetSrcs() []string {
	if m != nil {
		return m.Srcs
	}
	return nil
}

type ConcatResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ConcatResponseProto) Reset()                    { *m = ConcatResponseProto{} }
func (m *ConcatResponseProto) String() string            { return proto.CompactTextString(m) }
func (*ConcatResponseProto) ProtoMessage()               {}
func (*ConcatResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{33} }

type TruncateRequestProto struct {
	Src              *string `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	NewLength        *uint64 `protobuf:"varint,2,req,name=newLength" json:"newLength,omitempty"`
	ClientName       *string `protobuf:"bytes,3,req,name=clientName" json:"clientName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TruncateRequestProto) Reset()                    { *m = TruncateRequestProto{} }
func (m *TruncateRequestProto) String() string            { return proto.CompactTextString(m) }
func (*TruncateRequestProto) ProtoMessage()               {}
func (*TruncateRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{34} }

func (m *TruncateRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *TruncateRequestProto) GetNewLength() uint64 {
	if m != nil && m.NewLength != nil {
		return *m.NewLength
	}
	return 0
}

func (m *TruncateRequestProto) GetClientName() string {
	if m != nil && m.ClientName != nil {
		return *m.ClientName
	}
	return ""
}

type TruncateResponseProto struct {
	Result           *bool  `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TruncateResponseProto) Reset()                    { *m = TruncateResponseProto{} }
func (m *TruncateResponseProto) String() string            { return proto.CompactTextString(m) }
func (*TruncateResponseProto) ProtoMessage()               {}
func (*TruncateResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{35} }

func (m *TruncateResponseProto) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type RenameRequestProto struct {
	Src              *string `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	Dst              *string `protobuf:"bytes,2,req,name=dst" json:"dst,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RenameRequestProto) Reset()                    { *m = RenameRequestProto{} }
func (m *RenameRequestProto) String() string            { return proto.CompactTextString(m) }
func (*RenameRequestProto) ProtoMessage()               {}
func (*RenameRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{36} }

func (m *RenameRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *RenameRequestProto) GetDst() string {
	if m != nil && m.Dst != nil {
		return *m.Dst
	}
	return ""
}

type RenameResponseProto struct {
	Result           *bool  `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RenameResponseProto) Reset()                    { *m = RenameResponseProto{} }
func (m *RenameResponseProto) String() string            { return proto.CompactTextString(m) }
func (*RenameResponseProto) ProtoMessage()               {}
func (*RenameResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{37} }

func (m *RenameResponseProto) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type Rename2RequestProto struct {
	Src              *string `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	Dst              *string `protobuf:"bytes,2,req,name=dst" json:"dst,omitempty"`
	OverwriteDest    *bool   `protobuf:"varint,3,req,name=overwriteDest" json:"overwriteDest,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Rename2RequestProto) Reset()                    { *m = Rename2RequestProto{} }
func (m *Rename2RequestProto) String() string            { return proto.CompactTextString(m) }
func (*Rename2RequestProto) ProtoMessage()               {}
func (*Rename2RequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{38} }

func (m *Rename2RequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *Rename2RequestProto) GetDst() string {
	if m != nil && m.Dst != nil {
		return *m.Dst
	}
	return ""
}

func (m *Rename2RequestProto) GetOverwriteDest() bool {
	if m != nil && m.OverwriteDest != nil {
		return *m.OverwriteDest
	}
	return false
}

type Rename2ResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Rename2ResponseProto) Reset()                    { *m = Rename2ResponseProto{} }
func (m *Rename2ResponseProto) String() string            { return proto.CompactTextString(m) }
func (*Rename2ResponseProto) ProtoMessage()               {}
func (*Rename2ResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{39} }

type DeleteRequestProto struct {
	Src              *string `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	Recursive        *bool   `protobuf:"varint,2,req,name=recursive" json:"recursive,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DeleteRequestProto) Reset()                    { *m = DeleteRequestProto{} }
func (m *DeleteRequestProto) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequestProto) ProtoMessage()               {}
func (*DeleteRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{40} }

func (m *DeleteRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *DeleteRequestProto) GetRecursive() bool {
	if m != nil && m.Recursive != nil {
		return *m.Recursive
	}
	return false
}

type DeleteResponseProto struct {
	Result           *bool  `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DeleteResponseProto) Reset()                    { *m = DeleteResponseProto{} }
func (m *DeleteResponseProto) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponseProto) ProtoMessage()               {}
func (*DeleteResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{41} }

func (m *DeleteResponseProto) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type MkdirsRequestProto struct {
	Src              *string            `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	Masked           *FsPermissionProto `protobuf:"bytes,2,req,name=masked" json:"masked,omitempty"`
	CreateParent     *bool              `protobuf:"varint,3,req,name=createParent" json:"createParent,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *MkdirsRequestProto) Reset()                    { *m = MkdirsRequestProto{} }
func (m *MkdirsRequestProto) String() string            { return proto.CompactTextString(m) }
func (*MkdirsRequestProto) ProtoMessage()               {}
func (*MkdirsRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{42} }

func (m *MkdirsRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *MkdirsRequestProto) GetMasked() *FsPermissionProto {
	if m != nil {
		return m.Masked
	}
	return nil
}

func (m *MkdirsRequestProto) GetCreateParent() bool {
	if m != nil && m.CreateParent != nil {
		return *m.CreateParent
	}
	return false
}

type MkdirsResponseProto struct {
	Result           *bool  `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MkdirsResponseProto) Reset()                    { *m = MkdirsResponseProto{} }
func (m *MkdirsResponseProto) String() string            { return proto.CompactTextString(m) }
func (*MkdirsResponseProto) ProtoMessage()               {}
func (*MkdirsResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{43} }

func (m *MkdirsResponseProto) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type GetListingRequestProto struct {
	Src              *string `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	StartAfter       []byte  `protobuf:"bytes,2,req,name=startAfter" json:"startAfter,omitempty"`
	NeedLocation     *bool   `protobuf:"varint,3,req,name=needLocation" json:"needLocation,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetListingRequestProto) Reset()                    { *m = GetListingRequestProto{} }
func (m *GetListingRequestProto) String() string            { return proto.CompactTextString(m) }
func (*GetListingRequestProto) ProtoMessage()               {}
func (*GetListingRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{44} }

func (m *GetListingRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *GetListingRequestProto) GetStartAfter() []byte {
	if m != nil {
		return m.StartAfter
	}
	return nil
}

func (m *GetListingRequestProto) GetNeedLocation() bool {
	if m != nil && m.NeedLocation != nil {
		return *m.NeedLocation
	}
	return false
}

type GetListingResponseProto struct {
	DirList          *DirectoryListingProto `protobuf:"bytes,1,opt,name=dirList" json:"dirList,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *GetListingResponseProto) Reset()                    { *m = GetListingResponseProto{} }
func (m *GetListingResponseProto) String() string            { return proto.CompactTextString(m) }
func (*GetListingResponseProto) ProtoMessage()               {}
func (*GetListingResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{45} }

func (m *GetListingResponseProto) GetDirList() *DirectoryListingProto {
	if m != nil {
		return m.DirList
	}
	return nil
}

type GetSnapshottableDirListingRequestProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetSnapshottableDirListingRequestProto) Reset() {
	*m = GetSnapshottableDirListingRequestProto{}
}
func (m *GetSnapshottableDirListingRequestProto) String() string { return proto.CompactTextString(m) }
func (*GetSnapshottableDirListingRequestProto) ProtoMessage()    {}
func (*GetSnapshottableDirListingRequestProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{46}
}

type GetSnapshottableDirListingResponseProto struct {
	SnapshottableDirList *SnapshottableDirectoryListingProto `protobuf:"bytes,1,opt,name=snapshottableDirList" json:"snapshottableDirList,omitempty"`
	XXX_unrecognized     []byte                              `json:"-"`
}

func (m *GetSnapshottableDirListingResponseProto) Reset() {
	*m = GetSnapshottableDirListingResponseProto{}
}
func (m *GetSnapshottableDirListingResponseProto) String() string { return proto.CompactTextString(m) }
func (*GetSnapshottableDirListingResponseProto) ProtoMessage()    {}
func (*GetSnapshottableDirListingResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{47}
}

func (m *GetSnapshottableDirListingResponseProto) GetSnapshottableDirList() *SnapshottableDirectoryListingProto {
	if m != nil {
		return m.SnapshottableDirList
	}
	return nil
}

type GetSnapshotDiffReportRequestProto struct {
	SnapshotRoot     *string `protobuf:"bytes,1,req,name=snapshotRoot" json:"snapshotRoot,omitempty"`
	FromSnapshot     *string `protobuf:"bytes,2,req,name=fromSnapshot" json:"fromSnapshot,omitempty"`
	ToSnapshot       *string `protobuf:"bytes,3,req,name=toSnapshot" json:"toSnapshot,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetSnapshotDiffReportRequestProto) Reset()         { *m = GetSnapshotDiffReportRequestProto{} }
func (m *GetSnapshotDiffReportRequestProto) String() string { return proto.CompactTextString(m) }
func (*GetSnapshotDiffReportRequestProto) ProtoMessage()    {}
func (*GetSnapshotDiffReportRequestProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{48}
}

func (m *GetSnapshotDiffReportRequestProto) GetSnapshotRoot() string {
	if m != nil && m.SnapshotRoot != nil {
		return *m.SnapshotRoot
	}
	return ""
}

func (m *GetSnapshotDiffReportRequestProto) GetFromSnapshot() string {
	if m != nil && m.FromSnapshot != nil {
		return *m.FromSnapshot
	}
	return ""
}

func (m *GetSnapshotDiffReportRequestProto) GetToSnapshot() string {
	if m != nil && m.ToSnapshot != nil {
		return *m.ToSnapshot
	}
	return ""
}

type GetSnapshotDiffReportResponseProto struct {
	DiffReport       *SnapshotDiffReportProto `protobuf:"bytes,1,req,name=diffReport" json:"diffReport,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *GetSnapshotDiffReportResponseProto) Reset()         { *m = GetSnapshotDiffReportResponseProto{} }
func (m *GetSnapshotDiffReportResponseProto) String() string { return proto.CompactTextString(m) }
func (*GetSnapshotDiffReportResponseProto) ProtoMessage()    {}
func (*GetSnapshotDiffReportResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{49}
}

func (m *GetSnapshotDiffReportResponseProto) GetDiffReport() *SnapshotDiffReportProto {
	if m != nil {
		return m.DiffReport
	}
	return nil
}

type RenewLeaseRequestProto struct {
	ClientName       *string `protobuf:"bytes,1,req,name=clientName" json:"clientName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RenewLeaseRequestProto) Reset()                    { *m = RenewLeaseRequestProto{} }
func (m *RenewLeaseRequestProto) String() string            { return proto.CompactTextString(m) }
func (*RenewLeaseRequestProto) ProtoMessage()               {}
func (*RenewLeaseRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{50} }

func (m *RenewLeaseRequestProto) GetClientName() string {
	if m != nil && m.ClientName != nil {
		return *m.ClientName
	}
	return ""
}

type RenewLeaseResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RenewLeaseResponseProto) Reset()                    { *m = RenewLeaseResponseProto{} }
func (m *RenewLeaseResponseProto) String() string            { return proto.CompactTextString(m) }
func (*RenewLeaseResponseProto) ProtoMessage()               {}
func (*RenewLeaseResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{51} }

type RecoverLeaseRequestProto struct {
	Src              *string `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	ClientName       *string `protobuf:"bytes,2,req,name=clientName" json:"clientName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RecoverLeaseRequestProto) Reset()                    { *m = RecoverLeaseRequestProto{} }
func (m *RecoverLeaseRequestProto) String() string            { return proto.CompactTextString(m) }
func (*RecoverLeaseRequestProto) ProtoMessage()               {}
func (*RecoverLeaseRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{52} }

func (m *RecoverLeaseRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *RecoverLeaseRequestProto) GetClientName() string {
	if m != nil && m.ClientName != nil {
		return *m.ClientName
	}
	return ""
}

type RecoverLeaseResponseProto struct {
	Result           *bool  `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RecoverLeaseResponseProto) Reset()                    { *m = RecoverLeaseResponseProto{} }
func (m *RecoverLeaseResponseProto) String() string            { return proto.CompactTextString(m) }
func (*RecoverLeaseResponseProto) ProtoMessage()               {}
func (*RecoverLeaseResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{53} }

func (m *RecoverLeaseResponseProto) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type GetFsStatusRequestProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetFsStatusRequestProto) Reset()                    { *m = GetFsStatusRequestProto{} }
func (m *GetFsStatusRequestProto) String() string            { return proto.CompactTextString(m) }
func (*GetFsStatusRequestProto) ProtoMessage()               {}
func (*GetFsStatusRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{54} }

type GetFsStatsResponseProto struct {
	Capacity              *uint64 `protobuf:"varint,1,req,name=capacity" json:"capacity,omitempty"`
	Used                  *uint64 `protobuf:"varint,2,req,name=used" json:"used,omitempty"`
	Remaining             *uint64 `protobuf:"varint,3,req,name=remaining" json:"remaining,omitempty"`
	UnderReplicated       *uint64 `protobuf:"varint,4,req,name=under_replicated,json=underReplicated" json:"under_replicated,omitempty"`
	CorruptBlocks         *uint64 `protobuf:"varint,5,req,name=corrupt_blocks,json=corruptBlocks" json:"corrupt_blocks,omitempty"`
	MissingBlocks         *uint64 `protobuf:"varint,6,req,name=missing_blocks,json=missingBlocks" json:"missing_blocks,omitempty"`
	MissingReplOneBlocks  *uint64 `protobuf:"varint,7,opt,name=missing_repl_one_blocks,json=missingReplOneBlocks" json:"missing_repl_one_blocks,omitempty"`
	BlocksInFuture        *uint64 `protobuf:"varint,8,opt,name=blocks_in_future,json=blocksInFuture" json:"blocks_in_future,omitempty"`
	PendingDeletionBlocks *uint64 `protobuf:"varint,9,opt,name=pending_deletion_blocks,json=pendingDeletionBlocks" json:"pending_deletion_blocks,omitempty"`
	XXX_unrecognized      []byte  `json:"-"`
}

func (m *GetFsStatsResponseProto) Reset()                    { *m = GetFsStatsResponseProto{} }
func (m *GetFsStatsResponseProto) String() string            { return proto.CompactTextString(m) }
func (*GetFsStatsResponseProto) ProtoMessage()               {}
func (*GetFsStatsResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{55} }

func (m *GetFsStatsResponseProto) GetCapacity() uint64 {
	if m != nil && m.Capacity != nil {
		return *m.Capacity
	}
	return 0
}

func (m *GetFsStatsResponseProto) GetUsed() uint64 {
	if m != nil && m.Used != nil {
		return *m.Used
	}
	return 0
}

func (m *GetFsStatsResponseProto) GetRemaining() uint64 {
	if m != nil && m.Remaining != nil {
		return *m.Remaining
	}
	return 0
}

func (m *GetFsStatsResponseProto) GetUnderReplicated() uint64 {
	if m != nil && m.UnderReplicated != nil {
		return *m.UnderReplicated
	}
	return 0
}

func (m *GetFsStatsResponseProto) GetCorruptBlocks() uint64 {
	if m != nil && m.CorruptBlocks != nil {
		return *m.CorruptBlocks
	}
	return 0
}

func (m *GetFsStatsResponseProto) GetMissingBlocks() uint64 {
	if m != nil && m.MissingBlocks != nil {
		return *m.MissingBlocks
	}
	return 0
}

func (m *GetFsStatsResponseProto) GetMissingReplOneBlocks() uint64 {
	if m != nil && m.MissingReplOneBlocks != nil {
		return *m.MissingReplOneBlocks
	}
	return 0
}

func (m *GetFsStatsResponseProto) GetBlocksInFuture() uint64 {
	if m != nil && m.BlocksInFuture != nil {
		return *m.BlocksInFuture
	}
	return 0
}

func (m *GetFsStatsResponseProto) GetPendingDeletionBlocks() uint64 {
	if m != nil && m.PendingDeletionBlocks != nil {
		return *m.PendingDeletionBlocks
	}
	return 0
}

type GetDatanodeReportRequestProto struct {
	Type             *DatanodeReportTypeProto `protobuf:"varint,1,req,name=type,enum=hadoop.hdfs.DatanodeReportTypeProto" json:"type,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *GetDatanodeReportRequestProto) Reset()                    { *m = GetDatanodeReportRequestProto{} }
func (m *GetDatanodeReportRequestProto) String() string            { return proto.CompactTextString(m) }
func (*GetDatanodeReportRequestProto) ProtoMessage()               {}
func (*GetDatanodeReportRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{56} }

func (m *GetDatanodeReportRequestProto) GetType() DatanodeReportTypeProto {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return DatanodeReportTypeProto_ALL
}

type GetDatanodeReportResponseProto struct {
	Di               []*DatanodeInfoProto `protobuf:"bytes,1,rep,name=di" json:"di,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *GetDatanodeReportResponseProto) Reset()                    { *m = GetDatanodeReportResponseProto{} }
func (m *GetDatanodeReportResponseProto) String() string            { return proto.CompactTextString(m) }
func (*GetDatanodeReportResponseProto) ProtoMessage()               {}
func (*GetDatanodeReportResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{57} }

func (m *GetDatanodeReportResponseProto) GetDi() []*DatanodeInfoProto {
	if m != nil {
		return m.Di
	}
	return nil
}

type GetDatanodeStorageReportRequestProto struct {
	Type             *DatanodeReportTypeProto `protobuf:"varint,1,req,name=type,enum=hadoop.hdfs.DatanodeReportTypeProto" json:"type,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *GetDatanodeStorageReportRequestProto) Reset()         { *m = GetDatanodeStorageReportRequestProto{} }
func (m *GetDatanodeStorageReportRequestProto) String() string { return proto.CompactTextString(m) }
func (*GetDatanodeStorageReportRequestProto) ProtoMessage()    {}
func (*GetDatanodeStorageReportRequestProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{58}
}

func (m *GetDatanodeStorageReportRequestProto) GetType() DatanodeReportTypeProto {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return DatanodeReportTypeProto_ALL
}

type DatanodeStorageReportProto struct {
	DatanodeInfo     *DatanodeInfoProto    `protobuf:"bytes,1,req,name=datanodeInfo" json:"datanodeInfo,omitempty"`
	StorageReports   []*StorageReportProto `protobuf:"bytes,2,rep,name=storageReports" json:"storageReports,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *DatanodeStorageReportProto) Reset()                    { *m = DatanodeStorageReportProto{} }
func (m *DatanodeStorageReportProto) String() string            { return proto.CompactTextString(m) }
func (*DatanodeStorageReportProto) ProtoMessage()               {}
func (*DatanodeStorageReportProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{59} }

func (m *DatanodeStorageReportProto) GetDatanodeInfo() *DatanodeInfoProto {
	if m != nil {
		return m.DatanodeInfo
	}
	return nil
}

func (m *DatanodeStorageReportProto) GetStorageReports() []*StorageReportProto {
	if m != nil {
		return m.StorageReports
	}
	return nil
}

type GetDatanodeStorageReportResponseProto struct {
	DatanodeStorageReports []*DatanodeStorageReportProto `protobuf:"bytes,1,rep,name=datanodeStorageReports" json:"datanodeStorageReports,omitempty"`
	XXX_unrecognized       []byte                        `json:"-"`
}

func (m *GetDatanodeStorageReportResponseProto) Reset()         { *m = GetDatanodeStorageReportResponseProto{} }
func (m *GetDatanodeStorageReportResponseProto) String() string { return proto.CompactTextString(m) }
func (*GetDatanodeStorageReportResponseProto) ProtoMessage()    {}
func (*GetDatanodeStorageReportResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{60}
}

func (m *GetDatanodeStorageReportResponseProto) GetDatanodeStorageReports() []*DatanodeStorageReportProto {
	if m != nil {
		return m.DatanodeStorageReports
	}
	return nil
}

type GetPreferredBlockSizeRequestProto struct {
	Filename         *string `protobuf:"bytes,1,req,name=filename" json:"filename,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetPreferredBlockSizeRequestProto) Reset()         { *m = GetPreferredBlockSizeRequestProto{} }
func (m *GetPreferredBlockSizeRequestProto) String() string { return proto.CompactTextString(m) }
func (*GetPreferredBlockSizeRequestProto) ProtoMessage()    {}
func (*GetPreferredBlockSizeRequestProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{61}
}

func (m *GetPreferredBlockSizeRequestProto) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

type GetPreferredBlockSizeResponseProto struct {
	Bsize            *uint64 `protobuf:"varint,1,req,name=bsize" json:"bsize,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetPreferredBlockSizeResponseProto) Reset()         { *m = GetPreferredBlockSizeResponseProto{} }
func (m *GetPreferredBlockSizeResponseProto) String() string { return proto.CompactTextString(m) }
func (*GetPreferredBlockSizeResponseProto) ProtoMessage()    {}
func (*GetPreferredBlockSizeResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{62}
}

func (m *GetPreferredBlockSizeResponseProto) GetBsize() uint64 {
	if m != nil && m.Bsize != nil {
		return *m.Bsize
	}
	return 0
}

type SetSafeModeRequestProto struct {
	Action           *SafeModeActionProto `protobuf:"varint,1,req,name=action,enum=hadoop.hdfs.SafeModeActionProto" json:"action,omitempty"`
	Checked          *bool                `protobuf:"varint,2,opt,name=checked,def=0" json:"checked,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *SetSafeModeRequestProto) Reset()                    { *m = SetSafeModeRequestProto{} }
func (m *SetSafeModeRequestProto) String() string            { return proto.CompactTextString(m) }
func (*SetSafeModeRequestProto) ProtoMessage()               {}
func (*SetSafeModeRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{63} }

const Default_SetSafeModeRequestProto_Checked bool = false

func (m *SetSafeModeRequestProto) GetAction() SafeModeActionProto {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return SafeModeActionProto_SAFEMODE_LEAVE
}

func (m *SetSafeModeRequestProto) GetChecked() bool {
	if m != nil && m.Checked != nil {
		return *m.Checked
	}
	return Default_SetSafeModeRequestProto_Checked
}

type SetSafeModeResponseProto struct {
	Result           *bool  `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SetSafeModeResponseProto) Reset()                    { *m = SetSafeModeResponseProto{} }
func (m *SetSafeModeResponseProto) String() string            { return proto.CompactTextString(m) }
func (*SetSafeModeResponseProto) ProtoMessage()               {}
func (*SetSafeModeResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{64} }

func (m *SetSafeModeResponseProto) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type SaveNamespaceRequestProto struct {
	TimeWindow       *uint64 `protobuf:"varint,1,opt,name=timeWindow,def=0" json:"timeWindow,omitempty"`
	TxGap            *uint64 `protobuf:"varint,2,opt,name=txGap,def=0" json:"txGap,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SaveNamespaceRequestProto) Reset()                    { *m = SaveNamespaceRequestProto{} }
func (m *SaveNamespaceRequestProto) String() string            { return proto.CompactTextString(m) }
func (*SaveNamespaceRequestProto) ProtoMessage()               {}
func (*SaveNamespaceRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{65} }

const Default_SaveNamespaceRequestProto_TimeWindow uint64 = 0
const Default_SaveNamespaceRequestProto_TxGap uint64 = 0

func (m *SaveNamespaceRequestProto) GetTimeWindow() uint64 {
	if m != nil && m.TimeWindow != nil {
		return *m.TimeWindow
	}
	return Default_SaveNamespaceRequestProto_TimeWindow
}

func (m *SaveNamespaceRequestProto) GetTxGap() uint64 {
	if m != nil && m.TxGap != nil {
		return *m.TxGap
	}
	return Default_SaveNamespaceRequestProto_TxGap
}

type SaveNamespaceResponseProto struct {
	Saved            *bool  `protobuf:"varint,1,opt,name=saved,def=1" json:"saved,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SaveNamespaceResponseProto) Reset()                    { *m = SaveNamespaceResponseProto{} }
func (m *SaveNamespaceResponseProto) String() string            { return proto.CompactTextString(m) }
func (*SaveNamespaceResponseProto) ProtoMessage()               {}
func (*SaveNamespaceResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{66} }

const Default_SaveNamespaceResponseProto_Saved bool = true

func (m *SaveNamespaceResponseProto) GetSaved() bool {
	if m != nil && m.Saved != nil {
		return *m.Saved
	}
	return Default_SaveNamespaceResponseProto_Saved
}

type RollEditsRequestProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RollEditsRequestProto) Reset()                    { *m = RollEditsRequestProto{} }
func (m *RollEditsRequestProto) String() string            { return proto.CompactTextString(m) }
func (*RollEditsRequestProto) ProtoMessage()               {}
func (*RollEditsRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{67} }

type RollEditsResponseProto struct {
	NewSegmentTxId   *uint64 `protobuf:"varint,1,req,name=newSegmentTxId" json:"newSegmentTxId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RollEditsResponseProto) Reset()                    { *m = RollEditsResponseProto{} }
func (m *RollEditsResponseProto) String() string            { return proto.CompactTextString(m) }
func (*RollEditsResponseProto) ProtoMessage()               {}
func (*RollEditsResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{68} }

func (m *RollEditsResponseProto) GetNewSegmentTxId() uint64 {
	if m != nil && m.NewSegmentTxId != nil {
		return *m.NewSegmentTxId
	}
	return 0
}

type RestoreFailedStorageRequestProto struct {
	Arg              *string `protobuf:"bytes,1,req,name=arg" json:"arg,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RestoreFailedStorageRequestProto) Reset()         { *m = RestoreFailedStorageRequestProto{} }
func (m *RestoreFailedStorageRequestProto) String() string { return proto.CompactTextString(m) }
func (*RestoreFailedStorageRequestProto) ProtoMessage()    {}
func (*RestoreFailedStorageRequestProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{69}
}

func (m *RestoreFailedStorageRequestProto) GetArg() string {
	if m != nil && m.Arg != nil {
		return *m.Arg
	}
	return ""
}

type RestoreFailedStorageResponseProto struct {
	Result           *bool  `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RestoreFailedStorageResponseProto) Reset()         { *m = RestoreFailedStorageResponseProto{} }
func (m *RestoreFailedStorageResponseProto) String() string { return proto.CompactTextString(m) }
func (*RestoreFailedStorageResponseProto) ProtoMessage()    {}
func (*RestoreFailedStorageResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{70}
}

func (m *RestoreFailedStorageResponseProto) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type RefreshNodesRequestProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RefreshNodesRequestProto) Reset()                    { *m = RefreshNodesRequestProto{} }
func (m *RefreshNodesRequestProto) String() string            { return proto.CompactTextString(m) }
func (*RefreshNodesRequestProto) ProtoMessage()               {}
func (*RefreshNodesRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{71} }

type RefreshNodesResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RefreshNodesResponseProto) Reset()                    { *m = RefreshNodesResponseProto{} }
func (m *RefreshNodesResponseProto) String() string            { return proto.CompactTextString(m) }
func (*RefreshNodesResponseProto) ProtoMessage()               {}
func (*RefreshNodesResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{72} }

type FinalizeUpgradeRequestProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *FinalizeUpgradeRequestProto) Reset()                    { *m = FinalizeUpgradeRequestProto{} }
func (m *FinalizeUpgradeRequestProto) String() string            { return proto.CompactTextString(m) }
func (*FinalizeUpgradeRequestProto) ProtoMessage()               {}
func (*FinalizeUpgradeRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{73} }

type FinalizeUpgradeResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *FinalizeUpgradeResponseProto) Reset()                    { *m = FinalizeUpgradeResponseProto{} }
func (m *FinalizeUpgradeResponseProto) String() string            { return proto.CompactTextString(m) }
func (*FinalizeUpgradeResponseProto) ProtoMessage()               {}
func (*FinalizeUpgradeResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{74} }

type RollingUpgradeRequestProto struct {
	Action           *RollingUpgradeActionProto `protobuf:"varint,1,req,name=action,enum=hadoop.hdfs.RollingUpgradeActionProto" json:"action,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *RollingUpgradeRequestProto) Reset()                    { *m = RollingUpgradeRequestProto{} }
func (m *RollingUpgradeRequestProto) String() string            { return proto.CompactTextString(m) }
func (*RollingUpgradeRequestProto) ProtoMessage()               {}
func (*RollingUpgradeRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{75} }

func (m *RollingUpgradeRequestProto) GetAction() RollingUpgradeActionProto {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return RollingUpgradeActionProto_QUERY
}

type RollingUpgradeInfoProto struct {
	Status                *RollingUpgradeStatusProto `protobuf:"bytes,1,req,name=status" json:"status,omitempty"`
	StartTime             *uint64                    `protobuf:"varint,2,req,name=startTime" json:"startTime,omitempty"`
	FinalizeTime          *uint64                    `protobuf:"varint,3,req,name=finalizeTime" json:"finalizeTime,omitempty"`
	CreatedRollbackImages *bool                      `protobuf:"varint,4,req,name=createdRollbackImages" json:"createdRollbackImages,omitempty"`
	XXX_unrecognized      []byte                     `json:"-"`
}

func (m *RollingUpgradeInfoProto) Reset()                    { *m = RollingUpgradeInfoProto{} }
func (m *RollingUpgradeInfoProto) String() string            { return proto.CompactTextString(m) }
func (*RollingUpgradeInfoProto) ProtoMessage()               {}
func (*RollingUpgradeInfoProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{76} }

func (m *RollingUpgradeInfoProto) GetStatus() *RollingUpgradeStatusProto {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *RollingUpgradeInfoProto) GetStartTime() uint64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *RollingUpgradeInfoProto) GetFinalizeTime() uint64 {
	if m != nil && m.FinalizeTime != nil {
		return *m.FinalizeTime
	}
	return 0
}

func (m *RollingUpgradeInfoProto) GetCreatedRollbackImages() bool {
	if m != nil && m.CreatedRollbackImages != nil {
		return *m.CreatedRollbackImages
	}
	return false
}

type RollingUpgradeResponseProto struct {
	RollingUpgradeInfo *RollingUpgradeInfoProto `protobuf:"bytes,1,opt,name=rollingUpgradeInfo" json:"rollingUpgradeInfo,omitempty"`
	XXX_unrecognized   []byte                   `json:"-"`
}

func (m *RollingUpgradeResponseProto) Reset()                    { *m = RollingUpgradeResponseProto{} }
func (m *RollingUpgradeResponseProto) String() string            { return proto.CompactTextString(m) }
func (*RollingUpgradeResponseProto) ProtoMessage()               {}
func (*RollingUpgradeResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{77} }

func (m *RollingUpgradeResponseProto) GetRollingUpgradeInfo() *RollingUpgradeInfoProto {
	if m != nil {
		return m.RollingUpgradeInfo
	}
	return nil
}

type ListCorruptFileBlocksRequestProto struct {
	Path             *string `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	Cookie           *string `protobuf:"bytes,2,opt,name=cookie" json:"cookie,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ListCorruptFileBlocksRequestProto) Reset()         { *m = ListCorruptFileBlocksRequestProto{} }
func (m *ListCorruptFileBlocksRequestProto) String() string { return proto.CompactTextString(m) }
func (*ListCorruptFileBlocksRequestProto) ProtoMessage()    {}
func (*ListCorruptFileBlocksRequestProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{78}
}

func (m *ListCorruptFileBlocksRequestProto) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *ListCorruptFileBlocksRequestProto) GetCookie() string {
	if m != nil && m.Cookie != nil {
		return *m.Cookie
	}
	return ""
}

type ListCorruptFileBlocksResponseProto struct {
	Corrupt          *CorruptFileBlocksProto `protobuf:"bytes,1,req,name=corrupt" json:"corrupt,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *ListCorruptFileBlocksResponseProto) Reset()         { *m = ListCorruptFileBlocksResponseProto{} }
func (m *ListCorruptFileBlocksResponseProto) String() string { return proto.CompactTextString(m) }
func (*ListCorruptFileBlocksResponseProto) ProtoMessage()    {}
func (*ListCorruptFileBlocksResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{79}
}

func (m *ListCorruptFileBlocksResponseProto) GetCorrupt() *CorruptFileBlocksProto {
	if m != nil {
		return m.Corrupt
	}
	return nil
}

type MetaSaveRequestProto struct {
	Filename         *string `protobuf:"bytes,1,req,name=filename" json:"filename,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MetaSaveRequestProto) Reset()                    { *m = MetaSaveRequestProto{} }
func (m *MetaSaveRequestProto) String() string            { return proto.CompactTextString(m) }
func (*MetaSaveRequestProto) ProtoMessage()               {}
func (*MetaSaveRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{80} }

func (m *MetaSaveRequestProto) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

type MetaSaveResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *MetaSaveResponseProto) Reset()                    { *m = MetaSaveResponseProto{} }
func (m *MetaSaveResponseProto) String() string            { return proto.CompactTextString(m) }
func (*MetaSaveResponseProto) ProtoMessage()               {}
func (*MetaSaveResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{81} }

type GetFileInfoRequestProto struct {
	Src              *string `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetFileInfoRequestProto) Reset()                    { *m = GetFileInfoRequestProto{} }
func (m *GetFileInfoRequestProto) String() string            { return proto.CompactTextString(m) }
func (*GetFileInfoRequestProto) ProtoMessage()               {}
func (*GetFileInfoRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{82} }

func (m *GetFileInfoRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

type GetFileInfoResponseProto struct {
	Fs               *HdfsFileStatusProto `protobuf:"bytes,1,opt,name=fs" json:"fs,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *GetFileInfoResponseProto) Reset()                    { *m = GetFileInfoResponseProto{} }
func (m *GetFileInfoResponseProto) String() string            { return proto.CompactTextString(m) }
func (*GetFileInfoResponseProto) ProtoMessage()               {}
func (*GetFileInfoResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{83} }

func (m *GetFileInfoResponseProto) GetFs() *HdfsFileStatusProto {
	if m != nil {
		return m.Fs
	}
	return nil
}

type IsFileClosedRequestProto struct {
	Src              *string `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IsFileClosedRequestProto) Reset()                    { *m = IsFileClosedRequestProto{} }
func (m *IsFileClosedRequestProto) String() string            { return proto.CompactTextString(m) }
func (*IsFileClosedRequestProto) ProtoMessage()               {}
func (*IsFileClosedRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{84} }

func (m *IsFileClosedRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

type IsFileClosedResponseProto struct {
	Result           *bool  `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *IsFileClosedResponseProto) Reset()                    { *m = IsFileClosedResponseProto{} }
func (m *IsFileClosedResponseProto) String() string            { return proto.CompactTextString(m) }
func (*IsFileClosedResponseProto) ProtoMessage()               {}
func (*IsFileClosedResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{85} }

func (m *IsFileClosedResponseProto) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type CacheDirectiveInfoProto struct {
	Id               *int64                             `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Path             *string                            `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Replication      *uint32                            `protobuf:"varint,3,opt,name=replication" json:"replication,omitempty"`
	Pool             *string                            `protobuf:"bytes,4,opt,name=pool" json:"pool,omitempty"`
	Expiration       *CacheDirectiveInfoExpirationProto `protobuf:"bytes,5,opt,name=expiration" json:"expiration,omitempty"`
	XXX_unrecognized []byte                             `json:"-"`
}

func (m *CacheDirectiveInfoProto) Reset()                    { *m = CacheDirectiveInfoProto{} }
func (m *CacheDirectiveInfoProto) String() string            { return proto.CompactTextString(m) }
func (*CacheDirectiveInfoProto) ProtoMessage()               {}
func (*CacheDirectiveInfoProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{86} }

func (m *CacheDirectiveInfoProto) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CacheDirectiveInfoProto) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *CacheDirectiveInfoProto) GetReplication() uint32 {
	if m != nil && m.Replication != nil {
		return *m.Replication
	}
	return 0
}

func (m *CacheDirectiveInfoProto) GetPool() string {
	if m != nil && m.Pool != nil {
		return *m.Pool
	}
	return ""
}

func (m *CacheDirectiveInfoProto) GetExpiration() *CacheDirectiveInfoExpirationProto {
	if m != nil {
		return m.Expiration
	}
	return nil
}

type CacheDirectiveInfoExpirationProto struct {
	Millis           *int64 `protobuf:"varint,1,req,name=millis" json:"millis,omitempty"`
	IsRelative       *bool  `protobuf:"varint,2,req,name=isRelative" json:"isRelative,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CacheDirectiveInfoExpirationProto) Reset()         { *m = CacheDirectiveInfoExpirationProto{} }
func (m *CacheDirectiveInfoExpirationProto) String() string { return proto.CompactTextString(m) }
func (*CacheDirectiveInfoExpirationProto) ProtoMessage()    {}
func (*CacheDirectiveInfoExpirationProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{87}
}

func (m *CacheDirectiveInfoExpirationProto) GetMillis() int64 {
	if m != nil && m.Millis != nil {
		return *m.Millis
	}
	return 0
}

func (m *CacheDirectiveInfoExpirationProto) GetIsRelative() bool {
	if m != nil && m.IsRelative != nil {
		return *m.IsRelative
	}
	return false
}

type CacheDirectiveStatsProto struct {
	BytesNeeded      *int64 `protobuf:"varint,1,req,name=bytesNeeded" json:"bytesNeeded,omitempty"`
	BytesCached      *int64 `protobuf:"varint,2,req,name=bytesCached" json:"bytesCached,omitempty"`
	FilesNeeded      *int64 `protobuf:"varint,3,req,name=filesNeeded" json:"filesNeeded,omitempty"`
	FilesCached      *int64 `protobuf:"varint,4,req,name=filesCached" json:"filesCached,omitempty"`
	HasExpired       *bool  `protobuf:"varint,5,req,name=hasExpired" json:"hasExpired,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CacheDirectiveStatsProto) Reset()                    { *m = CacheDirectiveStatsProto{} }
func (m *CacheDirectiveStatsProto) String() string            { return proto.CompactTextString(m) }
func (*CacheDirectiveStatsProto) ProtoMessage()               {}
func (*CacheDirectiveStatsProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{88} }

func (m *CacheDirectiveStatsProto) GetBytesNeeded() int64 {
	if m != nil && m.BytesNeeded != nil {
		return *m.BytesNeeded
	}
	return 0
}

func (m *CacheDirectiveStatsProto) GetBytesCached() int64 {
	if m != nil && m.BytesCached != nil {
		return *m.BytesCached
	}
	return 0
}

func (m *CacheDirectiveStatsProto) GetFilesNeeded() int64 {
	if m != nil && m.FilesNeeded != nil {
		return *m.FilesNeeded
	}
	return 0
}

func (m *CacheDirectiveStatsProto) GetFilesCached() int64 {
	if m != nil && m.FilesCached != nil {
		return *m.FilesCached
	}
	return 0
}

func (m *CacheDirectiveStatsProto) GetHasExpired() bool {
	if m != nil && m.HasExpired != nil {
		return *m.HasExpired
	}
	return false
}

type AddCacheDirectiveRequestProto struct {
	Info             *CacheDirectiveInfoProto `protobuf:"bytes,1,req,name=info" json:"info,omitempty"`
	CacheFlags       *uint32                  `protobuf:"varint,2,opt,name=cacheFlags" json:"cacheFlags,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *AddCacheDirectiveRequestProto) Reset()                    { *m = AddCacheDirectiveRequestProto{} }
func (m *AddCacheDirectiveRequestProto) String() string            { return proto.CompactTextString(m) }
func (*AddCacheDirectiveRequestProto) ProtoMessage()               {}
func (*AddCacheDirectiveRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{89} }

func (m *AddCacheDirectiveRequestProto) GetInfo() *CacheDirectiveInfoProto {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *AddCacheDirectiveRequestProto) GetCacheFlags() uint32 {
	if m != nil && m.CacheFlags != nil {
		return *m.CacheFlags
	}
	return 0
}

type AddCacheDirectiveResponseProto struct {
	Id               *int64 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AddCacheDirectiveResponseProto) Reset()                    { *m = AddCacheDirectiveResponseProto{} }
func (m *AddCacheDirectiveResponseProto) String() string            { return proto.CompactTextString(m) }
func (*AddCacheDirectiveResponseProto) ProtoMessage()               {}
func (*AddCacheDirectiveResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{90} }

func (m *AddCacheDirectiveResponseProto) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

type ModifyCacheDirectiveRequestProto struct {
	Info             *CacheDirectiveInfoProto `protobuf:"bytes,1,req,name=info" json:"info,omitempty"`
	CacheFlags       *uint32                  `protobuf:"varint,2,opt,name=cacheFlags" json:"cacheFlags,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *ModifyCacheDirectiveRequestProto) Reset()         { *m = ModifyCacheDirectiveRequestProto{} }
func (m *ModifyCacheDirectiveRequestProto) String() string { return proto.CompactTextString(m) }
func (*ModifyCacheDirectiveRequestProto) ProtoMessage()    {}
func (*ModifyCacheDirectiveRequestProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{91}
}

func (m *ModifyCacheDirectiveRequestProto) GetInfo() *CacheDirectiveInfoProto {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *ModifyCacheDirectiveRequestProto) GetCacheFlags() uint32 {
	if m != nil && m.CacheFlags != nil {
		return *m.CacheFlags
	}
	return 0
}

type ModifyCacheDirectiveResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ModifyCacheDirectiveResponseProto) Reset()         { *m = ModifyCacheDirectiveResponseProto{} }
func (m *ModifyCacheDirectiveResponseProto) String() string { return proto.CompactTextString(m) }
func (*ModifyCacheDirectiveResponseProto) ProtoMessage()    {}
func (*ModifyCacheDirectiveResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{92}
}

type RemoveCacheDirectiveRequestProto struct {
	Id               *int64 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RemoveCacheDirectiveRequestProto) Reset()         { *m = RemoveCacheDirectiveRequestProto{} }
func (m *RemoveCacheDirectiveRequestProto) String() string { return proto.CompactTextString(m) }
func (*RemoveCacheDirectiveRequestProto) ProtoMessage()    {}
func (*RemoveCacheDirectiveRequestProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{93}
}

func (m *RemoveCacheDirectiveRequestProto) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

type RemoveCacheDirectiveResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RemoveCacheDirectiveResponseProto) Reset()         { *m = RemoveCacheDirectiveResponseProto{} }
func (m *RemoveCacheDirectiveResponseProto) String() string { return proto.CompactTextString(m) }
func (*RemoveCacheDirectiveResponseProto) ProtoMessage()    {}
func (*RemoveCacheDirectiveResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{94}
}

type ListCacheDirectivesRequestProto struct {
	PrevId           *int64                   `protobuf:"varint,1,req,name=prevId" json:"prevId,omitempty"`
	Filter           *CacheDirectiveInfoProto `protobuf:"bytes,2,req,name=filter" json:"filter,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *ListCacheDirectivesRequestProto) Reset()         { *m = ListCacheDirectivesRequestProto{} }
func (m *ListCacheDirectivesRequestProto) String() string { return proto.CompactTextString(m) }
func (*ListCacheDirectivesRequestProto) ProtoMessage()    {}
func (*ListCacheDirectivesRequestProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{95}
}

func (m *ListCacheDirectivesRequestProto) GetPrevId() int64 {
	if m != nil && m.PrevId != nil {
		return *m.PrevId
	}
	return 0
}

func (m *ListCacheDirectivesRequestProto) GetFilter() *CacheDirectiveInfoProto {
	if m != nil {
		return m.Filter
	}
	return nil
}

type CacheDirectiveEntryProto struct {
	Info             *CacheDirectiveInfoProto  `protobuf:"bytes,1,req,name=info" json:"info,omitempty"`
	Stats            *CacheDirectiveStatsProto `protobuf:"bytes,2,req,name=stats" json:"stats,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *CacheDirectiveEntryProto) Reset()                    { *m = CacheDirectiveEntryProto{} }
func (m *CacheDirectiveEntryProto) String() string            { return proto.CompactTextString(m) }
func (*CacheDirectiveEntryProto) ProtoMessage()               {}
func (*CacheDirectiveEntryProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{96} }

func (m *CacheDirectiveEntryProto) GetInfo() *CacheDirectiveInfoProto {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *CacheDirectiveEntryProto) GetStats() *CacheDirectiveStatsProto {
	if m != nil {
		return m.Stats
	}
	return nil
}

type ListCacheDirectivesResponseProto struct {
	Elements         []*CacheDirectiveEntryProto `protobuf:"bytes,1,rep,name=elements" json:"elements,omitempty"`
	HasMore          *bool                       `protobuf:"varint,2,req,name=hasMore" json:"hasMore,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *ListCacheDirectivesResponseProto) Reset()         { *m = ListCacheDirectivesResponseProto{} }
func (m *ListCacheDirectivesResponseProto) String() string { return proto.CompactTextString(m) }
func (*ListCacheDirectivesResponseProto) ProtoMessage()    {}
func (*ListCacheDirectivesResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{97}
}

func (m *ListCacheDirectivesResponseProto) GetElements() []*CacheDirectiveEntryProto {
	if m != nil {
		return m.Elements
	}
	return nil
}

func (m *ListCacheDirectivesResponseProto) GetHasMore() bool {
	if m != nil && m.HasMore != nil {
		return *m.HasMore
	}
	return false
}

type CachePoolInfoProto struct {
	PoolName           *string `protobuf:"bytes,1,opt,name=poolName" json:"poolName,omitempty"`
	OwnerName          *string `protobuf:"bytes,2,opt,name=ownerName" json:"ownerName,omitempty"`
	GroupName          *string `protobuf:"bytes,3,opt,name=groupName" json:"groupName,omitempty"`
	Mode               *int32  `protobuf:"varint,4,opt,name=mode" json:"mode,omitempty"`
	Limit              *int64  `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
	MaxRelativeExpiry  *int64  `protobuf:"varint,6,opt,name=maxRelativeExpiry" json:"maxRelativeExpiry,omitempty"`
	DefaultReplication *uint32 `protobuf:"varint,7,opt,name=defaultReplication,def=1" json:"defaultReplication,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *CachePoolInfoProto) Reset()                    { *m = CachePoolInfoProto{} }
func (m *CachePoolInfoProto) String() string            { return proto.CompactTextString(m) }
func (*CachePoolInfoProto) ProtoMessage()               {}
func (*CachePoolInfoProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{98} }

const Default_CachePoolInfoProto_DefaultReplication uint32 = 1

func (m *CachePoolInfoProto) GetPoolName() string {
	if m != nil && m.PoolName != nil {
		return *m.PoolName
	}
	return ""
}

func (m *CachePoolInfoProto) GetOwnerName() string {
	if m != nil && m.OwnerName != nil {
		return *m.OwnerName
	}
	return ""
}

func (m *CachePoolInfoProto) GetGroupName() string {
	if m != nil && m.GroupName != nil {
		return *m.GroupName
	}
	return ""
}

func (m *CachePoolInfoProto) GetMode() int32 {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return 0
}

func (m *CachePoolInfoProto) GetLimit() int64 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *CachePoolInfoProto) GetMaxRelativeExpiry() int64 {
	if m != nil && m.MaxRelativeExpiry != nil {
		return *m.MaxRelativeExpiry
	}
	return 0
}

func (m *CachePoolInfoProto) GetDefaultReplication() uint32 {
	if m != nil && m.DefaultReplication != nil {
		return *m.DefaultReplication
	}
	return Default_CachePoolInfoProto_DefaultReplication
}

type CachePoolStatsProto struct {
	BytesNeeded      *int64 `protobuf:"varint,1,req,name=bytesNeeded" json:"bytesNeeded,omitempty"`
	BytesCached      *int64 `protobuf:"varint,2,req,name=bytesCached" json:"bytesCached,omitempty"`
	BytesOverlimit   *int64 `protobuf:"varint,3,req,name=bytesOverlimit" json:"bytesOverlimit,omitempty"`
	FilesNeeded      *int64 `protobuf:"varint,4,req,name=filesNeeded" json:"filesNeeded,omitempty"`
	FilesCached      *int64 `protobuf:"varint,5,req,name=filesCached" json:"filesCached,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CachePoolStatsProto) Reset()                    { *m = CachePoolStatsProto{} }
func (m *CachePoolStatsProto) String() string            { return proto.CompactTextString(m) }
func (*CachePoolStatsProto) ProtoMessage()               {}
func (*CachePoolStatsProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{99} }

func (m *CachePoolStatsProto) GetBytesNeeded() int64 {
	if m != nil && m.BytesNeeded != nil {
		return *m.BytesNeeded
	}
	return 0
}

func (m *CachePoolStatsProto) GetBytesCached() int64 {
	if m != nil && m.BytesCached != nil {
		return *m.BytesCached
	}
	return 0
}

func (m *CachePoolStatsProto) GetBytesOverlimit() int64 {
	if m != nil && m.BytesOverlimit != nil {
		return *m.BytesOverlimit
	}
	return 0
}

func (m *CachePoolStatsProto) GetFilesNeeded() int64 {
	if m != nil && m.FilesNeeded != nil {
		return *m.FilesNeeded
	}
	return 0
}

func (m *CachePoolStatsProto) GetFilesCached() int64 {
	if m != nil && m.FilesCached != nil {
		return *m.FilesCached
	}
	return 0
}

type AddCachePoolRequestProto struct {
	Info             *CachePoolInfoProto `protobuf:"bytes,1,req,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *AddCachePoolRequestProto) Reset()                    { *m = AddCachePoolRequestProto{} }
func (m *AddCachePoolRequestProto) String() string            { return proto.CompactTextString(m) }
func (*AddCachePoolRequestProto) ProtoMessage()               {}
func (*AddCachePoolRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{100} }

func (m *AddCachePoolRequestProto) GetInfo() *CachePoolInfoProto {
	if m != nil {
		return m.Info
	}
	return nil
}

type AddCachePoolResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *AddCachePoolResponseProto) Reset()                    { *m = AddCachePoolResponseProto{} }
func (m *AddCachePoolResponseProto) String() string            { return proto.CompactTextString(m) }
func (*AddCachePoolResponseProto) ProtoMessage()               {}
func (*AddCachePoolResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{101} }

type ModifyCachePoolRequestProto struct {
	Info             *CachePoolInfoProto `protobuf:"bytes,1,req,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ModifyCachePoolRequestProto) Reset()                    { *m = ModifyCachePoolRequestProto{} }
func (m *ModifyCachePoolRequestProto) String() string            { return proto.CompactTextString(m) }
func (*ModifyCachePoolRequestProto) ProtoMessage()               {}
func (*ModifyCachePoolRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{102} }

func (m *ModifyCachePoolRequestProto) GetInfo() *CachePoolInfoProto {
	if m != nil {
		return m.Info
	}
	return nil
}

type ModifyCachePoolResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ModifyCachePoolResponseProto) Reset()                    { *m = ModifyCachePoolResponseProto{} }
func (m *ModifyCachePoolResponseProto) String() string            { return proto.CompactTextString(m) }
func (*ModifyCachePoolResponseProto) ProtoMessage()               {}
func (*ModifyCachePoolResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{103} }

type RemoveCachePoolRequestProto struct {
	PoolName         *string `protobuf:"bytes,1,req,name=poolName" json:"poolName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RemoveCachePoolRequestProto) Reset()                    { *m = RemoveCachePoolRequestProto{} }
func (m *RemoveCachePoolRequestProto) String() string            { return proto.CompactTextString(m) }
func (*RemoveCachePoolRequestProto) ProtoMessage()               {}
func (*RemoveCachePoolRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{104} }

func (m *RemoveCachePoolRequestProto) GetPoolName() string {
	if m != nil && m.PoolName != nil {
		return *m.PoolName
	}
	return ""
}

type RemoveCachePoolResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RemoveCachePoolResponseProto) Reset()                    { *m = RemoveCachePoolResponseProto{} }
func (m *RemoveCachePoolResponseProto) String() string            { return proto.CompactTextString(m) }
func (*RemoveCachePoolResponseProto) ProtoMessage()               {}
func (*RemoveCachePoolResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{105} }

type ListCachePoolsRequestProto struct {
	PrevPoolName     *string `protobuf:"bytes,1,req,name=prevPoolName" json:"prevPoolName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ListCachePoolsRequestProto) Reset()                    { *m = ListCachePoolsRequestProto{} }
func (m *ListCachePoolsRequestProto) String() string            { return proto.CompactTextString(m) }
func (*ListCachePoolsRequestProto) ProtoMessage()               {}
func (*ListCachePoolsRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{106} }

func (m *ListCachePoolsRequestProto) GetPrevPoolName() string {
	if m != nil && m.PrevPoolName != nil {
		return *m.PrevPoolName
	}
	return ""
}

type ListCachePoolsResponseProto struct {
	Entries          []*CachePoolEntryProto `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	HasMore          *bool                  `protobuf:"varint,2,req,name=hasMore" json:"hasMore,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *ListCachePoolsResponseProto) Reset()                    { *m = ListCachePoolsResponseProto{} }
func (m *ListCachePoolsResponseProto) String() string            { return proto.CompactTextString(m) }
func (*ListCachePoolsResponseProto) ProtoMessage()               {}
func (*ListCachePoolsResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{107} }

func (m *ListCachePoolsResponseProto) GetEntries() []*CachePoolEntryProto {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *ListCachePoolsResponseProto) GetHasMore() bool {
	if m != nil && m.HasMore != nil {
		return *m.HasMore
	}
	return false
}

type CachePoolEntryProto struct {
	Info             *CachePoolInfoProto  `protobuf:"bytes,1,req,name=info" json:"info,omitempty"`
	Stats            *CachePoolStatsProto `protobuf:"bytes,2,req,name=stats" json:"stats,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CachePoolEntryProto) Reset()                    { *m = CachePoolEntryProto{} }
func (m *CachePoolEntryProto) String() string            { return proto.CompactTextString(m) }
func (*CachePoolEntryProto) ProtoMessage()               {}
func (*CachePoolEntryProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{108} }

func (m *CachePoolEntryProto) GetInfo() *CachePoolInfoProto {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *CachePoolEntryProto) GetStats() *CachePoolStatsProto {
	if m != nil {
		return m.Stats
	}
	return nil
}

type GetFileLinkInfoRequestProto struct {
	Src              *string `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetFileLinkInfoRequestProto) Reset()                    { *m = GetFileLinkInfoRequestProto{} }
func (m *GetFileLinkInfoRequestProto) String() string            { return proto.CompactTextString(m) }
func (*GetFileLinkInfoRequestProto) ProtoMessage()               {}
func (*GetFileLinkInfoRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{109} }

func (m *GetFileLinkInfoRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

type GetFileLinkInfoResponseProto struct {
	Fs               *HdfsFileStatusProto `protobuf:"bytes,1,opt,name=fs" json:"fs,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *GetFileLinkInfoResponseProto) Reset()                    { *m = GetFileLinkInfoResponseProto{} }
func (m *GetFileLinkInfoResponseProto) String() string            { return proto.CompactTextString(m) }
func (*GetFileLinkInfoResponseProto) ProtoMessage()               {}
func (*GetFileLinkInfoResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{110} }

func (m *GetFileLinkInfoResponseProto) GetFs() *HdfsFileStatusProto {
	if m != nil {
		return m.Fs
	}
	return nil
}

type GetContentSummaryRequestProto struct {
	Path             *string `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetContentSummaryRequestProto) Reset()                    { *m = GetContentSummaryRequestProto{} }
func (m *GetContentSummaryRequestProto) String() string            { return proto.CompactTextString(m) }
func (*GetContentSummaryRequestProto) ProtoMessage()               {}
func (*GetContentSummaryRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{111} }

func (m *GetContentSummaryRequestProto) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

type GetContentSummaryResponseProto struct {
	Summary          *ContentSummaryProto `protobuf:"bytes,1,req,name=summary" json:"summary,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *GetContentSummaryResponseProto) Reset()         { *m = GetContentSummaryResponseProto{} }
func (m *GetContentSummaryResponseProto) String() string { return proto.CompactTextString(m) }
func (*GetContentSummaryResponseProto) ProtoMessage()    {}
func (*GetContentSummaryResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{112}
}

func (m *GetContentSummaryResponseProto) GetSummary() *ContentSummaryProto {
	if m != nil {
		return m.Summary
	}
	return nil
}

type GetQuotaUsageRequestProto struct {
	Path             *string `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetQuotaUsageRequestProto) Reset()                    { *m = GetQuotaUsageRequestProto{} }
func (m *GetQuotaUsageRequestProto) String() string            { return proto.CompactTextString(m) }
func (*GetQuotaUsageRequestProto) ProtoMessage()               {}
func (*GetQuotaUsageRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{113} }

func (m *GetQuotaUsageRequestProto) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

type GetQuotaUsageResponseProto struct {
	Usage            *QuotaUsageProto `protobuf:"bytes,1,req,name=usage" json:"usage,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *GetQuotaUsageResponseProto) Reset()                    { *m = GetQuotaUsageResponseProto{} }
func (m *GetQuotaUsageResponseProto) String() string            { return proto.CompactTextString(m) }
func (*GetQuotaUsageResponseProto) ProtoMessage()               {}
func (*GetQuotaUsageResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{114} }

func (m *GetQuotaUsageResponseProto) GetUsage() *QuotaUsageProto {
	if m != nil {
		return m.Usage
	}
	return nil
}

type SetQuotaRequestProto struct {
	Path              *string           `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	NamespaceQuota    *uint64           `protobuf:"varint,2,req,name=namespaceQuota" json:"namespaceQuota,omitempty"`
	StoragespaceQuota *uint64           `protobuf:"varint,3,req,name=storagespaceQuota" json:"storagespaceQuota,omitempty"`
	StorageType       *StorageTypeProto `protobuf:"varint,4,opt,name=storageType,enum=hadoop.hdfs.StorageTypeProto" json:"storageType,omitempty"`
	XXX_unrecognized  []byte            `json:"-"`
}

func (m *SetQuotaRequestProto) Reset()                    { *m = SetQuotaRequestProto{} }
func (m *SetQuotaRequestProto) String() string            { return proto.CompactTextString(m) }
func (*SetQuotaRequestProto) ProtoMessage()               {}
func (*SetQuotaRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{115} }

func (m *SetQuotaRequestProto) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *SetQuotaRequestProto) GetNamespaceQuota() uint64 {
	if m != nil && m.NamespaceQuota != nil {
		return *m.NamespaceQuota
	}
	return 0
}

func (m *SetQuotaRequestProto) GetStoragespaceQuota() uint64 {
	if m != nil && m.StoragespaceQuota != nil {
		return *m.StoragespaceQuota
	}
	return 0
}

func (m *SetQuotaRequestProto) GetStorageType() StorageTypeProto {
	if m != nil && m.StorageType != nil {
		return *m.StorageType
	}
	return StorageTypeProto_DISK
}

type SetQuotaResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SetQuotaResponseProto) Reset()                    { *m = SetQuotaResponseProto{} }
func (m *SetQuotaResponseProto) String() string            { return proto.CompactTextString(m) }
func (*SetQuotaResponseProto) ProtoMessage()               {}
func (*SetQuotaResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{116} }

type FsyncRequestProto struct {
	Src              *string `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	Client           *string `protobuf:"bytes,2,req,name=client" json:"client,omitempty"`
	LastBlockLength  *int64  `protobuf:"zigzag64,3,opt,name=lastBlockLength,def=-1" json:"lastBlockLength,omitempty"`
	FileId           *uint64 `protobuf:"varint,4,opt,name=fileId,def=0" json:"fileId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FsyncRequestProto) Reset()                    { *m = FsyncRequestProto{} }
func (m *FsyncRequestProto) String() string            { return proto.CompactTextString(m) }
func (*FsyncRequestProto) ProtoMessage()               {}
func (*FsyncRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{117} }

const Default_FsyncRequestProto_LastBlockLength int64 = -1
const Default_FsyncRequestProto_FileId uint64 = 0

func (m *FsyncRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *FsyncRequestProto) GetClient() string {
	if m != nil && m.Client != nil {
		return *m.Client
	}
	return ""
}

func (m *FsyncRequestProto) GetLastBlockLength() int64 {
	if m != nil && m.LastBlockLength != nil {
		return *m.LastBlockLength
	}
	return Default_FsyncRequestProto_LastBlockLength
}

func (m *FsyncRequestProto) GetFileId() uint64 {
	if m != nil && m.FileId != nil {
		return *m.FileId
	}
	return Default_FsyncRequestProto_FileId
}

type FsyncResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *FsyncResponseProto) Reset()                    { *m = FsyncResponseProto{} }
func (m *FsyncResponseProto) String() string            { return proto.CompactTextString(m) }
func (*FsyncResponseProto) ProtoMessage()               {}
func (*FsyncResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{118} }

type SetTimesRequestProto struct {
	Src              *string `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	Mtime            *uint64 `protobuf:"varint,2,req,name=mtime" json:"mtime,omitempty"`
	Atime            *uint64 `protobuf:"varint,3,req,name=atime" json:"atime,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SetTimesRequestProto) Reset()                    { *m = SetTimesRequestProto{} }
func (m *SetTimesRequestProto) String() string            { return proto.CompactTextString(m) }
func (*SetTimesRequestProto) ProtoMessage()               {}
func (*SetTimesRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{119} }

func (m *SetTimesRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *SetTimesRequestProto) GetMtime() uint64 {
	if m != nil && m.Mtime != nil {
		return *m.Mtime
	}
	return 0
}

func (m *SetTimesRequestProto) GetAtime() uint64 {
	if m != nil && m.Atime != nil {
		return *m.Atime
	}
	return 0
}

type SetTimesResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SetTimesResponseProto) Reset()                    { *m = SetTimesResponseProto{} }
func (m *SetTimesResponseProto) String() string            { return proto.CompactTextString(m) }
func (*SetTimesResponseProto) ProtoMessage()               {}
func (*SetTimesResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{120} }

type CreateSymlinkRequestProto struct {
	Target           *string            `protobuf:"bytes,1,req,name=target" json:"target,omitempty"`
	Link             *string            `protobuf:"bytes,2,req,name=link" json:"link,omitempty"`
	DirPerm          *FsPermissionProto `protobuf:"bytes,3,req,name=dirPerm" json:"dirPerm,omitempty"`
	CreateParent     *bool              `protobuf:"varint,4,req,name=createParent" json:"createParent,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CreateSymlinkRequestProto) Reset()                    { *m = CreateSymlinkRequestProto{} }
func (m *CreateSymlinkRequestProto) String() string            { return proto.CompactTextString(m) }
func (*CreateSymlinkRequestProto) ProtoMessage()               {}
func (*CreateSymlinkRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{121} }

func (m *CreateSymlinkRequestProto) GetTarget() string {
	if m != nil && m.Target != nil {
		return *m.Target
	}
	return ""
}

func (m *CreateSymlinkRequestProto) GetLink() string {
	if m != nil && m.Link != nil {
		return *m.Link
	}
	return ""
}

func (m *CreateSymlinkRequestProto) GetDirPerm() *FsPermissionProto {
	if m != nil {
		return m.DirPerm
	}
	return nil
}

func (m *CreateSymlinkRequestProto) GetCreateParent() bool {
	if m != nil && m.CreateParent != nil {
		return *m.CreateParent
	}
	return false
}

type CreateSymlinkResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CreateSymlinkResponseProto) Reset()                    { *m = CreateSymlinkResponseProto{} }
func (m *CreateSymlinkResponseProto) String() string            { return proto.CompactTextString(m) }
func (*CreateSymlinkResponseProto) ProtoMessage()               {}
func (*CreateSymlinkResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{122} }

type GetLinkTargetRequestProto struct {
	Path             *string `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetLinkTargetRequestProto) Reset()                    { *m = GetLinkTargetRequestProto{} }
func (m *GetLinkTargetRequestProto) String() string            { return proto.CompactTextString(m) }
func (*GetLinkTargetRequestProto) ProtoMessage()               {}
func (*GetLinkTargetRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{123} }

func (m *GetLinkTargetRequestProto) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

type GetLinkTargetResponseProto struct {
	TargetPath       *string `protobuf:"bytes,1,opt,name=targetPath" json:"targetPath,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetLinkTargetResponseProto) Reset()                    { *m = GetLinkTargetResponseProto{} }
func (m *GetLinkTargetResponseProto) String() string            { return proto.CompactTextString(m) }
func (*GetLinkTargetResponseProto) ProtoMessage()               {}
func (*GetLinkTargetResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{124} }

func (m *GetLinkTargetResponseProto) GetTargetPath() string {
	if m != nil && m.TargetPath != nil {
		return *m.TargetPath
	}
	return ""
}

type UpdateBlockForPipelineRequestProto struct {
	Block            *ExtendedBlockProto `protobuf:"bytes,1,req,name=block" json:"block,omitempty"`
	ClientName       *string             `protobuf:"bytes,2,req,name=clientName" json:"clientName,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *UpdateBlockForPipelineRequestProto) Reset()         { *m = UpdateBlockForPipelineRequestProto{} }
func (m *UpdateBlockForPipelineRequestProto) String() string { return proto.CompactTextString(m) }
func (*UpdateBlockForPipelineRequestProto) ProtoMessage()    {}
func (*UpdateBlockForPipelineRequestProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{125}
}

func (m *UpdateBlockForPipelineRequestProto) GetBlock() *ExtendedBlockProto {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *UpdateBlockForPipelineRequestProto) GetClientName() string {
	if m != nil && m.ClientName != nil {
		return *m.ClientName
	}
	return ""
}

type UpdateBlockForPipelineResponseProto struct {
	Block            *LocatedBlockProto `protobuf:"bytes,1,req,name=block" json:"block,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *UpdateBlockForPipelineResponseProto) Reset()         { *m = UpdateBlockForPipelineResponseProto{} }
func (m *UpdateBlockForPipelineResponseProto) String() string { return proto.CompactTextString(m) }
func (*UpdateBlockForPipelineResponseProto) ProtoMessage()    {}
func (*UpdateBlockForPipelineResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{126}
}

func (m *UpdateBlockForPipelineResponseProto) GetBlock() *LocatedBlockProto {
	if m != nil {
		return m.Block
	}
	return nil
}

type UpdatePipelineRequestProto struct {
	ClientName       *string             `protobuf:"bytes,1,req,name=clientName" json:"clientName,omitempty"`
	OldBlock         *ExtendedBlockProto `protobuf:"bytes,2,req,name=oldBlock" json:"oldBlock,omitempty"`
	NewBlock         *ExtendedBlockProto `protobuf:"bytes,3,req,name=newBlock" json:"newBlock,omitempty"`
	NewNodes         []*DatanodeIDProto  `protobuf:"bytes,4,rep,name=newNodes" json:"newNodes,omitempty"`
	StorageIDs       []string            `protobuf:"bytes,5,rep,name=storageIDs" json:"storageIDs,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *UpdatePipelineRequestProto) Reset()                    { *m = UpdatePipelineRequestProto{} }
func (m *UpdatePipelineRequestProto) String() string            { return proto.CompactTextString(m) }
func (*UpdatePipelineRequestProto) ProtoMessage()               {}
func (*UpdatePipelineRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{127} }

func (m *UpdatePipelineRequestProto) GetClientName() string {
	if m != nil && m.ClientName != nil {
		return *m.ClientName
	}
	return ""
}

func (m *UpdatePipelineRequestProto) GetOldBlock() *ExtendedBlockProto {
	if m != nil {
		return m.OldBlock
	}
	return nil
}

func (m *UpdatePipelineRequestProto) GetNewBlock() *ExtendedBlockProto {
	if m != nil {
		return m.NewBlock
	}
	return nil
}

func (m *UpdatePipelineRequestProto) GetNewNodes() []*DatanodeIDProto {
	if m != nil {
		return m.NewNodes
	}
	return nil
}

func (m *UpdatePipelineRequestProto) GetStorageIDs() []string {
	if m != nil {
		return m.StorageIDs
	}
	return nil
}

type UpdatePipelineResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *UpdatePipelineResponseProto) Reset()                    { *m = UpdatePipelineResponseProto{} }
func (m *UpdatePipelineResponseProto) String() string            { return proto.CompactTextString(m) }
func (*UpdatePipelineResponseProto) ProtoMessage()               {}
func (*UpdatePipelineResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{128} }

type SetBalancerBandwidthRequestProto struct {
	Bandwidth        *int64 `protobuf:"varint,1,req,name=bandwidth" json:"bandwidth,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SetBalancerBandwidthRequestProto) Reset()         { *m = SetBalancerBandwidthRequestProto{} }
func (m *SetBalancerBandwidthRequestProto) String() string { return proto.CompactTextString(m) }
func (*SetBalancerBandwidthRequestProto) ProtoMessage()    {}
func (*SetBalancerBandwidthRequestProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{129}
}

func (m *SetBalancerBandwidthRequestProto) GetBandwidth() int64 {
	if m != nil && m.Bandwidth != nil {
		return *m.Bandwidth
	}
	return 0
}

type SetBalancerBandwidthResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SetBalancerBandwidthResponseProto) Reset()         { *m = SetBalancerBandwidthResponseProto{} }
func (m *SetBalancerBandwidthResponseProto) String() string { return proto.CompactTextString(m) }
func (*SetBalancerBandwidthResponseProto) ProtoMessage()    {}
func (*SetBalancerBandwidthResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{130}
}

type GetDataEncryptionKeyRequestProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetDataEncryptionKeyRequestProto) Reset()         { *m = GetDataEncryptionKeyRequestProto{} }
func (m *GetDataEncryptionKeyRequestProto) String() string { return proto.CompactTextString(m) }
func (*GetDataEncryptionKeyRequestProto) ProtoMessage()    {}
func (*GetDataEncryptionKeyRequestProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{131}
}

type GetDataEncryptionKeyResponseProto struct {
	DataEncryptionKey *DataEncryptionKeyProto `protobuf:"bytes,1,opt,name=dataEncryptionKey" json:"dataEncryptionKey,omitempty"`
	XXX_unrecognized  []byte                  `json:"-"`
}

func (m *GetDataEncryptionKeyResponseProto) Reset()         { *m = GetDataEncryptionKeyResponseProto{} }
func (m *GetDataEncryptionKeyResponseProto) String() string { return proto.CompactTextString(m) }
func (*GetDataEncryptionKeyResponseProto) ProtoMessage()    {}
func (*GetDataEncryptionKeyResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{132}
}

func (m *GetDataEncryptionKeyResponseProto) GetDataEncryptionKey() *DataEncryptionKeyProto {
	if m != nil {
		return m.DataEncryptionKey
	}
	return nil
}

type CreateSnapshotRequestProto struct {
	SnapshotRoot     *string `protobuf:"bytes,1,req,name=snapshotRoot" json:"snapshotRoot,omitempty"`
	SnapshotName     *string `protobuf:"bytes,2,opt,name=snapshotName" json:"snapshotName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CreateSnapshotRequestProto) Reset()                    { *m = CreateSnapshotRequestProto{} }
func (m *CreateSnapshotRequestProto) String() string            { return proto.CompactTextString(m) }
func (*CreateSnapshotRequestProto) ProtoMessage()               {}
func (*CreateSnapshotRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{133} }

func (m *CreateSnapshotRequestProto) GetSnapshotRoot() string {
	if m != nil && m.SnapshotRoot != nil {
		return *m.SnapshotRoot
	}
	return ""
}

func (m *CreateSnapshotRequestProto) GetSnapshotName() string {
	if m != nil && m.SnapshotName != nil {
		return *m.SnapshotName
	}
	return ""
}

type CreateSnapshotResponseProto struct {
	SnapshotPath     *string `protobuf:"bytes,1,req,name=snapshotPath" json:"snapshotPath,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CreateSnapshotResponseProto) Reset()                    { *m = CreateSnapshotResponseProto{} }
func (m *CreateSnapshotResponseProto) String() string            { return proto.CompactTextString(m) }
func (*CreateSnapshotResponseProto) ProtoMessage()               {}
func (*CreateSnapshotResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{134} }

func (m *CreateSnapshotResponseProto) GetSnapshotPath() string {
	if m != nil && m.SnapshotPath != nil {
		return *m.SnapshotPath
	}
	return ""
}

type RenameSnapshotRequestProto struct {
	SnapshotRoot     *string `protobuf:"bytes,1,req,name=snapshotRoot" json:"snapshotRoot,omitempty"`
	SnapshotOldName  *string `protobuf:"bytes,2,req,name=snapshotOldName" json:"snapshotOldName,omitempty"`
	SnapshotNewName  *string `protobuf:"bytes,3,req,name=snapshotNewName" json:"snapshotNewName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RenameSnapshotRequestProto) Reset()                    { *m = RenameSnapshotRequestProto{} }
func (m *RenameSnapshotRequestProto) String() string            { return proto.CompactTextString(m) }
func (*RenameSnapshotRequestProto) ProtoMessage()               {}
func (*RenameSnapshotRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{135} }

func (m *RenameSnapshotRequestProto) GetSnapshotRoot() string {
	if m != nil && m.SnapshotRoot != nil {
		return *m.SnapshotRoot
	}
	return ""
}

func (m *RenameSnapshotRequestProto) GetSnapshotOldName() string {
	if m != nil && m.SnapshotOldName != nil {
		return *m.SnapshotOldName
	}
	return ""
}

func (m *RenameSnapshotRequestProto) GetSnapshotNewName() string {
	if m != nil && m.SnapshotNewName != nil {
		return *m.SnapshotNewName
	}
	return ""
}

type RenameSnapshotResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RenameSnapshotResponseProto) Reset()                    { *m = RenameSnapshotResponseProto{} }
func (m *RenameSnapshotResponseProto) String() string            { return proto.CompactTextString(m) }
func (*RenameSnapshotResponseProto) ProtoMessage()               {}
func (*RenameSnapshotResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{136} }

type AllowSnapshotRequestProto struct {
	SnapshotRoot     *string `protobuf:"bytes,1,req,name=snapshotRoot" json:"snapshotRoot,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AllowSnapshotRequestProto) Reset()                    { *m = AllowSnapshotRequestProto{} }
func (m *AllowSnapshotRequestProto) String() string            { return proto.CompactTextString(m) }
func (*AllowSnapshotRequestProto) ProtoMessage()               {}
func (*AllowSnapshotRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{137} }

func (m *AllowSnapshotRequestProto) GetSnapshotRoot() string {
	if m != nil && m.SnapshotRoot != nil {
		return *m.SnapshotRoot
	}
	return ""
}

type AllowSnapshotResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *AllowSnapshotResponseProto) Reset()                    { *m = AllowSnapshotResponseProto{} }
func (m *AllowSnapshotResponseProto) String() string            { return proto.CompactTextString(m) }
func (*AllowSnapshotResponseProto) ProtoMessage()               {}
func (*AllowSnapshotResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{138} }

type DisallowSnapshotRequestProto struct {
	SnapshotRoot     *string `protobuf:"bytes,1,req,name=snapshotRoot" json:"snapshotRoot,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DisallowSnapshotRequestProto) Reset()                    { *m = DisallowSnapshotRequestProto{} }
func (m *DisallowSnapshotRequestProto) String() string            { return proto.CompactTextString(m) }
func (*DisallowSnapshotRequestProto) ProtoMessage()               {}
func (*DisallowSnapshotRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{139} }

func (m *DisallowSnapshotRequestProto) GetSnapshotRoot() string {
	if m != nil && m.SnapshotRoot != nil {
		return *m.SnapshotRoot
	}
	return ""
}

type DisallowSnapshotResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *DisallowSnapshotResponseProto) Reset()                    { *m = DisallowSnapshotResponseProto{} }
func (m *DisallowSnapshotResponseProto) String() string            { return proto.CompactTextString(m) }
func (*DisallowSnapshotResponseProto) ProtoMessage()               {}
func (*DisallowSnapshotResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{140} }

type DeleteSnapshotRequestProto struct {
	SnapshotRoot     *string `protobuf:"bytes,1,req,name=snapshotRoot" json:"snapshotRoot,omitempty"`
	SnapshotName     *string `protobuf:"bytes,2,req,name=snapshotName" json:"snapshotName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DeleteSnapshotRequestProto) Reset()                    { *m = DeleteSnapshotRequestProto{} }
func (m *DeleteSnapshotRequestProto) String() string            { return proto.CompactTextString(m) }
func (*DeleteSnapshotRequestProto) ProtoMessage()               {}
func (*DeleteSnapshotRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{141} }

func (m *DeleteSnapshotRequestProto) GetSnapshotRoot() string {
	if m != nil && m.SnapshotRoot != nil {
		return *m.SnapshotRoot
	}
	return ""
}

func (m *DeleteSnapshotRequestProto) GetSnapshotName() string {
	if m != nil && m.SnapshotName != nil {
		return *m.SnapshotName
	}
	return ""
}

type DeleteSnapshotResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *DeleteSnapshotResponseProto) Reset()                    { *m = DeleteSnapshotResponseProto{} }
func (m *DeleteSnapshotResponseProto) String() string            { return proto.CompactTextString(m) }
func (*DeleteSnapshotResponseProto) ProtoMessage()               {}
func (*DeleteSnapshotResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{142} }

type CheckAccessRequestProto struct {
	Path             *string                      `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	Mode             *AclEntryProto_FsActionProto `protobuf:"varint,2,req,name=mode,enum=hadoop.hdfs.AclEntryProto_FsActionProto" json:"mode,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CheckAccessRequestProto) Reset()                    { *m = CheckAccessRequestProto{} }
func (m *CheckAccessRequestProto) String() string            { return proto.CompactTextString(m) }
func (*CheckAccessRequestProto) ProtoMessage()               {}
func (*CheckAccessRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{143} }

func (m *CheckAccessRequestProto) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *CheckAccessRequestProto) GetMode() AclEntryProto_FsActionProto {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return AclEntryProto_NONE
}

type CheckAccessResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CheckAccessResponseProto) Reset()                    { *m = CheckAccessResponseProto{} }
func (m *CheckAccessResponseProto) String() string            { return proto.CompactTextString(m) }
func (*CheckAccessResponseProto) ProtoMessage()               {}
func (*CheckAccessResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{144} }

type GetCurrentEditLogTxidRequestProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetCurrentEditLogTxidRequestProto) Reset()         { *m = GetCurrentEditLogTxidRequestProto{} }
func (m *GetCurrentEditLogTxidRequestProto) String() string { return proto.CompactTextString(m) }
func (*GetCurrentEditLogTxidRequestProto) ProtoMessage()    {}
func (*GetCurrentEditLogTxidRequestProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{145}
}

type GetCurrentEditLogTxidResponseProto struct {
	Txid             *int64 `protobuf:"varint,1,req,name=txid" json:"txid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetCurrentEditLogTxidResponseProto) Reset()         { *m = GetCurrentEditLogTxidResponseProto{} }
func (m *GetCurrentEditLogTxidResponseProto) String() string { return proto.CompactTextString(m) }
func (*GetCurrentEditLogTxidResponseProto) ProtoMessage()    {}
func (*GetCurrentEditLogTxidResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{146}
}

func (m *GetCurrentEditLogTxidResponseProto) GetTxid() int64 {
	if m != nil && m.Txid != nil {
		return *m.Txid
	}
	return 0
}

type GetEditsFromTxidRequestProto struct {
	Txid             *int64 `protobuf:"varint,1,req,name=txid" json:"txid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetEditsFromTxidRequestProto) Reset()                    { *m = GetEditsFromTxidRequestProto{} }
func (m *GetEditsFromTxidRequestProto) String() string            { return proto.CompactTextString(m) }
func (*GetEditsFromTxidRequestProto) ProtoMessage()               {}
func (*GetEditsFromTxidRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{147} }

func (m *GetEditsFromTxidRequestProto) GetTxid() int64 {
	if m != nil && m.Txid != nil {
		return *m.Txid
	}
	return 0
}

type GetEditsFromTxidResponseProto struct {
	EventsList       *EventsListProto `protobuf:"bytes,1,req,name=eventsList" json:"eventsList,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *GetEditsFromTxidResponseProto) Reset()                    { *m = GetEditsFromTxidResponseProto{} }
func (m *GetEditsFromTxidResponseProto) String() string            { return proto.CompactTextString(m) }
func (*GetEditsFromTxidResponseProto) ProtoMessage()               {}
func (*GetEditsFromTxidResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{148} }

func (m *GetEditsFromTxidResponseProto) GetEventsList() *EventsListProto {
	if m != nil {
		return m.EventsList
	}
	return nil
}

func init() {
	proto.RegisterType((*GetBlockLocationsRequestProto)(nil), "hadoop.hdfs.GetBlockLocationsRequestProto")
	proto.RegisterType((*GetBlockLocationsResponseProto)(nil), "hadoop.hdfs.GetBlockLocationsResponseProto")
	proto.RegisterType((*GetServerDefaultsRequestProto)(nil), "hadoop.hdfs.GetServerDefaultsRequestProto")
	proto.RegisterType((*GetServerDefaultsResponseProto)(nil), "hadoop.hdfs.GetServerDefaultsResponseProto")
	proto.RegisterType((*CreateRequestProto)(nil), "hadoop.hdfs.CreateRequestProto")
	proto.RegisterType((*CreateResponseProto)(nil), "hadoop.hdfs.CreateResponseProto")
	proto.RegisterType((*AppendRequestProto)(nil), "hadoop.hdfs.AppendRequestProto")
	proto.RegisterType((*AppendResponseProto)(nil), "hadoop.hdfs.AppendResponseProto")
	proto.RegisterType((*SetReplicationRequestProto)(nil), "hadoop.hdfs.SetReplicationRequestProto")
	proto.RegisterType((*SetReplicationResponseProto)(nil), "hadoop.hdfs.SetReplicationResponseProto")
	proto.RegisterType((*SetStoragePolicyRequestProto)(nil), "hadoop.hdfs.SetStoragePolicyRequestProto")
	proto.RegisterType((*SetStoragePolicyResponseProto)(nil), "hadoop.hdfs.SetStoragePolicyResponseProto")
	proto.RegisterType((*UnsetStoragePolicyRequestProto)(nil), "hadoop.hdfs.UnsetStoragePolicyRequestProto")
	proto.RegisterType((*UnsetStoragePolicyResponseProto)(nil), "hadoop.hdfs.UnsetStoragePolicyResponseProto")
	proto.RegisterType((*GetStoragePolicyRequestProto)(nil), "hadoop.hdfs.GetStoragePolicyRequestProto")
	proto.RegisterType((*GetStoragePolicyResponseProto)(nil), "hadoop.hdfs.GetStoragePolicyResponseProto")
	proto.RegisterType((*GetStoragePoliciesRequestProto)(nil), "hadoop.hdfs.GetStoragePoliciesRequestProto")
	proto.RegisterType((*GetStoragePoliciesResponseProto)(nil), "hadoop.hdfs.GetStoragePoliciesResponseProto")
	proto.RegisterType((*SetPermissionRequestProto)(nil), "hadoop.hdfs.SetPermissionRequestProto")
	proto.RegisterType((*SetPermissionResponseProto)(nil), "hadoop.hdfs.SetPermissionResponseProto")
	proto.RegisterType((*SetOwnerRequestProto)(nil), "hadoop.hdfs.SetOwnerRequestProto")
	proto.RegisterType((*SetOwnerResponseProto)(nil), "hadoop.hdfs.SetOwnerResponseProto")
	proto.RegisterType((*AbandonBlockRequestProto)(nil), "hadoop.hdfs.AbandonBlockRequestProto")
	proto.RegisterType((*AbandonBlockResponseProto)(nil), "hadoop.hdfs.AbandonBlockResponseProto")
	proto.RegisterType((*AddBlockRequestProto)(nil), "hadoop.hdfs.AddBlockRequestProto")
	proto.RegisterType((*AddBlockResponseProto)(nil), "hadoop.hdfs.AddBlockResponseProto")
	proto.RegisterType((*GetAdditionalDatanodeRequestProto)(nil), "hadoop.hdfs.GetAdditionalDatanodeRequestProto")
	proto.RegisterType((*GetAdditionalDatanodeResponseProto)(nil), "hadoop.hdfs.GetAdditionalDatanodeResponseProto")
	proto.RegisterType((*CompleteRequestProto)(nil), "hadoop.hdfs.CompleteRequestProto")
	proto.RegisterType((*CompleteResponseProto)(nil), "hadoop.hdfs.CompleteResponseProto")
	proto.RegisterType((*ReportBadBlocksRequestProto)(nil), "hadoop.hdfs.ReportBadBlocksRequestProto")
	proto.RegisterType((*ReportBadBlocksResponseProto)(nil), "hadoop.hdfs.ReportBadBlocksResponseProto")
	proto.RegisterType((*ConcatRequestProto)(nil), "hadoop.hdfs.ConcatRequestProto")
	proto.RegisterType((*ConcatResponseProto)(nil), "hadoop.hdfs.ConcatResponseProto")
	proto.RegisterType((*TruncateRequestProto)(nil), "hadoop.hdfs.TruncateRequestProto")
	proto.RegisterType((*TruncateResponseProto)(nil), "hadoop.hdfs.TruncateResponseProto")
	proto.RegisterType((*RenameRequestProto)(nil), "hadoop.hdfs.RenameRequestProto")
	proto.RegisterType((*RenameResponseProto)(nil), "hadoop.hdfs.RenameResponseProto")
	proto.RegisterType((*Rename2RequestProto)(nil), "hadoop.hdfs.Rename2RequestProto")
	proto.RegisterType((*Rename2ResponseProto)(nil), "hadoop.hdfs.Rename2ResponseProto")
	proto.RegisterType((*DeleteRequestProto)(nil), "hadoop.hdfs.DeleteRequestProto")
	proto.RegisterType((*DeleteResponseProto)(nil), "hadoop.hdfs.DeleteResponseProto")
	proto.RegisterType((*MkdirsRequestProto)(nil), "hadoop.hdfs.MkdirsRequestProto")
	proto.RegisterType((*MkdirsResponseProto)(nil), "hadoop.hdfs.MkdirsResponseProto")
	proto.RegisterType((*GetListingRequestProto)(nil), "hadoop.hdfs.GetListingRequestProto")
	proto.RegisterType((*GetListingResponseProto)(nil), "hadoop.hdfs.GetListingResponseProto")
	proto.RegisterType((*GetSnapshottableDirListingRequestProto)(nil), "hadoop.hdfs.GetSnapshottableDirListingRequestProto")
	proto.RegisterType((*GetSnapshottableDirListingResponseProto)(nil), "hadoop.hdfs.GetSnapshottableDirListingResponseProto")
	proto.RegisterType((*GetSnapshotDiffReportRequestProto)(nil), "hadoop.hdfs.GetSnapshotDiffReportRequestProto")
	proto.RegisterType((*GetSnapshotDiffReportResponseProto)(nil), "hadoop.hdfs.GetSnapshotDiffReportResponseProto")
	proto.RegisterType((*RenewLeaseRequestProto)(nil), "hadoop.hdfs.RenewLeaseRequestProto")
	proto.RegisterType((*RenewLeaseResponseProto)(nil), "hadoop.hdfs.RenewLeaseResponseProto")
	proto.RegisterType((*RecoverLeaseRequestProto)(nil), "hadoop.hdfs.RecoverLeaseRequestProto")
	proto.RegisterType((*RecoverLeaseResponseProto)(nil), "hadoop.hdfs.RecoverLeaseResponseProto")
	proto.RegisterType((*GetFsStatusRequestProto)(nil), "hadoop.hdfs.GetFsStatusRequestProto")
	proto.RegisterType((*GetFsStatsResponseProto)(nil), "hadoop.hdfs.GetFsStatsResponseProto")
	proto.RegisterType((*GetDatanodeReportRequestProto)(nil), "hadoop.hdfs.GetDatanodeReportRequestProto")
	proto.RegisterType((*GetDatanodeReportResponseProto)(nil), "hadoop.hdfs.GetDatanodeReportResponseProto")
	proto.RegisterType((*GetDatanodeStorageReportRequestProto)(nil), "hadoop.hdfs.GetDatanodeStorageReportRequestProto")
	proto.RegisterType((*DatanodeStorageReportProto)(nil), "hadoop.hdfs.DatanodeStorageReportProto")
	proto.RegisterType((*GetDatanodeStorageReportResponseProto)(nil), "hadoop.hdfs.GetDatanodeStorageReportResponseProto")
	proto.RegisterType((*GetPreferredBlockSizeRequestProto)(nil), "hadoop.hdfs.GetPreferredBlockSizeRequestProto")
	proto.RegisterType((*GetPreferredBlockSizeResponseProto)(nil), "hadoop.hdfs.GetPreferredBlockSizeResponseProto")
	proto.RegisterType((*SetSafeModeRequestProto)(nil), "hadoop.hdfs.SetSafeModeRequestProto")
	proto.RegisterType((*SetSafeModeResponseProto)(nil), "hadoop.hdfs.SetSafeModeResponseProto")
	proto.RegisterType((*SaveNamespaceRequestProto)(nil), "hadoop.hdfs.SaveNamespaceRequestProto")
	proto.RegisterType((*SaveNamespaceResponseProto)(nil), "hadoop.hdfs.SaveNamespaceResponseProto")
	proto.RegisterType((*RollEditsRequestProto)(nil), "hadoop.hdfs.RollEditsRequestProto")
	proto.RegisterType((*RollEditsResponseProto)(nil), "hadoop.hdfs.RollEditsResponseProto")
	proto.RegisterType((*RestoreFailedStorageRequestProto)(nil), "hadoop.hdfs.RestoreFailedStorageRequestProto")
	proto.RegisterType((*RestoreFailedStorageResponseProto)(nil), "hadoop.hdfs.RestoreFailedStorageResponseProto")
	proto.RegisterType((*RefreshNodesRequestProto)(nil), "hadoop.hdfs.RefreshNodesRequestProto")
	proto.RegisterType((*RefreshNodesResponseProto)(nil), "hadoop.hdfs.RefreshNodesResponseProto")
	proto.RegisterType((*FinalizeUpgradeRequestProto)(nil), "hadoop.hdfs.FinalizeUpgradeRequestProto")
	proto.RegisterType((*FinalizeUpgradeResponseProto)(nil), "hadoop.hdfs.FinalizeUpgradeResponseProto")
	proto.RegisterType((*RollingUpgradeRequestProto)(nil), "hadoop.hdfs.RollingUpgradeRequestProto")
	proto.RegisterType((*RollingUpgradeInfoProto)(nil), "hadoop.hdfs.RollingUpgradeInfoProto")
	proto.RegisterType((*RollingUpgradeResponseProto)(nil), "hadoop.hdfs.RollingUpgradeResponseProto")
	proto.RegisterType((*ListCorruptFileBlocksRequestProto)(nil), "hadoop.hdfs.ListCorruptFileBlocksRequestProto")
	proto.RegisterType((*ListCorruptFileBlocksResponseProto)(nil), "hadoop.hdfs.ListCorruptFileBlocksResponseProto")
	proto.RegisterType((*MetaSaveRequestProto)(nil), "hadoop.hdfs.MetaSaveRequestProto")
	proto.RegisterType((*MetaSaveResponseProto)(nil), "hadoop.hdfs.MetaSaveResponseProto")
	proto.RegisterType((*GetFileInfoRequestProto)(nil), "hadoop.hdfs.GetFileInfoRequestProto")
	proto.RegisterType((*GetFileInfoResponseProto)(nil), "hadoop.hdfs.GetFileInfoResponseProto")
	proto.RegisterType((*IsFileClosedRequestProto)(nil), "hadoop.hdfs.IsFileClosedRequestProto")
	proto.RegisterType((*IsFileClosedResponseProto)(nil), "hadoop.hdfs.IsFileClosedResponseProto")
	proto.RegisterType((*CacheDirectiveInfoProto)(nil), "hadoop.hdfs.CacheDirectiveInfoProto")
	proto.RegisterType((*CacheDirectiveInfoExpirationProto)(nil), "hadoop.hdfs.CacheDirectiveInfoExpirationProto")
	proto.RegisterType((*CacheDirectiveStatsProto)(nil), "hadoop.hdfs.CacheDirectiveStatsProto")
	proto.RegisterType((*AddCacheDirectiveRequestProto)(nil), "hadoop.hdfs.AddCacheDirectiveRequestProto")
	proto.RegisterType((*AddCacheDirectiveResponseProto)(nil), "hadoop.hdfs.AddCacheDirectiveResponseProto")
	proto.RegisterType((*ModifyCacheDirectiveRequestProto)(nil), "hadoop.hdfs.ModifyCacheDirectiveRequestProto")
	proto.RegisterType((*ModifyCacheDirectiveResponseProto)(nil), "hadoop.hdfs.ModifyCacheDirectiveResponseProto")
	proto.RegisterType((*RemoveCacheDirectiveRequestProto)(nil), "hadoop.hdfs.RemoveCacheDirectiveRequestProto")
	proto.RegisterType((*RemoveCacheDirectiveResponseProto)(nil), "hadoop.hdfs.RemoveCacheDirectiveResponseProto")
	proto.RegisterType((*ListCacheDirectivesRequestProto)(nil), "hadoop.hdfs.ListCacheDirectivesRequestProto")
	proto.RegisterType((*CacheDirectiveEntryProto)(nil), "hadoop.hdfs.CacheDirectiveEntryProto")
	proto.RegisterType((*ListCacheDirectivesResponseProto)(nil), "hadoop.hdfs.ListCacheDirectivesResponseProto")
	proto.RegisterType((*CachePoolInfoProto)(nil), "hadoop.hdfs.CachePoolInfoProto")
	proto.RegisterType((*CachePoolStatsProto)(nil), "hadoop.hdfs.CachePoolStatsProto")
	proto.RegisterType((*AddCachePoolRequestProto)(nil), "hadoop.hdfs.AddCachePoolRequestProto")
	proto.RegisterType((*AddCachePoolResponseProto)(nil), "hadoop.hdfs.AddCachePoolResponseProto")
	proto.RegisterType((*ModifyCachePoolRequestProto)(nil), "hadoop.hdfs.ModifyCachePoolRequestProto")
	proto.RegisterType((*ModifyCachePoolResponseProto)(nil), "hadoop.hdfs.ModifyCachePoolResponseProto")
	proto.RegisterType((*RemoveCachePoolRequestProto)(nil), "hadoop.hdfs.RemoveCachePoolRequestProto")
	proto.RegisterType((*RemoveCachePoolResponseProto)(nil), "hadoop.hdfs.RemoveCachePoolResponseProto")
	proto.RegisterType((*ListCachePoolsRequestProto)(nil), "hadoop.hdfs.ListCachePoolsRequestProto")
	proto.RegisterType((*ListCachePoolsResponseProto)(nil), "hadoop.hdfs.ListCachePoolsResponseProto")
	proto.RegisterType((*CachePoolEntryProto)(nil), "hadoop.hdfs.CachePoolEntryProto")
	proto.RegisterType((*GetFileLinkInfoRequestProto)(nil), "hadoop.hdfs.GetFileLinkInfoRequestProto")
	proto.RegisterType((*GetFileLinkInfoResponseProto)(nil), "hadoop.hdfs.GetFileLinkInfoResponseProto")
	proto.RegisterType((*GetContentSummaryRequestProto)(nil), "hadoop.hdfs.GetContentSummaryRequestProto")
	proto.RegisterType((*GetContentSummaryResponseProto)(nil), "hadoop.hdfs.GetContentSummaryResponseProto")
	proto.RegisterType((*GetQuotaUsageRequestProto)(nil), "hadoop.hdfs.GetQuotaUsageRequestProto")
	proto.RegisterType((*GetQuotaUsageResponseProto)(nil), "hadoop.hdfs.GetQuotaUsageResponseProto")
	proto.RegisterType((*SetQuotaRequestProto)(nil), "hadoop.hdfs.SetQuotaRequestProto")
	proto.RegisterType((*SetQuotaResponseProto)(nil), "hadoop.hdfs.SetQuotaResponseProto")
	proto.RegisterType((*FsyncRequestProto)(nil), "hadoop.hdfs.FsyncRequestProto")
	proto.RegisterType((*FsyncResponseProto)(nil), "hadoop.hdfs.FsyncResponseProto")
	proto.RegisterType((*SetTimesRequestProto)(nil), "hadoop.hdfs.SetTimesRequestProto")
	proto.RegisterType((*SetTimesResponseProto)(nil), "hadoop.hdfs.SetTimesResponseProto")
	proto.RegisterType((*CreateSymlinkRequestProto)(nil), "hadoop.hdfs.CreateSymlinkRequestProto")
	proto.RegisterType((*CreateSymlinkResponseProto)(nil), "hadoop.hdfs.CreateSymlinkResponseProto")
	proto.RegisterType((*GetLinkTargetRequestProto)(nil), "hadoop.hdfs.GetLinkTargetRequestProto")
	proto.RegisterType((*GetLinkTargetResponseProto)(nil), "hadoop.hdfs.GetLinkTargetResponseProto")
	proto.RegisterType((*UpdateBlockForPipelineRequestProto)(nil), "hadoop.hdfs.UpdateBlockForPipelineRequestProto")
	proto.RegisterType((*UpdateBlockForPipelineResponseProto)(nil), "hadoop.hdfs.UpdateBlockForPipelineResponseProto")
	proto.RegisterType((*UpdatePipelineRequestProto)(nil), "hadoop.hdfs.UpdatePipelineRequestProto")
	proto.RegisterType((*UpdatePipelineResponseProto)(nil), "hadoop.hdfs.UpdatePipelineResponseProto")
	proto.RegisterType((*SetBalancerBandwidthRequestProto)(nil), "hadoop.hdfs.SetBalancerBandwidthRequestProto")
	proto.RegisterType((*SetBalancerBandwidthResponseProto)(nil), "hadoop.hdfs.SetBalancerBandwidthResponseProto")
	proto.RegisterType((*GetDataEncryptionKeyRequestProto)(nil), "hadoop.hdfs.GetDataEncryptionKeyRequestProto")
	proto.RegisterType((*GetDataEncryptionKeyResponseProto)(nil), "hadoop.hdfs.GetDataEncryptionKeyResponseProto")
	proto.RegisterType((*CreateSnapshotRequestProto)(nil), "hadoop.hdfs.CreateSnapshotRequestProto")
	proto.RegisterType((*CreateSnapshotResponseProto)(nil), "hadoop.hdfs.CreateSnapshotResponseProto")
	proto.RegisterType((*RenameSnapshotRequestProto)(nil), "hadoop.hdfs.RenameSnapshotRequestProto")
	proto.RegisterType((*RenameSnapshotResponseProto)(nil), "hadoop.hdfs.RenameSnapshotResponseProto")
	proto.RegisterType((*AllowSnapshotRequestProto)(nil), "hadoop.hdfs.AllowSnapshotRequestProto")
	proto.RegisterType((*AllowSnapshotResponseProto)(nil), "hadoop.hdfs.AllowSnapshotResponseProto")
	proto.RegisterType((*DisallowSnapshotRequestProto)(nil), "hadoop.hdfs.DisallowSnapshotRequestProto")
	proto.RegisterType((*DisallowSnapshotResponseProto)(nil), "hadoop.hdfs.DisallowSnapshotResponseProto")
	proto.RegisterType((*DeleteSnapshotRequestProto)(nil), "hadoop.hdfs.DeleteSnapshotRequestProto")
	proto.RegisterType((*DeleteSnapshotResponseProto)(nil), "hadoop.hdfs.DeleteSnapshotResponseProto")
	proto.RegisterType((*CheckAccessRequestProto)(nil), "hadoop.hdfs.CheckAccessRequestProto")
	proto.RegisterType((*CheckAccessResponseProto)(nil), "hadoop.hdfs.CheckAccessResponseProto")
	proto.RegisterType((*GetCurrentEditLogTxidRequestProto)(nil), "hadoop.hdfs.GetCurrentEditLogTxidRequestProto")
	proto.RegisterType((*GetCurrentEditLogTxidResponseProto)(nil), "hadoop.hdfs.GetCurrentEditLogTxidResponseProto")
	proto.RegisterType((*GetEditsFromTxidRequestProto)(nil), "hadoop.hdfs.GetEditsFromTxidRequestProto")
	proto.RegisterType((*GetEditsFromTxidResponseProto)(nil), "hadoop.hdfs.GetEditsFromTxidResponseProto")
	proto.RegisterEnum("hadoop.hdfs.CreateFlagProto", CreateFlagProto_name, CreateFlagProto_value)
	proto.RegisterEnum("hadoop.hdfs.AddBlockFlagProto", AddBlockFlagProto_name, AddBlockFlagProto_value)
	proto.RegisterEnum("hadoop.hdfs.DatanodeReportTypeProto", DatanodeReportTypeProto_name, DatanodeReportTypeProto_value)
	proto.RegisterEnum("hadoop.hdfs.SafeModeActionProto", SafeModeActionProto_name, SafeModeActionProto_value)
	proto.RegisterEnum("hadoop.hdfs.RollingUpgradeActionProto", RollingUpgradeActionProto_name, RollingUpgradeActionProto_value)
	proto.RegisterEnum("hadoop.hdfs.CacheFlagProto", CacheFlagProto_name, CacheFlagProto_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for ClientNamenodeProtocol service

type ClientNamenodeProtocolClient interface {
	GetBlockLocations(ctx context.Context, in *GetBlockLocationsRequestProto, opts ...grpc.CallOption) (*GetBlockLocationsResponseProto, error)
	GetServerDefaults(ctx context.Context, in *GetServerDefaultsRequestProto, opts ...grpc.CallOption) (*GetServerDefaultsResponseProto, error)
	Create(ctx context.Context, in *CreateRequestProto, opts ...grpc.CallOption) (*CreateResponseProto, error)
	Append(ctx context.Context, in *AppendRequestProto, opts ...grpc.CallOption) (*AppendResponseProto, error)
	SetReplication(ctx context.Context, in *SetReplicationRequestProto, opts ...grpc.CallOption) (*SetReplicationResponseProto, error)
	SetStoragePolicy(ctx context.Context, in *SetStoragePolicyRequestProto, opts ...grpc.CallOption) (*SetStoragePolicyResponseProto, error)
	UnsetStoragePolicy(ctx context.Context, in *UnsetStoragePolicyRequestProto, opts ...grpc.CallOption) (*UnsetStoragePolicyResponseProto, error)
	GetStoragePolicy(ctx context.Context, in *GetStoragePolicyRequestProto, opts ...grpc.CallOption) (*GetStoragePolicyResponseProto, error)
	GetStoragePolicies(ctx context.Context, in *GetStoragePoliciesRequestProto, opts ...grpc.CallOption) (*GetStoragePoliciesResponseProto, error)
	SetPermission(ctx context.Context, in *SetPermissionRequestProto, opts ...grpc.CallOption) (*SetPermissionResponseProto, error)
	SetOwner(ctx context.Context, in *SetOwnerRequestProto, opts ...grpc.CallOption) (*SetOwnerResponseProto, error)
	AbandonBlock(ctx context.Context, in *AbandonBlockRequestProto, opts ...grpc.CallOption) (*AbandonBlockResponseProto, error)
	AddBlock(ctx context.Context, in *AddBlockRequestProto, opts ...grpc.CallOption) (*AddBlockResponseProto, error)
	GetAdditionalDatanode(ctx context.Context, in *GetAdditionalDatanodeRequestProto, opts ...grpc.CallOption) (*GetAdditionalDatanodeResponseProto, error)
	Complete(ctx context.Context, in *CompleteRequestProto, opts ...grpc.CallOption) (*CompleteResponseProto, error)
	ReportBadBlocks(ctx context.Context, in *ReportBadBlocksRequestProto, opts ...grpc.CallOption) (*ReportBadBlocksResponseProto, error)
	Concat(ctx context.Context, in *ConcatRequestProto, opts ...grpc.CallOption) (*ConcatResponseProto, error)
	Truncate(ctx context.Context, in *TruncateRequestProto, opts ...grpc.CallOption) (*TruncateResponseProto, error)
	Rename(ctx context.Context, in *RenameRequestProto, opts ...grpc.CallOption) (*RenameResponseProto, error)
	Rename2(ctx context.Context, in *Rename2RequestProto, opts ...grpc.CallOption) (*Rename2ResponseProto, error)
	Delete(ctx context.Context, in *DeleteRequestProto, opts ...grpc.CallOption) (*DeleteResponseProto, error)
	Mkdirs(ctx context.Context, in *MkdirsRequestProto, opts ...grpc.CallOption) (*MkdirsResponseProto, error)
	GetListing(ctx context.Context, in *GetListingRequestProto, opts ...grpc.CallOption) (*GetListingResponseProto, error)
	RenewLease(ctx context.Context, in *RenewLeaseRequestProto, opts ...grpc.CallOption) (*RenewLeaseResponseProto, error)
	RecoverLease(ctx context.Context, in *RecoverLeaseRequestProto, opts ...grpc.CallOption) (*RecoverLeaseResponseProto, error)
	GetFsStats(ctx context.Context, in *GetFsStatusRequestProto, opts ...grpc.CallOption) (*GetFsStatsResponseProto, error)
	GetDatanodeReport(ctx context.Context, in *GetDatanodeReportRequestProto, opts ...grpc.CallOption) (*GetDatanodeReportResponseProto, error)
	GetDatanodeStorageReport(ctx context.Context, in *GetDatanodeStorageReportRequestProto, opts ...grpc.CallOption) (*GetDatanodeStorageReportResponseProto, error)
	GetPreferredBlockSize(ctx context.Context, in *GetPreferredBlockSizeRequestProto, opts ...grpc.CallOption) (*GetPreferredBlockSizeResponseProto, error)
	SetSafeMode(ctx context.Context, in *SetSafeModeRequestProto, opts ...grpc.CallOption) (*SetSafeModeResponseProto, error)
	SaveNamespace(ctx context.Context, in *SaveNamespaceRequestProto, opts ...grpc.CallOption) (*SaveNamespaceResponseProto, error)
	RollEdits(ctx context.Context, in *RollEditsRequestProto, opts ...grpc.CallOption) (*RollEditsResponseProto, error)
	RestoreFailedStorage(ctx context.Context, in *RestoreFailedStorageRequestProto, opts ...grpc.CallOption) (*RestoreFailedStorageResponseProto, error)
	RefreshNodes(ctx context.Context, in *RefreshNodesRequestProto, opts ...grpc.CallOption) (*RefreshNodesResponseProto, error)
	FinalizeUpgrade(ctx context.Context, in *FinalizeUpgradeRequestProto, opts ...grpc.CallOption) (*FinalizeUpgradeResponseProto, error)
	RollingUpgrade(ctx context.Context, in *RollingUpgradeRequestProto, opts ...grpc.CallOption) (*RollingUpgradeResponseProto, error)
	ListCorruptFileBlocks(ctx context.Context, in *ListCorruptFileBlocksRequestProto, opts ...grpc.CallOption) (*ListCorruptFileBlocksResponseProto, error)
	MetaSave(ctx context.Context, in *MetaSaveRequestProto, opts ...grpc.CallOption) (*MetaSaveResponseProto, error)
	GetFileInfo(ctx context.Context, in *GetFileInfoRequestProto, opts ...grpc.CallOption) (*GetFileInfoResponseProto, error)
	AddCacheDirective(ctx context.Context, in *AddCacheDirectiveRequestProto, opts ...grpc.CallOption) (*AddCacheDirectiveResponseProto, error)
	ModifyCacheDirective(ctx context.Context, in *ModifyCacheDirectiveRequestProto, opts ...grpc.CallOption) (*ModifyCacheDirectiveResponseProto, error)
	RemoveCacheDirective(ctx context.Context, in *RemoveCacheDirectiveRequestProto, opts ...grpc.CallOption) (*RemoveCacheDirectiveResponseProto, error)
	ListCacheDirectives(ctx context.Context, in *ListCacheDirectivesRequestProto, opts ...grpc.CallOption) (*ListCacheDirectivesResponseProto, error)
	AddCachePool(ctx context.Context, in *AddCachePoolRequestProto, opts ...grpc.CallOption) (*AddCachePoolResponseProto, error)
	ModifyCachePool(ctx context.Context, in *ModifyCachePoolRequestProto, opts ...grpc.CallOption) (*ModifyCachePoolResponseProto, error)
	RemoveCachePool(ctx context.Context, in *RemoveCachePoolRequestProto, opts ...grpc.CallOption) (*RemoveCachePoolResponseProto, error)
	ListCachePools(ctx context.Context, in *ListCachePoolsRequestProto, opts ...grpc.CallOption) (*ListCachePoolsResponseProto, error)
	GetFileLinkInfo(ctx context.Context, in *GetFileLinkInfoRequestProto, opts ...grpc.CallOption) (*GetFileLinkInfoResponseProto, error)
	GetContentSummary(ctx context.Context, in *GetContentSummaryRequestProto, opts ...grpc.CallOption) (*GetContentSummaryResponseProto, error)
	SetQuota(ctx context.Context, in *SetQuotaRequestProto, opts ...grpc.CallOption) (*SetQuotaResponseProto, error)
	Fsync(ctx context.Context, in *FsyncRequestProto, opts ...grpc.CallOption) (*FsyncResponseProto, error)
	SetTimes(ctx context.Context, in *SetTimesRequestProto, opts ...grpc.CallOption) (*SetTimesResponseProto, error)
	CreateSymlink(ctx context.Context, in *CreateSymlinkRequestProto, opts ...grpc.CallOption) (*CreateSymlinkResponseProto, error)
	GetLinkTarget(ctx context.Context, in *GetLinkTargetRequestProto, opts ...grpc.CallOption) (*GetLinkTargetResponseProto, error)
	UpdateBlockForPipeline(ctx context.Context, in *UpdateBlockForPipelineRequestProto, opts ...grpc.CallOption) (*UpdateBlockForPipelineResponseProto, error)
	UpdatePipeline(ctx context.Context, in *UpdatePipelineRequestProto, opts ...grpc.CallOption) (*UpdatePipelineResponseProto, error)
	GetDelegationToken(ctx context.Context, in *GetDelegationTokenRequestProto, opts ...grpc.CallOption) (*GetDelegationTokenResponseProto, error)
	RenewDelegationToken(ctx context.Context, in *RenewDelegationTokenRequestProto, opts ...grpc.CallOption) (*RenewDelegationTokenResponseProto, error)
	CancelDelegationToken(ctx context.Context, in *CancelDelegationTokenRequestProto, opts ...grpc.CallOption) (*CancelDelegationTokenResponseProto, error)
	SetBalancerBandwidth(ctx context.Context, in *SetBalancerBandwidthRequestProto, opts ...grpc.CallOption) (*SetBalancerBandwidthResponseProto, error)
	GetDataEncryptionKey(ctx context.Context, in *GetDataEncryptionKeyRequestProto, opts ...grpc.CallOption) (*GetDataEncryptionKeyResponseProto, error)
	CreateSnapshot(ctx context.Context, in *CreateSnapshotRequestProto, opts ...grpc.CallOption) (*CreateSnapshotResponseProto, error)
	RenameSnapshot(ctx context.Context, in *RenameSnapshotRequestProto, opts ...grpc.CallOption) (*RenameSnapshotResponseProto, error)
	AllowSnapshot(ctx context.Context, in *AllowSnapshotRequestProto, opts ...grpc.CallOption) (*AllowSnapshotResponseProto, error)
	DisallowSnapshot(ctx context.Context, in *DisallowSnapshotRequestProto, opts ...grpc.CallOption) (*DisallowSnapshotResponseProto, error)
	GetSnapshottableDirListing(ctx context.Context, in *GetSnapshottableDirListingRequestProto, opts ...grpc.CallOption) (*GetSnapshottableDirListingResponseProto, error)
	DeleteSnapshot(ctx context.Context, in *DeleteSnapshotRequestProto, opts ...grpc.CallOption) (*DeleteSnapshotResponseProto, error)
	GetSnapshotDiffReport(ctx context.Context, in *GetSnapshotDiffReportRequestProto, opts ...grpc.CallOption) (*GetSnapshotDiffReportResponseProto, error)
	IsFileClosed(ctx context.Context, in *IsFileClosedRequestProto, opts ...grpc.CallOption) (*IsFileClosedResponseProto, error)
	ModifyAclEntries(ctx context.Context, in *ModifyAclEntriesRequestProto, opts ...grpc.CallOption) (*ModifyAclEntriesResponseProto, error)
	RemoveAclEntries(ctx context.Context, in *RemoveAclEntriesRequestProto, opts ...grpc.CallOption) (*RemoveAclEntriesResponseProto, error)
	RemoveDefaultAcl(ctx context.Context, in *RemoveDefaultAclRequestProto, opts ...grpc.CallOption) (*RemoveDefaultAclResponseProto, error)
	RemoveAcl(ctx context.Context, in *RemoveAclRequestProto, opts ...grpc.CallOption) (*RemoveAclResponseProto, error)
	SetAcl(ctx context.Context, in *SetAclRequestProto, opts ...grpc.CallOption) (*SetAclResponseProto, error)
	GetAclStatus(ctx context.Context, in *GetAclStatusRequestProto, opts ...grpc.CallOption) (*GetAclStatusResponseProto, error)
	SetXAttr(ctx context.Context, in *SetXAttrRequestProto, opts ...grpc.CallOption) (*SetXAttrResponseProto, error)
	GetXAttrs(ctx context.Context, in *GetXAttrsRequestProto, opts ...grpc.CallOption) (*GetXAttrsResponseProto, error)
	ListXAttrs(ctx context.Context, in *ListXAttrsRequestProto, opts ...grpc.CallOption) (*ListXAttrsResponseProto, error)
	RemoveXAttr(ctx context.Context, in *RemoveXAttrRequestProto, opts ...grpc.CallOption) (*RemoveXAttrResponseProto, error)
	CheckAccess(ctx context.Context, in *CheckAccessRequestProto, opts ...grpc.CallOption) (*CheckAccessResponseProto, error)
	CreateEncryptionZone(ctx context.Context, in *CreateEncryptionZoneRequestProto, opts ...grpc.CallOption) (*CreateEncryptionZoneResponseProto, error)
	ListEncryptionZones(ctx context.Context, in *ListEncryptionZonesRequestProto, opts ...grpc.CallOption) (*ListEncryptionZonesResponseProto, error)
	GetEZForPath(ctx context.Context, in *GetEZForPathRequestProto, opts ...grpc.CallOption) (*GetEZForPathResponseProto, error)
	SetErasureCodingPolicy(ctx context.Context, in *SetErasureCodingPolicyRequestProto, opts ...grpc.CallOption) (*SetErasureCodingPolicyResponseProto, error)
	GetCurrentEditLogTxid(ctx context.Context, in *GetCurrentEditLogTxidRequestProto, opts ...grpc.CallOption) (*GetCurrentEditLogTxidResponseProto, error)
	GetEditsFromTxid(ctx context.Context, in *GetEditsFromTxidRequestProto, opts ...grpc.CallOption) (*GetEditsFromTxidResponseProto, error)
	GetErasureCodingPolicies(ctx context.Context, in *GetErasureCodingPoliciesRequestProto, opts ...grpc.CallOption) (*GetErasureCodingPoliciesResponseProto, error)
	GetErasureCodingPolicy(ctx context.Context, in *GetErasureCodingPolicyRequestProto, opts ...grpc.CallOption) (*GetErasureCodingPolicyResponseProto, error)
	GetQuotaUsage(ctx context.Context, in *GetQuotaUsageRequestProto, opts ...grpc.CallOption) (*GetQuotaUsageResponseProto, error)
}

type clientNamenodeProtocolClient struct {
	cc *grpc.ClientConn
}

func NewClientNamenodeProtocolClient(cc *grpc.ClientConn) ClientNamenodeProtocolClient {
	return &clientNamenodeProtocolClient{cc}
}

func (c *clientNamenodeProtocolClient) GetBlockLocations(ctx context.Context, in *GetBlockLocationsRequestProto, opts ...grpc.CallOption) (*GetBlockLocationsResponseProto, error) {
	out := new(GetBlockLocationsResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getBlockLocations", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetServerDefaults(ctx context.Context, in *GetServerDefaultsRequestProto, opts ...grpc.CallOption) (*GetServerDefaultsResponseProto, error) {
	out := new(GetServerDefaultsResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getServerDefaults", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) Create(ctx context.Context, in *CreateRequestProto, opts ...grpc.CallOption) (*CreateResponseProto, error) {
	out := new(CreateResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) Append(ctx context.Context, in *AppendRequestProto, opts ...grpc.CallOption) (*AppendResponseProto, error) {
	out := new(AppendResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/append", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) SetReplication(ctx context.Context, in *SetReplicationRequestProto, opts ...grpc.CallOption) (*SetReplicationResponseProto, error) {
	out := new(SetReplicationResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/setReplication", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) SetStoragePolicy(ctx context.Context, in *SetStoragePolicyRequestProto, opts ...grpc.CallOption) (*SetStoragePolicyResponseProto, error) {
	out := new(SetStoragePolicyResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/setStoragePolicy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) UnsetStoragePolicy(ctx context.Context, in *UnsetStoragePolicyRequestProto, opts ...grpc.CallOption) (*UnsetStoragePolicyResponseProto, error) {
	out := new(UnsetStoragePolicyResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/unsetStoragePolicy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetStoragePolicy(ctx context.Context, in *GetStoragePolicyRequestProto, opts ...grpc.CallOption) (*GetStoragePolicyResponseProto, error) {
	out := new(GetStoragePolicyResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getStoragePolicy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetStoragePolicies(ctx context.Context, in *GetStoragePoliciesRequestProto, opts ...grpc.CallOption) (*GetStoragePoliciesResponseProto, error) {
	out := new(GetStoragePoliciesResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getStoragePolicies", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) SetPermission(ctx context.Context, in *SetPermissionRequestProto, opts ...grpc.CallOption) (*SetPermissionResponseProto, error) {
	out := new(SetPermissionResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/setPermission", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) SetOwner(ctx context.Context, in *SetOwnerRequestProto, opts ...grpc.CallOption) (*SetOwnerResponseProto, error) {
	out := new(SetOwnerResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/setOwner", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) AbandonBlock(ctx context.Context, in *AbandonBlockRequestProto, opts ...grpc.CallOption) (*AbandonBlockResponseProto, error) {
	out := new(AbandonBlockResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/abandonBlock", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) AddBlock(ctx context.Context, in *AddBlockRequestProto, opts ...grpc.CallOption) (*AddBlockResponseProto, error) {
	out := new(AddBlockResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/addBlock", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetAdditionalDatanode(ctx context.Context, in *GetAdditionalDatanodeRequestProto, opts ...grpc.CallOption) (*GetAdditionalDatanodeResponseProto, error) {
	out := new(GetAdditionalDatanodeResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getAdditionalDatanode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) Complete(ctx context.Context, in *CompleteRequestProto, opts ...grpc.CallOption) (*CompleteResponseProto, error) {
	out := new(CompleteResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/complete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) ReportBadBlocks(ctx context.Context, in *ReportBadBlocksRequestProto, opts ...grpc.CallOption) (*ReportBadBlocksResponseProto, error) {
	out := new(ReportBadBlocksResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/reportBadBlocks", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) Concat(ctx context.Context, in *ConcatRequestProto, opts ...grpc.CallOption) (*ConcatResponseProto, error) {
	out := new(ConcatResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/concat", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) Truncate(ctx context.Context, in *TruncateRequestProto, opts ...grpc.CallOption) (*TruncateResponseProto, error) {
	out := new(TruncateResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/truncate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) Rename(ctx context.Context, in *RenameRequestProto, opts ...grpc.CallOption) (*RenameResponseProto, error) {
	out := new(RenameResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/rename", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) Rename2(ctx context.Context, in *Rename2RequestProto, opts ...grpc.CallOption) (*Rename2ResponseProto, error) {
	out := new(Rename2ResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/rename2", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) Delete(ctx context.Context, in *DeleteRequestProto, opts ...grpc.CallOption) (*DeleteResponseProto, error) {
	out := new(DeleteResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) Mkdirs(ctx context.Context, in *MkdirsRequestProto, opts ...grpc.CallOption) (*MkdirsResponseProto, error) {
	out := new(MkdirsResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/mkdirs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetListing(ctx context.Context, in *GetListingRequestProto, opts ...grpc.CallOption) (*GetListingResponseProto, error) {
	out := new(GetListingResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getListing", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) RenewLease(ctx context.Context, in *RenewLeaseRequestProto, opts ...grpc.CallOption) (*RenewLeaseResponseProto, error) {
	out := new(RenewLeaseResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/renewLease", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) RecoverLease(ctx context.Context, in *RecoverLeaseRequestProto, opts ...grpc.CallOption) (*RecoverLeaseResponseProto, error) {
	out := new(RecoverLeaseResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/recoverLease", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetFsStats(ctx context.Context, in *GetFsStatusRequestProto, opts ...grpc.CallOption) (*GetFsStatsResponseProto, error) {
	out := new(GetFsStatsResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getFsStats", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetDatanodeReport(ctx context.Context, in *GetDatanodeReportRequestProto, opts ...grpc.CallOption) (*GetDatanodeReportResponseProto, error) {
	out := new(GetDatanodeReportResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getDatanodeReport", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetDatanodeStorageReport(ctx context.Context, in *GetDatanodeStorageReportRequestProto, opts ...grpc.CallOption) (*GetDatanodeStorageReportResponseProto, error) {
	out := new(GetDatanodeStorageReportResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getDatanodeStorageReport", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetPreferredBlockSize(ctx context.Context, in *GetPreferredBlockSizeRequestProto, opts ...grpc.CallOption) (*GetPreferredBlockSizeResponseProto, error) {
	out := new(GetPreferredBlockSizeResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getPreferredBlockSize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) SetSafeMode(ctx context.Context, in *SetSafeModeRequestProto, opts ...grpc.CallOption) (*SetSafeModeResponseProto, error) {
	out := new(SetSafeModeResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/setSafeMode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) SaveNamespace(ctx context.Context, in *SaveNamespaceRequestProto, opts ...grpc.CallOption) (*SaveNamespaceResponseProto, error) {
	out := new(SaveNamespaceResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/saveNamespace", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) RollEdits(ctx context.Context, in *RollEditsRequestProto, opts ...grpc.CallOption) (*RollEditsResponseProto, error) {
	out := new(RollEditsResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/rollEdits", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) RestoreFailedStorage(ctx context.Context, in *RestoreFailedStorageRequestProto, opts ...grpc.CallOption) (*RestoreFailedStorageResponseProto, error) {
	out := new(RestoreFailedStorageResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/restoreFailedStorage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) RefreshNodes(ctx context.Context, in *RefreshNodesRequestProto, opts ...grpc.CallOption) (*RefreshNodesResponseProto, error) {
	out := new(RefreshNodesResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/refreshNodes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) FinalizeUpgrade(ctx context.Context, in *FinalizeUpgradeRequestProto, opts ...grpc.CallOption) (*FinalizeUpgradeResponseProto, error) {
	out := new(FinalizeUpgradeResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/finalizeUpgrade", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) RollingUpgrade(ctx context.Context, in *RollingUpgradeRequestProto, opts ...grpc.CallOption) (*RollingUpgradeResponseProto, error) {
	out := new(RollingUpgradeResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/rollingUpgrade", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) ListCorruptFileBlocks(ctx context.Context, in *ListCorruptFileBlocksRequestProto, opts ...grpc.CallOption) (*ListCorruptFileBlocksResponseProto, error) {
	out := new(ListCorruptFileBlocksResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/listCorruptFileBlocks", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) MetaSave(ctx context.Context, in *MetaSaveRequestProto, opts ...grpc.CallOption) (*MetaSaveResponseProto, error) {
	out := new(MetaSaveResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/metaSave", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetFileInfo(ctx context.Context, in *GetFileInfoRequestProto, opts ...grpc.CallOption) (*GetFileInfoResponseProto, error) {
	out := new(GetFileInfoResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getFileInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) AddCacheDirective(ctx context.Context, in *AddCacheDirectiveRequestProto, opts ...grpc.CallOption) (*AddCacheDirectiveResponseProto, error) {
	out := new(AddCacheDirectiveResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/addCacheDirective", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) ModifyCacheDirective(ctx context.Context, in *ModifyCacheDirectiveRequestProto, opts ...grpc.CallOption) (*ModifyCacheDirectiveResponseProto, error) {
	out := new(ModifyCacheDirectiveResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/modifyCacheDirective", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) RemoveCacheDirective(ctx context.Context, in *RemoveCacheDirectiveRequestProto, opts ...grpc.CallOption) (*RemoveCacheDirectiveResponseProto, error) {
	out := new(RemoveCacheDirectiveResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/removeCacheDirective", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) ListCacheDirectives(ctx context.Context, in *ListCacheDirectivesRequestProto, opts ...grpc.CallOption) (*ListCacheDirectivesResponseProto, error) {
	out := new(ListCacheDirectivesResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/listCacheDirectives", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) AddCachePool(ctx context.Context, in *AddCachePoolRequestProto, opts ...grpc.CallOption) (*AddCachePoolResponseProto, error) {
	out := new(AddCachePoolResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/addCachePool", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) ModifyCachePool(ctx context.Context, in *ModifyCachePoolRequestProto, opts ...grpc.CallOption) (*ModifyCachePoolResponseProto, error) {
	out := new(ModifyCachePoolResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/modifyCachePool", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) RemoveCachePool(ctx context.Context, in *RemoveCachePoolRequestProto, opts ...grpc.CallOption) (*RemoveCachePoolResponseProto, error) {
	out := new(RemoveCachePoolResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/removeCachePool", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) ListCachePools(ctx context.Context, in *ListCachePoolsRequestProto, opts ...grpc.CallOption) (*ListCachePoolsResponseProto, error) {
	out := new(ListCachePoolsResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/listCachePools", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetFileLinkInfo(ctx context.Context, in *GetFileLinkInfoRequestProto, opts ...grpc.CallOption) (*GetFileLinkInfoResponseProto, error) {
	out := new(GetFileLinkInfoResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getFileLinkInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetContentSummary(ctx context.Context, in *GetContentSummaryRequestProto, opts ...grpc.CallOption) (*GetContentSummaryResponseProto, error) {
	out := new(GetContentSummaryResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getContentSummary", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) SetQuota(ctx context.Context, in *SetQuotaRequestProto, opts ...grpc.CallOption) (*SetQuotaResponseProto, error) {
	out := new(SetQuotaResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/setQuota", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) Fsync(ctx context.Context, in *FsyncRequestProto, opts ...grpc.CallOption) (*FsyncResponseProto, error) {
	out := new(FsyncResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/fsync", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) SetTimes(ctx context.Context, in *SetTimesRequestProto, opts ...grpc.CallOption) (*SetTimesResponseProto, error) {
	out := new(SetTimesResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/setTimes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) CreateSymlink(ctx context.Context, in *CreateSymlinkRequestProto, opts ...grpc.CallOption) (*CreateSymlinkResponseProto, error) {
	out := new(CreateSymlinkResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/createSymlink", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetLinkTarget(ctx context.Context, in *GetLinkTargetRequestProto, opts ...grpc.CallOption) (*GetLinkTargetResponseProto, error) {
	out := new(GetLinkTargetResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getLinkTarget", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) UpdateBlockForPipeline(ctx context.Context, in *UpdateBlockForPipelineRequestProto, opts ...grpc.CallOption) (*UpdateBlockForPipelineResponseProto, error) {
	out := new(UpdateBlockForPipelineResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/updateBlockForPipeline", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) UpdatePipeline(ctx context.Context, in *UpdatePipelineRequestProto, opts ...grpc.CallOption) (*UpdatePipelineResponseProto, error) {
	out := new(UpdatePipelineResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/updatePipeline", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetDelegationToken(ctx context.Context, in *GetDelegationTokenRequestProto, opts ...grpc.CallOption) (*GetDelegationTokenResponseProto, error) {
	out := new(GetDelegationTokenResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getDelegationToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) RenewDelegationToken(ctx context.Context, in *RenewDelegationTokenRequestProto, opts ...grpc.CallOption) (*RenewDelegationTokenResponseProto, error) {
	out := new(RenewDelegationTokenResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/renewDelegationToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) CancelDelegationToken(ctx context.Context, in *CancelDelegationTokenRequestProto, opts ...grpc.CallOption) (*CancelDelegationTokenResponseProto, error) {
	out := new(CancelDelegationTokenResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/cancelDelegationToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) SetBalancerBandwidth(ctx context.Context, in *SetBalancerBandwidthRequestProto, opts ...grpc.CallOption) (*SetBalancerBandwidthResponseProto, error) {
	out := new(SetBalancerBandwidthResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/setBalancerBandwidth", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetDataEncryptionKey(ctx context.Context, in *GetDataEncryptionKeyRequestProto, opts ...grpc.CallOption) (*GetDataEncryptionKeyResponseProto, error) {
	out := new(GetDataEncryptionKeyResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getDataEncryptionKey", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) CreateSnapshot(ctx context.Context, in *CreateSnapshotRequestProto, opts ...grpc.CallOption) (*CreateSnapshotResponseProto, error) {
	out := new(CreateSnapshotResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/createSnapshot", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) RenameSnapshot(ctx context.Context, in *RenameSnapshotRequestProto, opts ...grpc.CallOption) (*RenameSnapshotResponseProto, error) {
	out := new(RenameSnapshotResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/renameSnapshot", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) AllowSnapshot(ctx context.Context, in *AllowSnapshotRequestProto, opts ...grpc.CallOption) (*AllowSnapshotResponseProto, error) {
	out := new(AllowSnapshotResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/allowSnapshot", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) DisallowSnapshot(ctx context.Context, in *DisallowSnapshotRequestProto, opts ...grpc.CallOption) (*DisallowSnapshotResponseProto, error) {
	out := new(DisallowSnapshotResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/disallowSnapshot", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetSnapshottableDirListing(ctx context.Context, in *GetSnapshottableDirListingRequestProto, opts ...grpc.CallOption) (*GetSnapshottableDirListingResponseProto, error) {
	out := new(GetSnapshottableDirListingResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getSnapshottableDirListing", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) DeleteSnapshot(ctx context.Context, in *DeleteSnapshotRequestProto, opts ...grpc.CallOption) (*DeleteSnapshotResponseProto, error) {
	out := new(DeleteSnapshotResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/deleteSnapshot", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetSnapshotDiffReport(ctx context.Context, in *GetSnapshotDiffReportRequestProto, opts ...grpc.CallOption) (*GetSnapshotDiffReportResponseProto, error) {
	out := new(GetSnapshotDiffReportResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getSnapshotDiffReport", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) IsFileClosed(ctx context.Context, in *IsFileClosedRequestProto, opts ...grpc.CallOption) (*IsFileClosedResponseProto, error) {
	out := new(IsFileClosedResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/isFileClosed", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) ModifyAclEntries(ctx context.Context, in *ModifyAclEntriesRequestProto, opts ...grpc.CallOption) (*ModifyAclEntriesResponseProto, error) {
	out := new(ModifyAclEntriesResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/modifyAclEntries", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) RemoveAclEntries(ctx context.Context, in *RemoveAclEntriesRequestProto, opts ...grpc.CallOption) (*RemoveAclEntriesResponseProto, error) {
	out := new(RemoveAclEntriesResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/removeAclEntries", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) RemoveDefaultAcl(ctx context.Context, in *RemoveDefaultAclRequestProto, opts ...grpc.CallOption) (*RemoveDefaultAclResponseProto, error) {
	out := new(RemoveDefaultAclResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/removeDefaultAcl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) RemoveAcl(ctx context.Context, in *RemoveAclRequestProto, opts ...grpc.CallOption) (*RemoveAclResponseProto, error) {
	out := new(RemoveAclResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/removeAcl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) SetAcl(ctx context.Context, in *SetAclRequestProto, opts ...grpc.CallOption) (*SetAclResponseProto, error) {
	out := new(SetAclResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/setAcl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetAclStatus(ctx context.Context, in *GetAclStatusRequestProto, opts ...grpc.CallOption) (*GetAclStatusResponseProto, error) {
	out := new(GetAclStatusResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getAclStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) SetXAttr(ctx context.Context, in *SetXAttrRequestProto, opts ...grpc.CallOption) (*SetXAttrResponseProto, error) {
	out := new(SetXAttrResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/setXAttr", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetXAttrs(ctx context.Context, in *GetXAttrsRequestProto, opts ...grpc.CallOption) (*GetXAttrsResponseProto, error) {
	out := new(GetXAttrsResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getXAttrs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) ListXAttrs(ctx context.Context, in *ListXAttrsRequestProto, opts ...grpc.CallOption) (*ListXAttrsResponseProto, error) {
	out := new(ListXAttrsResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/listXAttrs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) RemoveXAttr(ctx context.Context, in *RemoveXAttrRequestProto, opts ...grpc.CallOption) (*RemoveXAttrResponseProto, error) {
	out := new(RemoveXAttrResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/removeXAttr", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) CheckAccess(ctx context.Context, in *CheckAccessRequestProto, opts ...grpc.CallOption) (*CheckAccessResponseProto, error) {
	out := new(CheckAccessResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/checkAccess", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) CreateEncryptionZone(ctx context.Context, in *CreateEncryptionZoneRequestProto, opts ...grpc.CallOption) (*CreateEncryptionZoneResponseProto, error) {
	out := new(CreateEncryptionZoneResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/createEncryptionZone", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) ListEncryptionZones(ctx context.Context, in *ListEncryptionZonesRequestProto, opts ...grpc.CallOption) (*ListEncryptionZonesResponseProto, error) {
	out := new(ListEncryptionZonesResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/listEncryptionZones", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetEZForPath(ctx context.Context, in *GetEZForPathRequestProto, opts ...grpc.CallOption) (*GetEZForPathResponseProto, error) {
	out := new(GetEZForPathResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getEZForPath", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) SetErasureCodingPolicy(ctx context.Context, in *SetErasureCodingPolicyRequestProto, opts ...grpc.CallOption) (*SetErasureCodingPolicyResponseProto, error) {
	out := new(SetErasureCodingPolicyResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/setErasureCodingPolicy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetCurrentEditLogTxid(ctx context.Context, in *GetCurrentEditLogTxidRequestProto, opts ...grpc.CallOption) (*GetCurrentEditLogTxidResponseProto, error) {
	out := new(GetCurrentEditLogTxidResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getCurrentEditLogTxid", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetEditsFromTxid(ctx context.Context, in *GetEditsFromTxidRequestProto, opts ...grpc.CallOption) (*GetEditsFromTxidResponseProto, error) {
	out := new(GetEditsFromTxidResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getEditsFromTxid", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetErasureCodingPolicies(ctx context.Context, in *GetErasureCodingPoliciesRequestProto, opts ...grpc.CallOption) (*GetErasureCodingPoliciesResponseProto, error) {
	out := new(GetErasureCodingPoliciesResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getErasureCodingPolicies", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetErasureCodingPolicy(ctx context.Context, in *GetErasureCodingPolicyRequestProto, opts ...grpc.CallOption) (*GetErasureCodingPolicyResponseProto, error) {
	out := new(GetErasureCodingPolicyResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getErasureCodingPolicy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientNamenodeProtocolClient) GetQuotaUsage(ctx context.Context, in *GetQuotaUsageRequestProto, opts ...grpc.CallOption) (*GetQuotaUsageResponseProto, error) {
	out := new(GetQuotaUsageResponseProto)
	err := grpc.Invoke(ctx, "/hadoop.hdfs.ClientNamenodeProtocol/getQuotaUsage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ClientNamenodeProtocol service

type ClientNamenodeProtocolServer interface {
	GetBlockLocations(context.Context, *GetBlockLocationsRequestProto) (*GetBlockLocationsResponseProto, error)
	GetServerDefaults(context.Context, *GetServerDefaultsRequestProto) (*GetServerDefaultsResponseProto, error)
	Create(context.Context, *CreateRequestProto) (*CreateResponseProto, error)
	Append(context.Context, *AppendRequestProto) (*AppendResponseProto, error)
	SetReplication(context.Context, *SetReplicationRequestProto) (*SetReplicationResponseProto, error)
	SetStoragePolicy(context.Context, *SetStoragePolicyRequestProto) (*SetStoragePolicyResponseProto, error)
	UnsetStoragePolicy(context.Context, *UnsetStoragePolicyRequestProto) (*UnsetStoragePolicyResponseProto, error)
	GetStoragePolicy(context.Context, *GetStoragePolicyRequestProto) (*GetStoragePolicyResponseProto, error)
	GetStoragePolicies(context.Context, *GetStoragePoliciesRequestProto) (*GetStoragePoliciesResponseProto, error)
	SetPermission(context.Context, *SetPermissionRequestProto) (*SetPermissionResponseProto, error)
	SetOwner(context.Context, *SetOwnerRequestProto) (*SetOwnerResponseProto, error)
	AbandonBlock(context.Context, *AbandonBlockRequestProto) (*AbandonBlockResponseProto, error)
	AddBlock(context.Context, *AddBlockRequestProto) (*AddBlockResponseProto, error)
	GetAdditionalDatanode(context.Context, *GetAdditionalDatanodeRequestProto) (*GetAdditionalDatanodeResponseProto, error)
	Complete(context.Context, *CompleteRequestProto) (*CompleteResponseProto, error)
	ReportBadBlocks(context.Context, *ReportBadBlocksRequestProto) (*ReportBadBlocksResponseProto, error)
	Concat(context.Context, *ConcatRequestProto) (*ConcatResponseProto, error)
	Truncate(context.Context, *TruncateRequestProto) (*TruncateResponseProto, error)
	Rename(context.Context, *RenameRequestProto) (*RenameResponseProto, error)
	Rename2(context.Context, *Rename2RequestProto) (*Rename2ResponseProto, error)
	Delete(context.Context, *DeleteRequestProto) (*DeleteResponseProto, error)
	Mkdirs(context.Context, *MkdirsRequestProto) (*MkdirsResponseProto, error)
	GetListing(context.Context, *GetListingRequestProto) (*GetListingResponseProto, error)
	RenewLease(context.Context, *RenewLeaseRequestProto) (*RenewLeaseResponseProto, error)
	RecoverLease(context.Context, *RecoverLeaseRequestProto) (*RecoverLeaseResponseProto, error)
	GetFsStats(context.Context, *GetFsStatusRequestProto) (*GetFsStatsResponseProto, error)
	GetDatanodeReport(context.Context, *GetDatanodeReportRequestProto) (*GetDatanodeReportResponseProto, error)
	GetDatanodeStorageReport(context.Context, *GetDatanodeStorageReportRequestProto) (*GetDatanodeStorageReportResponseProto, error)
	GetPreferredBlockSize(context.Context, *GetPreferredBlockSizeRequestProto) (*GetPreferredBlockSizeResponseProto, error)
	SetSafeMode(context.Context, *SetSafeModeRequestProto) (*SetSafeModeResponseProto, error)
	SaveNamespace(context.Context, *SaveNamespaceRequestProto) (*SaveNamespaceResponseProto, error)
	RollEdits(context.Context, *RollEditsRequestProto) (*RollEditsResponseProto, error)
	RestoreFailedStorage(context.Context, *RestoreFailedStorageRequestProto) (*RestoreFailedStorageResponseProto, error)
	RefreshNodes(context.Context, *RefreshNodesRequestProto) (*RefreshNodesResponseProto, error)
	FinalizeUpgrade(context.Context, *FinalizeUpgradeRequestProto) (*FinalizeUpgradeResponseProto, error)
	RollingUpgrade(context.Context, *RollingUpgradeRequestProto) (*RollingUpgradeResponseProto, error)
	ListCorruptFileBlocks(context.Context, *ListCorruptFileBlocksRequestProto) (*ListCorruptFileBlocksResponseProto, error)
	MetaSave(context.Context, *MetaSaveRequestProto) (*MetaSaveResponseProto, error)
	GetFileInfo(context.Context, *GetFileInfoRequestProto) (*GetFileInfoResponseProto, error)
	AddCacheDirective(context.Context, *AddCacheDirectiveRequestProto) (*AddCacheDirectiveResponseProto, error)
	ModifyCacheDirective(context.Context, *ModifyCacheDirectiveRequestProto) (*ModifyCacheDirectiveResponseProto, error)
	RemoveCacheDirective(context.Context, *RemoveCacheDirectiveRequestProto) (*RemoveCacheDirectiveResponseProto, error)
	ListCacheDirectives(context.Context, *ListCacheDirectivesRequestProto) (*ListCacheDirectivesResponseProto, error)
	AddCachePool(context.Context, *AddCachePoolRequestProto) (*AddCachePoolResponseProto, error)
	ModifyCachePool(context.Context, *ModifyCachePoolRequestProto) (*ModifyCachePoolResponseProto, error)
	RemoveCachePool(context.Context, *RemoveCachePoolRequestProto) (*RemoveCachePoolResponseProto, error)
	ListCachePools(context.Context, *ListCachePoolsRequestProto) (*ListCachePoolsResponseProto, error)
	GetFileLinkInfo(context.Context, *GetFileLinkInfoRequestProto) (*GetFileLinkInfoResponseProto, error)
	GetContentSummary(context.Context, *GetContentSummaryRequestProto) (*GetContentSummaryResponseProto, error)
	SetQuota(context.Context, *SetQuotaRequestProto) (*SetQuotaResponseProto, error)
	Fsync(context.Context, *FsyncRequestProto) (*FsyncResponseProto, error)
	SetTimes(context.Context, *SetTimesRequestProto) (*SetTimesResponseProto, error)
	CreateSymlink(context.Context, *CreateSymlinkRequestProto) (*CreateSymlinkResponseProto, error)
	GetLinkTarget(context.Context, *GetLinkTargetRequestProto) (*GetLinkTargetResponseProto, error)
	UpdateBlockForPipeline(context.Context, *UpdateBlockForPipelineRequestProto) (*UpdateBlockForPipelineResponseProto, error)
	UpdatePipeline(context.Context, *UpdatePipelineRequestProto) (*UpdatePipelineResponseProto, error)
	GetDelegationToken(context.Context, *GetDelegationTokenRequestProto) (*GetDelegationTokenResponseProto, error)
	RenewDelegationToken(context.Context, *RenewDelegationTokenRequestProto) (*RenewDelegationTokenResponseProto, error)
	CancelDelegationToken(context.Context, *CancelDelegationTokenRequestProto) (*CancelDelegationTokenResponseProto, error)
	SetBalancerBandwidth(context.Context, *SetBalancerBandwidthRequestProto) (*SetBalancerBandwidthResponseProto, error)
	GetDataEncryptionKey(context.Context, *GetDataEncryptionKeyRequestProto) (*GetDataEncryptionKeyResponseProto, error)
	CreateSnapshot(context.Context, *CreateSnapshotRequestProto) (*CreateSnapshotResponseProto, error)
	RenameSnapshot(context.Context, *RenameSnapshotRequestProto) (*RenameSnapshotResponseProto, error)
	AllowSnapshot(context.Context, *AllowSnapshotRequestProto) (*AllowSnapshotResponseProto, error)
	DisallowSnapshot(context.Context, *DisallowSnapshotRequestProto) (*DisallowSnapshotResponseProto, error)
	GetSnapshottableDirListing(context.Context, *GetSnapshottableDirListingRequestProto) (*GetSnapshottableDirListingResponseProto, error)
	DeleteSnapshot(context.Context, *DeleteSnapshotRequestProto) (*DeleteSnapshotResponseProto, error)
	GetSnapshotDiffReport(context.Context, *GetSnapshotDiffReportRequestProto) (*GetSnapshotDiffReportResponseProto, error)
	IsFileClosed(context.Context, *IsFileClosedRequestProto) (*IsFileClosedResponseProto, error)
	ModifyAclEntries(context.Context, *ModifyAclEntriesRequestProto) (*ModifyAclEntriesResponseProto, error)
	RemoveAclEntries(context.Context, *RemoveAclEntriesRequestProto) (*RemoveAclEntriesResponseProto, error)
	RemoveDefaultAcl(context.Context, *RemoveDefaultAclRequestProto) (*RemoveDefaultAclResponseProto, error)
	RemoveAcl(context.Context, *RemoveAclRequestProto) (*RemoveAclResponseProto, error)
	SetAcl(context.Context, *SetAclRequestProto) (*SetAclResponseProto, error)
	GetAclStatus(context.Context, *GetAclStatusRequestProto) (*GetAclStatusResponseProto, error)
	SetXAttr(context.Context, *SetXAttrRequestProto) (*SetXAttrResponseProto, error)
	GetXAttrs(context.Context, *GetXAttrsRequestProto) (*GetXAttrsResponseProto, error)
	ListXAttrs(context.Context, *ListXAttrsRequestProto) (*ListXAttrsResponseProto, error)
	RemoveXAttr(context.Context, *RemoveXAttrRequestProto) (*RemoveXAttrResponseProto, error)
	CheckAccess(context.Context, *CheckAccessRequestProto) (*CheckAccessResponseProto, error)
	CreateEncryptionZone(context.Context, *CreateEncryptionZoneRequestProto) (*CreateEncryptionZoneResponseProto, error)
	ListEncryptionZones(context.Context, *ListEncryptionZonesRequestProto) (*ListEncryptionZonesResponseProto, error)
	GetEZForPath(context.Context, *GetEZForPathRequestProto) (*GetEZForPathResponseProto, error)
	SetErasureCodingPolicy(context.Context, *SetErasureCodingPolicyRequestProto) (*SetErasureCodingPolicyResponseProto, error)
	GetCurrentEditLogTxid(context.Context, *GetCurrentEditLogTxidRequestProto) (*GetCurrentEditLogTxidResponseProto, error)
	GetEditsFromTxid(context.Context, *GetEditsFromTxidRequestProto) (*GetEditsFromTxidResponseProto, error)
	GetErasureCodingPolicies(context.Context, *GetErasureCodingPoliciesRequestProto) (*GetErasureCodingPoliciesResponseProto, error)
	GetErasureCodingPolicy(context.Context, *GetErasureCodingPolicyRequestProto) (*GetErasureCodingPolicyResponseProto, error)
	GetQuotaUsage(context.Context, *GetQuotaUsageRequestProto) (*GetQuotaUsageResponseProto, error)
}

func RegisterClientNamenodeProtocolServer(s *grpc.Server, srv ClientNamenodeProtocolServer) {
	s.RegisterService(&_ClientNamenodeProtocol_serviceDesc, srv)
}

func _ClientNamenodeProtocol_GetBlockLocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockLocationsRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetBlockLocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetBlockLocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetBlockLocations(ctx, req.(*GetBlockLocationsRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetServerDefaults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServerDefaultsRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetServerDefaults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetServerDefaults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetServerDefaults(ctx, req.(*GetServerDefaultsRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).Create(ctx, req.(*CreateRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_Append_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppendRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).Append(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/Append",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).Append(ctx, req.(*AppendRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_SetReplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetReplicationRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).SetReplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/SetReplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).SetReplication(ctx, req.(*SetReplicationRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_SetStoragePolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetStoragePolicyRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).SetStoragePolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/SetStoragePolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).SetStoragePolicy(ctx, req.(*SetStoragePolicyRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_UnsetStoragePolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsetStoragePolicyRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).UnsetStoragePolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/UnsetStoragePolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).UnsetStoragePolicy(ctx, req.(*UnsetStoragePolicyRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetStoragePolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStoragePolicyRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetStoragePolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetStoragePolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetStoragePolicy(ctx, req.(*GetStoragePolicyRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetStoragePolicies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStoragePoliciesRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetStoragePolicies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetStoragePolicies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetStoragePolicies(ctx, req.(*GetStoragePoliciesRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_SetPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPermissionRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).SetPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/SetPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).SetPermission(ctx, req.(*SetPermissionRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_SetOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetOwnerRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).SetOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/SetOwner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).SetOwner(ctx, req.(*SetOwnerRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_AbandonBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AbandonBlockRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).AbandonBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/AbandonBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).AbandonBlock(ctx, req.(*AbandonBlockRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_AddBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddBlockRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).AddBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/AddBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).AddBlock(ctx, req.(*AddBlockRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetAdditionalDatanode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAdditionalDatanodeRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetAdditionalDatanode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetAdditionalDatanode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetAdditionalDatanode(ctx, req.(*GetAdditionalDatanodeRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_Complete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompleteRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).Complete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/Complete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).Complete(ctx, req.(*CompleteRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_ReportBadBlocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportBadBlocksRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).ReportBadBlocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/ReportBadBlocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).ReportBadBlocks(ctx, req.(*ReportBadBlocksRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_Concat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConcatRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).Concat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/Concat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).Concat(ctx, req.(*ConcatRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_Truncate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TruncateRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).Truncate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/Truncate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).Truncate(ctx, req.(*TruncateRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_Rename_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenameRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).Rename(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/Rename",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).Rename(ctx, req.(*RenameRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_Rename2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Rename2RequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).Rename2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/Rename2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).Rename2(ctx, req.(*Rename2RequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).Delete(ctx, req.(*DeleteRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_Mkdirs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MkdirsRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).Mkdirs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/Mkdirs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).Mkdirs(ctx, req.(*MkdirsRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetListing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListingRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetListing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetListing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetListing(ctx, req.(*GetListingRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_RenewLease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenewLeaseRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).RenewLease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/RenewLease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).RenewLease(ctx, req.(*RenewLeaseRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_RecoverLease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecoverLeaseRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).RecoverLease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/RecoverLease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).RecoverLease(ctx, req.(*RecoverLeaseRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetFsStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFsStatusRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetFsStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetFsStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetFsStats(ctx, req.(*GetFsStatusRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetDatanodeReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDatanodeReportRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetDatanodeReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetDatanodeReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetDatanodeReport(ctx, req.(*GetDatanodeReportRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetDatanodeStorageReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDatanodeStorageReportRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetDatanodeStorageReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetDatanodeStorageReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetDatanodeStorageReport(ctx, req.(*GetDatanodeStorageReportRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetPreferredBlockSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPreferredBlockSizeRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetPreferredBlockSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetPreferredBlockSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetPreferredBlockSize(ctx, req.(*GetPreferredBlockSizeRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_SetSafeMode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSafeModeRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).SetSafeMode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/SetSafeMode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).SetSafeMode(ctx, req.(*SetSafeModeRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_SaveNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveNamespaceRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).SaveNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/SaveNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).SaveNamespace(ctx, req.(*SaveNamespaceRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_RollEdits_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RollEditsRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).RollEdits(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/RollEdits",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).RollEdits(ctx, req.(*RollEditsRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_RestoreFailedStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RestoreFailedStorageRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).RestoreFailedStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/RestoreFailedStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).RestoreFailedStorage(ctx, req.(*RestoreFailedStorageRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_RefreshNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshNodesRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).RefreshNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/RefreshNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).RefreshNodes(ctx, req.(*RefreshNodesRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_FinalizeUpgrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FinalizeUpgradeRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).FinalizeUpgrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/FinalizeUpgrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).FinalizeUpgrade(ctx, req.(*FinalizeUpgradeRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_RollingUpgrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RollingUpgradeRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).RollingUpgrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/RollingUpgrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).RollingUpgrade(ctx, req.(*RollingUpgradeRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_ListCorruptFileBlocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCorruptFileBlocksRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).ListCorruptFileBlocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/ListCorruptFileBlocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).ListCorruptFileBlocks(ctx, req.(*ListCorruptFileBlocksRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_MetaSave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetaSaveRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).MetaSave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/MetaSave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).MetaSave(ctx, req.(*MetaSaveRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetFileInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFileInfoRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetFileInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetFileInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetFileInfo(ctx, req.(*GetFileInfoRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_AddCacheDirective_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCacheDirectiveRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).AddCacheDirective(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/AddCacheDirective",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).AddCacheDirective(ctx, req.(*AddCacheDirectiveRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_ModifyCacheDirective_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyCacheDirectiveRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).ModifyCacheDirective(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/ModifyCacheDirective",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).ModifyCacheDirective(ctx, req.(*ModifyCacheDirectiveRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_RemoveCacheDirective_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveCacheDirectiveRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).RemoveCacheDirective(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/RemoveCacheDirective",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).RemoveCacheDirective(ctx, req.(*RemoveCacheDirectiveRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_ListCacheDirectives_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCacheDirectivesRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).ListCacheDirectives(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/ListCacheDirectives",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).ListCacheDirectives(ctx, req.(*ListCacheDirectivesRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_AddCachePool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCachePoolRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).AddCachePool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/AddCachePool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).AddCachePool(ctx, req.(*AddCachePoolRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_ModifyCachePool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyCachePoolRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).ModifyCachePool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/ModifyCachePool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).ModifyCachePool(ctx, req.(*ModifyCachePoolRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_RemoveCachePool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveCachePoolRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).RemoveCachePool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/RemoveCachePool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).RemoveCachePool(ctx, req.(*RemoveCachePoolRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_ListCachePools_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCachePoolsRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).ListCachePools(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/ListCachePools",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).ListCachePools(ctx, req.(*ListCachePoolsRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetFileLinkInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFileLinkInfoRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetFileLinkInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetFileLinkInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetFileLinkInfo(ctx, req.(*GetFileLinkInfoRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetContentSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContentSummaryRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetContentSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetContentSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetContentSummary(ctx, req.(*GetContentSummaryRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_SetQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetQuotaRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).SetQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/SetQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).SetQuota(ctx, req.(*SetQuotaRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_Fsync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FsyncRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).Fsync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/Fsync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).Fsync(ctx, req.(*FsyncRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_SetTimes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTimesRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).SetTimes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/SetTimes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).SetTimes(ctx, req.(*SetTimesRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_CreateSymlink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSymlinkRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).CreateSymlink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/CreateSymlink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).CreateSymlink(ctx, req.(*CreateSymlinkRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetLinkTarget_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLinkTargetRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetLinkTarget(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetLinkTarget",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetLinkTarget(ctx, req.(*GetLinkTargetRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_UpdateBlockForPipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBlockForPipelineRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).UpdateBlockForPipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/UpdateBlockForPipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).UpdateBlockForPipeline(ctx, req.(*UpdateBlockForPipelineRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_UpdatePipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePipelineRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).UpdatePipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/UpdatePipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).UpdatePipeline(ctx, req.(*UpdatePipelineRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetDelegationToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDelegationTokenRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetDelegationToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetDelegationToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetDelegationToken(ctx, req.(*GetDelegationTokenRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_RenewDelegationToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenewDelegationTokenRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).RenewDelegationToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/RenewDelegationToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).RenewDelegationToken(ctx, req.(*RenewDelegationTokenRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_CancelDelegationToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelDelegationTokenRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).CancelDelegationToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/CancelDelegationToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).CancelDelegationToken(ctx, req.(*CancelDelegationTokenRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_SetBalancerBandwidth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetBalancerBandwidthRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).SetBalancerBandwidth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/SetBalancerBandwidth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).SetBalancerBandwidth(ctx, req.(*SetBalancerBandwidthRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetDataEncryptionKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDataEncryptionKeyRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetDataEncryptionKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetDataEncryptionKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetDataEncryptionKey(ctx, req.(*GetDataEncryptionKeyRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_CreateSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSnapshotRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).CreateSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/CreateSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).CreateSnapshot(ctx, req.(*CreateSnapshotRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_RenameSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenameSnapshotRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).RenameSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/RenameSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).RenameSnapshot(ctx, req.(*RenameSnapshotRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_AllowSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllowSnapshotRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).AllowSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/AllowSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).AllowSnapshot(ctx, req.(*AllowSnapshotRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_DisallowSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisallowSnapshotRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).DisallowSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/DisallowSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).DisallowSnapshot(ctx, req.(*DisallowSnapshotRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetSnapshottableDirListing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSnapshottableDirListingRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetSnapshottableDirListing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetSnapshottableDirListing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetSnapshottableDirListing(ctx, req.(*GetSnapshottableDirListingRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_DeleteSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSnapshotRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).DeleteSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/DeleteSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).DeleteSnapshot(ctx, req.(*DeleteSnapshotRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetSnapshotDiffReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSnapshotDiffReportRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetSnapshotDiffReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetSnapshotDiffReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetSnapshotDiffReport(ctx, req.(*GetSnapshotDiffReportRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_IsFileClosed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsFileClosedRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).IsFileClosed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/IsFileClosed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).IsFileClosed(ctx, req.(*IsFileClosedRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_ModifyAclEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyAclEntriesRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).ModifyAclEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/ModifyAclEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).ModifyAclEntries(ctx, req.(*ModifyAclEntriesRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_RemoveAclEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveAclEntriesRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).RemoveAclEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/RemoveAclEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).RemoveAclEntries(ctx, req.(*RemoveAclEntriesRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_RemoveDefaultAcl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveDefaultAclRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).RemoveDefaultAcl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/RemoveDefaultAcl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).RemoveDefaultAcl(ctx, req.(*RemoveDefaultAclRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_RemoveAcl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveAclRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).RemoveAcl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/RemoveAcl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).RemoveAcl(ctx, req.(*RemoveAclRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_SetAcl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetAclRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).SetAcl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/SetAcl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).SetAcl(ctx, req.(*SetAclRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetAclStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAclStatusRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetAclStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetAclStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetAclStatus(ctx, req.(*GetAclStatusRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_SetXAttr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetXAttrRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).SetXAttr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/SetXAttr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).SetXAttr(ctx, req.(*SetXAttrRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetXAttrs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetXAttrsRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetXAttrs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetXAttrs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetXAttrs(ctx, req.(*GetXAttrsRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_ListXAttrs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListXAttrsRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).ListXAttrs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/ListXAttrs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).ListXAttrs(ctx, req.(*ListXAttrsRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_RemoveXAttr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveXAttrRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).RemoveXAttr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/RemoveXAttr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).RemoveXAttr(ctx, req.(*RemoveXAttrRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_CheckAccess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckAccessRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).CheckAccess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/CheckAccess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).CheckAccess(ctx, req.(*CheckAccessRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_CreateEncryptionZone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEncryptionZoneRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).CreateEncryptionZone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/CreateEncryptionZone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).CreateEncryptionZone(ctx, req.(*CreateEncryptionZoneRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_ListEncryptionZones_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListEncryptionZonesRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).ListEncryptionZones(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/ListEncryptionZones",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).ListEncryptionZones(ctx, req.(*ListEncryptionZonesRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetEZForPath_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEZForPathRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetEZForPath(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetEZForPath",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetEZForPath(ctx, req.(*GetEZForPathRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_SetErasureCodingPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetErasureCodingPolicyRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).SetErasureCodingPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/SetErasureCodingPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).SetErasureCodingPolicy(ctx, req.(*SetErasureCodingPolicyRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetCurrentEditLogTxid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCurrentEditLogTxidRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetCurrentEditLogTxid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetCurrentEditLogTxid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetCurrentEditLogTxid(ctx, req.(*GetCurrentEditLogTxidRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetEditsFromTxid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEditsFromTxidRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetEditsFromTxid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetEditsFromTxid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetEditsFromTxid(ctx, req.(*GetEditsFromTxidRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetErasureCodingPolicies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetErasureCodingPoliciesRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetErasureCodingPolicies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetErasureCodingPolicies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetErasureCodingPolicies(ctx, req.(*GetErasureCodingPoliciesRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetErasureCodingPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetErasureCodingPolicyRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetErasureCodingPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetErasureCodingPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetErasureCodingPolicy(ctx, req.(*GetErasureCodingPolicyRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientNamenodeProtocol_GetQuotaUsage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQuotaUsageRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientNamenodeProtocolServer).GetQuotaUsage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hadoop.hdfs.ClientNamenodeProtocol/GetQuotaUsage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientNamenodeProtocolServer).GetQuotaUsage(ctx, req.(*GetQuotaUsageRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClientNamenodeProtocol_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hadoop.hdfs.ClientNamenodeProtocol",
	HandlerType: (*ClientNamenodeProtocolServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getBlockLocations",
			Handler:    _ClientNamenodeProtocol_GetBlockLocations_Handler,
		},
		{
			MethodName: "getServerDefaults",
			Handler:    _ClientNamenodeProtocol_GetServerDefaults_Handler,
		},
		{
			MethodName: "create",
			Handler:    _ClientNamenodeProtocol_Create_Handler,
		},
		{
			MethodName: "append",
			Handler:    _ClientNamenodeProtocol_Append_Handler,
		},
		{
			MethodName: "setReplication",
			Handler:    _ClientNamenodeProtocol_SetReplication_Handler,
		},
		{
			MethodName: "setStoragePolicy",
			Handler:    _ClientNamenodeProtocol_SetStoragePolicy_Handler,
		},
		{
			MethodName: "unsetStoragePolicy",
			Handler:    _ClientNamenodeProtocol_UnsetStoragePolicy_Handler,
		},
		{
			MethodName: "getStoragePolicy",
			Handler:    _ClientNamenodeProtocol_GetStoragePolicy_Handler,
		},
		{
			MethodName: "getStoragePolicies",
			Handler:    _ClientNamenodeProtocol_GetStoragePolicies_Handler,
		},
		{
			MethodName: "setPermission",
			Handler:    _ClientNamenodeProtocol_SetPermission_Handler,
		},
		{
			MethodName: "setOwner",
			Handler:    _ClientNamenodeProtocol_SetOwner_Handler,
		},
		{
			MethodName: "abandonBlock",
			Handler:    _ClientNamenodeProtocol_AbandonBlock_Handler,
		},
		{
			MethodName: "addBlock",
			Handler:    _ClientNamenodeProtocol_AddBlock_Handler,
		},
		{
			MethodName: "getAdditionalDatanode",
			Handler:    _ClientNamenodeProtocol_GetAdditionalDatanode_Handler,
		},
		{
			MethodName: "complete",
			Handler:    _ClientNamenodeProtocol_Complete_Handler,
		},
		{
			MethodName: "reportBadBlocks",
			Handler:    _ClientNamenodeProtocol_ReportBadBlocks_Handler,
		},
		{
			MethodName: "concat",
			Handler:    _ClientNamenodeProtocol_Concat_Handler,
		},
		{
			MethodName: "truncate",
			Handler:    _ClientNamenodeProtocol_Truncate_Handler,
		},
		{
			MethodName: "rename",
			Handler:    _ClientNamenodeProtocol_Rename_Handler,
		},
		{
			MethodName: "rename2",
			Handler:    _ClientNamenodeProtocol_Rename2_Handler,
		},
		{
			MethodName: "delete",
			Handler:    _ClientNamenodeProtocol_Delete_Handler,
		},
		{
			MethodName: "mkdirs",
			Handler:    _ClientNamenodeProtocol_Mkdirs_Handler,
		},
		{
			MethodName: "getListing",
			Handler:    _ClientNamenodeProtocol_GetListing_Handler,
		},
		{
			MethodName: "renewLease",
			Handler:    _ClientNamenodeProtocol_RenewLease_Handler,
		},
		{
			MethodName: "recoverLease",
			Handler:    _ClientNamenodeProtocol_RecoverLease_Handler,
		},
		{
			MethodName: "getFsStats",
			Handler:    _ClientNamenodeProtocol_GetFsStats_Handler,
		},
		{
			MethodName: "getDatanodeReport",
			Handler:    _ClientNamenodeProtocol_GetDatanodeReport_Handler,
		},
		{
			MethodName: "getDatanodeStorageReport",
			Handler:    _ClientNamenodeProtocol_GetDatanodeStorageReport_Handler,
		},
		{
			MethodName: "getPreferredBlockSize",
			Handler:    _ClientNamenodeProtocol_GetPreferredBlockSize_Handler,
		},
		{
			MethodName: "setSafeMode",
			Handler:    _ClientNamenodeProtocol_SetSafeMode_Handler,
		},
		{
			MethodName: "saveNamespace",
			Handler:    _ClientNamenodeProtocol_SaveNamespace_Handler,
		},
		{
			MethodName: "rollEdits",
			Handler:    _ClientNamenodeProtocol_RollEdits_Handler,
		},
		{
			MethodName: "restoreFailedStorage",
			Handler:    _ClientNamenodeProtocol_RestoreFailedStorage_Handler,
		},
		{
			MethodName: "refreshNodes",
			Handler:    _ClientNamenodeProtocol_RefreshNodes_Handler,
		},
		{
			MethodName: "finalizeUpgrade",
			Handler:    _ClientNamenodeProtocol_FinalizeUpgrade_Handler,
		},
		{
			MethodName: "rollingUpgrade",
			Handler:    _ClientNamenodeProtocol_RollingUpgrade_Handler,
		},
		{
			MethodName: "listCorruptFileBlocks",
			Handler:    _ClientNamenodeProtocol_ListCorruptFileBlocks_Handler,
		},
		{
			MethodName: "metaSave",
			Handler:    _ClientNamenodeProtocol_MetaSave_Handler,
		},
		{
			MethodName: "getFileInfo",
			Handler:    _ClientNamenodeProtocol_GetFileInfo_Handler,
		},
		{
			MethodName: "addCacheDirective",
			Handler:    _ClientNamenodeProtocol_AddCacheDirective_Handler,
		},
		{
			MethodName: "modifyCacheDirective",
			Handler:    _ClientNamenodeProtocol_ModifyCacheDirective_Handler,
		},
		{
			MethodName: "removeCacheDirective",
			Handler:    _ClientNamenodeProtocol_RemoveCacheDirective_Handler,
		},
		{
			MethodName: "listCacheDirectives",
			Handler:    _ClientNamenodeProtocol_ListCacheDirectives_Handler,
		},
		{
			MethodName: "addCachePool",
			Handler:    _ClientNamenodeProtocol_AddCachePool_Handler,
		},
		{
			MethodName: "modifyCachePool",
			Handler:    _ClientNamenodeProtocol_ModifyCachePool_Handler,
		},
		{
			MethodName: "removeCachePool",
			Handler:    _ClientNamenodeProtocol_RemoveCachePool_Handler,
		},
		{
			MethodName: "listCachePools",
			Handler:    _ClientNamenodeProtocol_ListCachePools_Handler,
		},
		{
			MethodName: "getFileLinkInfo",
			Handler:    _ClientNamenodeProtocol_GetFileLinkInfo_Handler,
		},
		{
			MethodName: "getContentSummary",
			Handler:    _ClientNamenodeProtocol_GetContentSummary_Handler,
		},
		{
			MethodName: "setQuota",
			Handler:    _ClientNamenodeProtocol_SetQuota_Handler,
		},
		{
			MethodName: "fsync",
			Handler:    _ClientNamenodeProtocol_Fsync_Handler,
		},
		{
			MethodName: "setTimes",
			Handler:    _ClientNamenodeProtocol_SetTimes_Handler,
		},
		{
			MethodName: "createSymlink",
			Handler:    _ClientNamenodeProtocol_CreateSymlink_Handler,
		},
		{
			MethodName: "getLinkTarget",
			Handler:    _ClientNamenodeProtocol_GetLinkTarget_Handler,
		},
		{
			MethodName: "updateBlockForPipeline",
			Handler:    _ClientNamenodeProtocol_UpdateBlockForPipeline_Handler,
		},
		{
			MethodName: "updatePipeline",
			Handler:    _ClientNamenodeProtocol_UpdatePipeline_Handler,
		},
		{
			MethodName: "getDelegationToken",
			Handler:    _ClientNamenodeProtocol_GetDelegationToken_Handler,
		},
		{
			MethodName: "renewDelegationToken",
			Handler:    _ClientNamenodeProtocol_RenewDelegationToken_Handler,
		},
		{
			MethodName: "cancelDelegationToken",
			Handler:    _ClientNamenodeProtocol_CancelDelegationToken_Handler,
		},
		{
			MethodName: "setBalancerBandwidth",
			Handler:    _ClientNamenodeProtocol_SetBalancerBandwidth_Handler,
		},
		{
			MethodName: "getDataEncryptionKey",
			Handler:    _ClientNamenodeProtocol_GetDataEncryptionKey_Handler,
		},
		{
			MethodName: "createSnapshot",
			Handler:    _ClientNamenodeProtocol_CreateSnapshot_Handler,
		},
		{
			MethodName: "renameSnapshot",
			Handler:    _ClientNamenodeProtocol_RenameSnapshot_Handler,
		},
		{
			MethodName: "allowSnapshot",
			Handler:    _ClientNamenodeProtocol_AllowSnapshot_Handler,
		},
		{
			MethodName: "disallowSnapshot",
			Handler:    _ClientNamenodeProtocol_DisallowSnapshot_Handler,
		},
		{
			MethodName: "getSnapshottableDirListing",
			Handler:    _ClientNamenodeProtocol_GetSnapshottableDirListing_Handler,
		},
		{
			MethodName: "deleteSnapshot",
			Handler:    _ClientNamenodeProtocol_DeleteSnapshot_Handler,
		},
		{
			MethodName: "getSnapshotDiffReport",
			Handler:    _ClientNamenodeProtocol_GetSnapshotDiffReport_Handler,
		},
		{
			MethodName: "isFileClosed",
			Handler:    _ClientNamenodeProtocol_IsFileClosed_Handler,
		},
		{
			MethodName: "modifyAclEntries",
			Handler:    _ClientNamenodeProtocol_ModifyAclEntries_Handler,
		},
		{
			MethodName: "removeAclEntries",
			Handler:    _ClientNamenodeProtocol_RemoveAclEntries_Handler,
		},
		{
			MethodName: "removeDefaultAcl",
			Handler:    _ClientNamenodeProtocol_RemoveDefaultAcl_Handler,
		},
		{
			MethodName: "removeAcl",
			Handler:    _ClientNamenodeProtocol_RemoveAcl_Handler,
		},
		{
			MethodName: "setAcl",
			Handler:    _ClientNamenodeProtocol_SetAcl_Handler,
		},
		{
			MethodName: "getAclStatus",
			Handler:    _ClientNamenodeProtocol_GetAclStatus_Handler,
		},
		{
			MethodName: "setXAttr",
			Handler:    _ClientNamenodeProtocol_SetXAttr_Handler,
		},
		{
			MethodName: "getXAttrs",
			Handler:    _ClientNamenodeProtocol_GetXAttrs_Handler,
		},
		{
			MethodName: "listXAttrs",
			Handler:    _ClientNamenodeProtocol_ListXAttrs_Handler,
		},
		{
			MethodName: "removeXAttr",
			Handler:    _ClientNamenodeProtocol_RemoveXAttr_Handler,
		},
		{
			MethodName: "checkAccess",
			Handler:    _ClientNamenodeProtocol_CheckAccess_Handler,
		},
		{
			MethodName: "createEncryptionZone",
			Handler:    _ClientNamenodeProtocol_CreateEncryptionZone_Handler,
		},
		{
			MethodName: "listEncryptionZones",
			Handler:    _ClientNamenodeProtocol_ListEncryptionZones_Handler,
		},
		{
			MethodName: "getEZForPath",
			Handler:    _ClientNamenodeProtocol_GetEZForPath_Handler,
		},
		{
			MethodName: "setErasureCodingPolicy",
			Handler:    _ClientNamenodeProtocol_SetErasureCodingPolicy_Handler,
		},
		{
			MethodName: "getCurrentEditLogTxid",
			Handler:    _ClientNamenodeProtocol_GetCurrentEditLogTxid_Handler,
		},
		{
			MethodName: "getEditsFromTxid",
			Handler:    _ClientNamenodeProtocol_GetEditsFromTxid_Handler,
		},
		{
			MethodName: "getErasureCodingPolicies",
			Handler:    _ClientNamenodeProtocol_GetErasureCodingPolicies_Handler,
		},
		{
			MethodName: "getErasureCodingPolicy",
			Handler:    _ClientNamenodeProtocol_GetErasureCodingPolicy_Handler,
		},
		{
			MethodName: "getQuotaUsage",
			Handler:    _ClientNamenodeProtocol_GetQuotaUsage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor3,
}

func init() { proto.RegisterFile("ClientNamenodeProtocol.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 5446 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xc4, 0x3c, 0x5d, 0x6f, 0x1c, 0x47,
	0x72, 0x58, 0x7e, 0x48, 0x64, 0x49, 0xa2, 0xe8, 0x11, 0x25, 0x51, 0x2b, 0x59, 0xa4, 0x46, 0x92,
	0x45, 0xcb, 0x36, 0x65, 0xd1, 0xf6, 0xc1, 0x91, 0x9d, 0xb3, 0x29, 0x72, 0xc9, 0x63, 0x44, 0x91,
	0xf4, 0x90, 0xb2, 0x6c, 0xdd, 0x19, 0xbc, 0xd1, 0xee, 0xec, 0x72, 0xc3, 0xdd, 0x9d, 0xcd, 0xcc,
	0xac, 0x44, 0xe6, 0x0e, 0x08, 0x7c, 0x0f, 0xc9, 0x01, 0x01, 0x82, 0x04, 0xc8, 0x43, 0x1e, 0xf3,
	0x92, 0x87, 0xfc, 0x89, 0x00, 0x49, 0x90, 0x1f, 0x90, 0x9f, 0x90, 0xf7, 0xbc, 0x07, 0x79, 0x4b,
	0xf5, 0xc7, 0xec, 0x74, 0x57, 0xf7, 0xcc, 0xac, 0x2d, 0x07, 0xf7, 0x22, 0xed, 0x74, 0x57, 0x55,
	0x57, 0x7f, 0xd4, 0x57, 0x57, 0x35, 0xe1, 0xc6, 0x5a, 0xa7, 0x1d, 0xf4, 0x92, 0x1d, 0xbf, 0x1b,
	0xf4, 0xc2, 0x46, 0xb0, 0x17, 0x85, 0x49, 0x58, 0x0f, 0x3b, 0xcb, 0x7d, 0xf6, 0xc3, 0x39, 0x77,
	0xe4, 0x37, 0xc2, 0xb0, 0xbf, 0x7c, 0xd4, 0x68, 0xc6, 0xd5, 0x99, 0xfd, 0xa0, 0x3e, 0x88, 0xda,
	0xc9, 0xa9, 0xe8, 0xac, 0x02, 0x6b, 0x95, 0xbf, 0xa7, 0xfd, 0xba, 0xc4, 0xa9, 0x9e, 0x3b, 0xf1,
	0x93, 0x24, 0x92, 0x1f, 0xb3, 0x41, 0xaf, 0x1e, 0x9d, 0xf6, 0x93, 0x76, 0xd8, 0x93, 0x2d, 0x17,
	0xda, 0xbd, 0x30, 0x69, 0x37, 0x53, 0x22, 0x97, 0x82, 0xc8, 0x8f, 0x07, 0x51, 0x50, 0x0f, 0x1b,
	0xed, 0x5e, 0x4b, 0x34, 0xba, 0x3e, 0xbc, 0xbd, 0x19, 0x24, 0x8f, 0x3b, 0x61, 0xfd, 0x78, 0x3b,
	0xac, 0xfb, 0x0c, 0x3b, 0xf6, 0x82, 0x3f, 0x1b, 0x04, 0x71, 0xc2, 0x19, 0x74, 0x66, 0x61, 0x3c,
	0x8e, 0xea, 0xf3, 0x95, 0xc5, 0xb1, 0xa5, 0x69, 0x8f, 0xfd, 0x74, 0xae, 0xc0, 0x99, 0xb0, 0xd9,
	0x8c, 0x83, 0x64, 0x7e, 0x0c, 0x1b, 0x27, 0x3c, 0xf9, 0xc5, 0xda, 0x3b, 0x41, 0xaf, 0x95, 0x1c,
	0xcd, 0x8f, 0x8b, 0x76, 0xf1, 0xe5, 0x1e, 0xc2, 0x4d, 0xcb, 0x10, 0x71, 0x1f, 0xff, 0x13, 0x8b,
	0xe0, 0xfc, 0x31, 0x4c, 0x77, 0xd2, 0x1e, 0x1c, 0xa9, 0xb2, 0x74, 0x6e, 0x65, 0x61, 0x59, 0x59,
	0x8f, 0x65, 0x8e, 0x17, 0x34, 0x38, 0x8d, 0x98, 0xe3, 0x78, 0x19, 0x86, 0xbb, 0xc0, 0xe7, 0xb0,
	0x1f, 0x44, 0xaf, 0x82, 0x68, 0x3d, 0x68, 0xfa, 0x83, 0x4e, 0xa2, 0xcd, 0xc1, 0xed, 0x70, 0x0e,
	0x28, 0x80, 0xca, 0xc1, 0x9f, 0xc0, 0x4c, 0xac, 0x75, 0xf3, 0x09, 0x9f, 0x5b, 0x71, 0x35, 0x36,
	0x36, 0x62, 0x9d, 0x86, 0xe0, 0x84, 0x60, 0xba, 0xff, 0x35, 0x06, 0xce, 0x5a, 0x14, 0x20, 0xc3,
	0x25, 0x0b, 0xf9, 0x33, 0x38, 0xd3, 0xf5, 0xe3, 0xe3, 0xa0, 0xc1, 0x17, 0xf2, 0xdc, 0xca, 0x4d,
	0x32, 0xd8, 0x5e, 0x10, 0x75, 0xdb, 0x71, 0x8c, 0x73, 0x14, 0x03, 0x49, 0x68, 0xe7, 0x26, 0x40,
	0x7d, 0x78, 0x94, 0xf8, 0x62, 0x4f, 0x7b, 0x4a, 0x0b, 0xef, 0xe7, 0xe3, 0x6f, 0x74, 0xfc, 0xd6,
	0xfc, 0x04, 0xf6, 0x5f, 0xf0, 0x94, 0x16, 0xc7, 0x85, 0xf3, 0xe2, 0x6b, 0xcf, 0x8f, 0x10, 0x67,
	0x7e, 0x12, 0x21, 0xa6, 0x3c, 0xad, 0xcd, 0x59, 0x84, 0x73, 0x51, 0xd0, 0xef, 0xb4, 0xc5, 0x1a,
	0xcf, 0x9f, 0xe1, 0x44, 0xd4, 0x26, 0xe7, 0x06, 0x4c, 0xbf, 0x64, 0xfb, 0xb1, 0xdf, 0xfe, 0xf3,
	0x60, 0xfe, 0x2c, 0xdf, 0xf1, 0xac, 0xc1, 0xf9, 0x0e, 0x2e, 0xf3, 0xd3, 0x18, 0xa6, 0xc7, 0xfc,
	0xeb, 0x20, 0x62, 0x33, 0x99, 0x9f, 0x5a, 0x1c, 0x5f, 0x9a, 0x59, 0xb9, 0xa7, 0x4d, 0x75, 0xcd,
	0x06, 0x29, 0xe6, 0x6c, 0xa7, 0xe2, 0x6e, 0xc2, 0xa5, 0x74, 0x89, 0xd5, 0x6d, 0xfc, 0x10, 0xc6,
	0x9a, 0xe9, 0x09, 0x5a, 0xd4, 0x86, 0xf8, 0x05, 0xfe, 0xb3, 0xd1, 0xee, 0x04, 0xfb, 0x89, 0x9f,
	0x0c, 0xe4, 0xc6, 0x21, 0xac, 0xfb, 0x02, 0x9c, 0xd5, 0x7e, 0x3f, 0xe8, 0x35, 0x4a, 0xf6, 0x4a,
	0x5f, 0xf3, 0x31, 0x63, 0xcd, 0x1d, 0x98, 0x68, 0xb2, 0xd5, 0x1e, 0xc7, 0xb1, 0x2f, 0x78, 0xfc,
	0xb7, 0xfb, 0x7d, 0x05, 0x2e, 0xa5, 0xc4, 0x55, 0x2e, 0x3f, 0x86, 0x49, 0xbe, 0x50, 0x92, 0xd1,
	0x9b, 0xb9, 0x47, 0x5d, 0xb0, 0x29, 0x80, 0x11, 0x6b, 0x22, 0x46, 0xe6, 0x71, 0xec, 0xd1, 0x66,
	0xc7, 0xa1, 0xdd, 0x3d, 0xa8, 0xee, 0x07, 0x89, 0x97, 0xed, 0x5b, 0xc9, 0x3c, 0xc9, 0xbe, 0x8f,
	0x19, 0xfb, 0xee, 0x7e, 0x02, 0xd7, 0x29, 0x45, 0x75, 0x72, 0xa8, 0x05, 0xa2, 0x20, 0x46, 0x41,
	0xe0, 0x54, 0xa7, 0x3c, 0xf9, 0x85, 0x8c, 0xdc, 0x40, 0xb4, 0xfd, 0x24, 0x8c, 0xfc, 0x56, 0xb0,
	0x17, 0x22, 0xf2, 0x69, 0xf9, 0x92, 0xf7, 0x39, 0x9c, 0xba, 0xe4, 0x59, 0x0b, 0x13, 0x7b, 0x93,
	0xa2, 0xc2, 0x8a, 0xbb, 0x02, 0x37, 0x9f, 0xe1, 0xc7, 0x0f, 0x19, 0xd4, 0xbd, 0x05, 0x0b, 0x36,
	0x1c, 0x9d, 0xec, 0x8d, 0xcd, 0x22, 0xa2, 0x78, 0x14, 0xfa, 0x3e, 0x6a, 0x41, 0x41, 0x95, 0xff,
	0x76, 0x8f, 0x85, 0x8a, 0xca, 0x25, 0x8a, 0x0a, 0xe8, 0x42, 0xac, 0xf6, 0x4a, 0xfd, 0x73, 0x47,
	0xdb, 0x66, 0x7e, 0x28, 0x34, 0x22, 0x62, 0xab, 0x75, 0x54, 0x77, 0x51, 0xa8, 0x3b, 0xa5, 0xad,
	0x1d, 0xe8, 0x0a, 0xb1, 0x0e, 0x0b, 0x36, 0x08, 0x95, 0xa1, 0x2f, 0x61, 0xaa, 0x2f, 0x3b, 0x90,
	0x97, 0xf1, 0x91, 0x79, 0x19, 0x62, 0xb9, 0x5d, 0xb8, 0x86, 0xfb, 0x93, 0x29, 0xb1, 0x92, 0xed,
	0xfe, 0x39, 0x6e, 0xf7, 0x10, 0x76, 0x44, 0x8d, 0xa8, 0x60, 0xb8, 0x37, 0xf8, 0x49, 0x57, 0x87,
	0x53, 0x37, 0xed, 0x25, 0xcc, 0x61, 0xef, 0xee, 0xeb, 0x5e, 0x10, 0x95, 0xf0, 0x51, 0x85, 0xa9,
	0x01, 0x6a, 0xf4, 0x9e, 0x38, 0x74, 0x15, 0x6c, 0x1e, 0x7e, 0x33, 0x9d, 0xd7, 0x8a, 0xc2, 0x41,
	0xbf, 0x27, 0x14, 0x2f, 0xeb, 0xcc, 0x1a, 0xdc, 0xab, 0x70, 0x39, 0x1b, 0x43, 0x1d, 0xfc, 0x6f,
	0x2a, 0x30, 0xbf, 0xfa, 0xd2, 0xef, 0x35, 0xc2, 0x1e, 0x5f, 0x36, 0x8d, 0x83, 0x0f, 0xa0, 0xf2,
	0x52, 0xee, 0xb6, 0x6e, 0xf4, 0x6a, 0x27, 0x09, 0xaa, 0x0e, 0x4d, 0x15, 0x54, 0x5e, 0xa6, 0x0c,
	0x8f, 0x69, 0xf6, 0xf8, 0x28, 0xec, 0x34, 0x82, 0x48, 0x9a, 0x02, 0xf9, 0xe5, 0x5c, 0x83, 0x33,
	0x4d, 0xd4, 0x09, 0x5b, 0x0d, 0x34, 0x01, 0x95, 0xa5, 0x89, 0x47, 0x95, 0x0f, 0x3d, 0xd9, 0xe0,
	0x5e, 0x87, 0x6b, 0x3a, 0x3f, 0x2a, 0xb7, 0xff, 0x32, 0x06, 0x73, 0xab, 0x8d, 0x86, 0xc9, 0xe9,
	0x0f, 0xd7, 0x8a, 0x9f, 0xe1, 0x21, 0x8a, 0x82, 0x57, 0xed, 0x70, 0x10, 0xf3, 0xe5, 0x1a, 0x61,
	0x8a, 0x43, 0x04, 0xe7, 0x31, 0x9c, 0x0f, 0x4e, 0xea, 0x9d, 0x41, 0x23, 0xd8, 0x41, 0x77, 0x29,
	0xc6, 0x59, 0x8c, 0x1b, 0x47, 0x62, 0xdd, 0x4f, 0x7c, 0xe6, 0x4c, 0x6d, 0xf5, 0x9a, 0xc2, 0x46,
	0x78, 0x1a, 0x8e, 0xb2, 0x06, 0x93, 0x64, 0x0d, 0x98, 0x15, 0x6c, 0xfa, 0xaf, 0xc2, 0x28, 0x68,
	0x08, 0xf2, 0x67, 0x90, 0xfc, 0xb4, 0xa7, 0xb5, 0x31, 0x4d, 0xcd, 0x34, 0x79, 0x8c, 0xf6, 0x8d,
	0x59, 0x2d, 0x7d, 0xec, 0x74, 0x8d, 0x98, 0x4d, 0x95, 0x9a, 0x9a, 0x03, 0xbb, 0x4f, 0xe1, 0x72,
	0xb6, 0x7e, 0x39, 0x8a, 0x7f, 0x6c, 0x64, 0xc5, 0xef, 0x7e, 0x3f, 0x0e, 0xb7, 0x50, 0x5a, 0x91,
	0x64, 0x9b, 0xa9, 0x5b, 0xbf, 0x93, 0x4e, 0xba, 0x64, 0x73, 0x1e, 0xc2, 0xf8, 0xcb, 0xce, 0xb1,
	0x94, 0xa4, 0xd2, 0x75, 0x67, 0xb0, 0xce, 0xe7, 0x30, 0x1d, 0x9c, 0xb4, 0xe3, 0x04, 0xfd, 0x43,
	0xb6, 0x61, 0xa3, 0xac, 0x77, 0x86, 0xe0, 0x3c, 0x82, 0x29, 0xb9, 0xf8, 0xa3, 0x6e, 0xd6, 0x10,
	0xde, 0x59, 0x06, 0xa7, 0x37, 0xe8, 0x66, 0x73, 0x14, 0x7b, 0x32, 0xc9, 0xcd, 0x8f, 0xa5, 0x87,
	0x9c, 0xbc, 0x33, 0xc6, 0xc9, 0x5b, 0x81, 0xb9, 0x94, 0x31, 0xa9, 0xa4, 0x9e, 0x0d, 0xda, 0x0d,
	0xb1, 0x91, 0xd3, 0x9e, 0xb5, 0x4f, 0x39, 0x2c, 0x53, 0x54, 0x60, 0x5e, 0x80, 0x9b, 0xb3, 0x05,
	0x6f, 0xbe, 0xbf, 0xff, 0x50, 0x81, 0xb9, 0xb5, 0xb0, 0xdb, 0xef, 0x04, 0xa5, 0x1e, 0x63, 0x99,
	0xbc, 0x7d, 0x04, 0x13, 0x1d, 0x3f, 0x4e, 0x46, 0x95, 0x35, 0x0e, 0x5c, 0xa4, 0x27, 0x1e, 0xc0,
	0xe5, 0x8c, 0xb3, 0x51, 0xac, 0xfc, 0x33, 0xb8, 0x8e, 0x9e, 0x41, 0x18, 0x25, 0x8f, 0x7d, 0xe9,
	0xad, 0x6b, 0x33, 0x42, 0x8f, 0x97, 0xcf, 0x39, 0x35, 0x29, 0x65, 0x2b, 0x24, 0xa1, 0xdd, 0x9b,
	0x70, 0xc3, 0x20, 0xab, 0xaa, 0xac, 0x47, 0xe8, 0x71, 0x87, 0x3d, 0xc4, 0xa6, 0xeb, 0x97, 0x44,
	0xad, 0x74, 0xfd, 0xf0, 0x27, 0x33, 0xcd, 0xb8, 0x8c, 0x31, 0xae, 0x1c, 0x3b, 0x05, 0xfc, 0xb7,
	0x7b, 0x19, 0x5d, 0x49, 0x89, 0xab, 0x92, 0x6c, 0xc2, 0xdc, 0x41, 0x34, 0x60, 0xed, 0x65, 0x9b,
	0x82, 0x46, 0xa1, 0x17, 0xbc, 0xde, 0x16, 0xa1, 0x8f, 0x08, 0x89, 0xb2, 0x86, 0x32, 0x67, 0x9d,
	0x2d, 0x71, 0x36, 0xce, 0x28, 0x4b, 0xfc, 0x29, 0x38, 0x5e, 0xc0, 0xec, 0x4d, 0x09, 0x5b, 0xd8,
	0xd2, 0x88, 0x93, 0xd4, 0x50, 0xe0, 0x4f, 0xf7, 0x03, 0xb8, 0x94, 0x62, 0x8e, 0x32, 0xd0, 0x61,
	0x0a, 0xbe, 0xf2, 0x43, 0x47, 0x72, 0xee, 0xc0, 0x85, 0x10, 0x43, 0xa2, 0xd7, 0x18, 0xc2, 0x06,
	0xeb, 0x01, 0x3f, 0x90, 0x8c, 0xb2, 0xde, 0xe8, 0x5e, 0x81, 0xb9, 0xe1, 0x00, 0xea, 0xd2, 0xaf,
	0x83, 0xb3, 0x1e, 0x8c, 0x20, 0x0d, 0xb8, 0xf0, 0x11, 0x8b, 0x93, 0xe3, 0xf6, 0x2b, 0x21, 0x0c,
	0x53, 0x5e, 0xd6, 0xc0, 0x66, 0x9b, 0x52, 0x19, 0x65, 0xb6, 0xbf, 0xab, 0x80, 0xf3, 0xf4, 0xb8,
	0xd1, 0x8e, 0xe2, 0xff, 0xa7, 0xa8, 0x8d, 0x46, 0x5d, 0xe3, 0x66, 0xd4, 0xc5, 0x78, 0x4e, 0x79,
	0x18, 0x85, 0xe7, 0x1e, 0x5c, 0x41, 0xad, 0xb4, 0x2d, 0x54, 0x59, 0xb9, 0xea, 0xc0, 0x80, 0x20,
	0x4a, 0x56, 0x9b, 0x09, 0x7a, 0x0a, 0x8c, 0xf5, 0xf3, 0x9e, 0xd2, 0xc2, 0xd8, 0xeb, 0x05, 0x41,
	0x23, 0x8d, 0xd0, 0x53, 0xf6, 0xd4, 0x36, 0xf7, 0x39, 0x5c, 0x55, 0xc7, 0x53, 0x59, 0xfc, 0x1c,
	0xce, 0x22, 0xdf, 0xac, 0x4b, 0x46, 0x35, 0x7a, 0xe4, 0xbc, 0xde, 0xc6, 0x8d, 0x41, 0x5d, 0x7b,
	0x2a, 0x91, 0xc5, 0xd2, 0xa4, 0x28, 0xee, 0x12, 0xbc, 0xc3, 0xfc, 0xd1, 0x9e, 0xdf, 0x8f, 0x8f,
	0xc2, 0x24, 0xf1, 0x5f, 0x76, 0x82, 0x75, 0xd1, 0x45, 0x26, 0xc6, 0x5c, 0xa9, 0x7b, 0x45, 0xa0,
	0x2a, 0x4f, 0x75, 0x98, 0x8b, 0x2d, 0x70, 0x92, 0xc1, 0x07, 0x1a, 0x83, 0x94, 0xa0, 0x85, 0x5b,
	0x2b, 0x31, 0xf7, 0xaf, 0x2b, 0xdc, 0x3a, 0xa7, 0xf8, 0xeb, 0xed, 0x66, 0x53, 0xa8, 0x2a, 0x6d,
	0x3f, 0x70, 0x75, 0x53, 0x6c, 0x2f, 0x0c, 0x13, 0xb9, 0x31, 0x5a, 0x1b, 0x77, 0x48, 0xa2, 0xb0,
	0x9b, 0x52, 0x92, 0xf2, 0xa4, 0xb5, 0xb1, 0x5d, 0x4c, 0xc2, 0x21, 0x84, 0xd4, 0x26, 0x59, 0x8b,
	0xfb, 0xa7, 0xdc, 0x4e, 0xd9, 0x98, 0x51, 0x17, 0x66, 0x1d, 0xa0, 0x31, 0xec, 0xb2, 0x46, 0x1a,
	0x26, 0x05, 0xe9, 0x70, 0x67, 0x78, 0xa8, 0x88, 0xae, 0xa0, 0xf8, 0x32, 0x45, 0xe7, 0xc7, 0xba,
	0xa8, 0xea, 0x3a, 0xaf, 0x62, 0xe8, 0xbc, 0x6b, 0x70, 0x55, 0xc5, 0x54, 0x65, 0x7f, 0x1b, 0xe6,
	0xbd, 0xa0, 0xce, 0xf4, 0x84, 0x49, 0xf6, 0x07, 0xdb, 0x43, 0xf7, 0x23, 0xb8, 0xa6, 0x53, 0x1b,
	0x45, 0xaa, 0xae, 0xf1, 0x53, 0xbe, 0x11, 0x8b, 0x60, 0x5a, 0x3b, 0x7d, 0xff, 0x3b, 0xa6, 0xf4,
	0x11, 0x21, 0xc5, 0xb8, 0xa1, 0xee, 0xf7, 0xfd, 0x7a, 0x3b, 0x11, 0xc1, 0xdb, 0x84, 0x37, 0xfc,
	0x66, 0x76, 0x07, 0x63, 0x88, 0x86, 0xb4, 0x0e, 0xfc, 0xb7, 0xd0, 0x5e, 0x5d, 0xbf, 0xdd, 0xc3,
	0x03, 0x26, 0x6f, 0xcc, 0xb2, 0x06, 0xe7, 0x5d, 0x98, 0x1d, 0xa0, 0xb5, 0x8e, 0x0e, 0xd3, 0xd0,
	0x3b, 0x68, 0xf0, 0x9b, 0x9c, 0x09, 0xef, 0x22, 0x6f, 0xf7, 0x86, 0xcd, 0xce, 0x5d, 0x98, 0xa9,
	0x87, 0x51, 0x34, 0xe8, 0x27, 0x87, 0xd2, 0xb8, 0x4e, 0x72, 0xc0, 0x0b, 0xb2, 0x55, 0x18, 0x4c,
	0x06, 0xc6, 0xf5, 0x52, 0xaf, 0x95, 0x82, 0x9d, 0x11, 0x60, 0xb2, 0x55, 0x82, 0x7d, 0x02, 0x57,
	0x53, 0x30, 0x36, 0xf4, 0x61, 0xd8, 0x0b, 0x52, 0xf8, 0xb3, 0xcc, 0x3d, 0xf0, 0xe6, 0x64, 0x37,
	0xe3, 0x60, 0xb7, 0x17, 0x48, 0xb4, 0x25, 0x98, 0x15, 0x50, 0x87, 0xed, 0xde, 0x61, 0x73, 0x90,
	0x0c, 0xa2, 0x40, 0x78, 0x51, 0xde, 0x8c, 0x68, 0xdf, 0xea, 0x6d, 0xf0, 0x56, 0xd4, 0x9f, 0x57,
	0xd9, 0x95, 0x08, 0x1b, 0xa0, 0xc1, 0xf4, 0x33, 0x2a, 0x96, 0x74, 0x80, 0x69, 0x8e, 0x70, 0x59,
	0x76, 0xaf, 0xcb, 0x5e, 0x31, 0x82, 0xfb, 0x2d, 0x0f, 0xa1, 0x33, 0xc7, 0xcb, 0x90, 0xb1, 0x4f,
	0x61, 0x22, 0x39, 0xed, 0x8b, 0xf3, 0x36, 0x43, 0xce, 0xb3, 0x8e, 0x76, 0x80, 0x60, 0xd2, 0x03,
	0x62, 0x18, 0xee, 0x1e, 0x0f, 0x98, 0x29, 0x69, 0x75, 0x73, 0x97, 0x61, 0xac, 0xd1, 0xb6, 0x3a,
	0x2d, 0xa6, 0x53, 0x8b, 0x90, 0xee, 0xaf, 0xe1, 0x8e, 0x42, 0x51, 0x7a, 0x99, 0x3f, 0x29, 0xcf,
	0xff, 0x5c, 0x81, 0xaa, 0x95, 0xbe, 0x20, 0x8c, 0xc1, 0x53, 0x43, 0xe1, 0xcc, 0xea, 0x91, 0x5a,
	0x82, 0x27, 0x15, 0xc7, 0xd9, 0x84, 0x99, 0x58, 0xa5, 0x2c, 0xfc, 0x26, 0xea, 0x57, 0x9a, 0x83,
	0x7b, 0x04, 0xcd, 0xfd, 0x7d, 0x05, 0xee, 0xe6, 0x2f, 0x87, 0xba, 0xce, 0x87, 0x70, 0xa5, 0x61,
	0x83, 0x4a, 0x1d, 0xc6, 0x7b, 0xd6, 0x09, 0x58, 0x58, 0xc8, 0x21, 0xe3, 0x7e, 0xc1, 0xb5, 0xf5,
	0x5e, 0x14, 0x34, 0x83, 0x28, 0x92, 0xbe, 0x26, 0xbb, 0xb0, 0xd4, 0x76, 0x05, 0x45, 0x99, 0x39,
	0xc0, 0xbd, 0x4c, 0x7b, 0x0d, 0xbf, 0xd1, 0xd5, 0x74, 0x73, 0x08, 0xa8, 0xf3, 0x98, 0xc3, 0x48,
	0x20, 0x66, 0x17, 0xa3, 0x42, 0x13, 0x88, 0x0f, 0x37, 0x81, 0xab, 0xec, 0xc6, 0xca, 0x6f, 0x06,
	0x4f, 0x69, 0xf8, 0xf6, 0x29, 0x9c, 0xf1, 0xeb, 0xdc, 0xf0, 0x8a, 0xa3, 0xa0, 0xdf, 0xef, 0xa5,
	0x28, 0xab, 0x1c, 0x44, 0xfa, 0x15, 0x02, 0xde, 0x59, 0x80, 0xb3, 0xf5, 0xa3, 0xa0, 0x2e, 0x1c,
	0x92, 0xca, 0xd2, 0xd4, 0xa3, 0xc9, 0xa6, 0xdf, 0x41, 0x5d, 0x97, 0xb6, 0xba, 0x2b, 0x30, 0xaf,
	0x8d, 0x3a, 0x8a, 0x0e, 0x7c, 0x0e, 0xd7, 0xf6, 0xfd, 0x57, 0x01, 0x53, 0xa2, 0x31, 0xea, 0x30,
	0x9d, 0xd7, 0x5b, 0x68, 0x84, 0xda, 0xdd, 0xe0, 0x79, 0xbb, 0xd7, 0x08, 0x5f, 0x73, 0x6b, 0xca,
	0x83, 0x06, 0xa5, 0xd1, 0xb9, 0x0a, 0x93, 0xc9, 0xc9, 0xa6, 0xdf, 0xe7, 0x2c, 0xf1, 0x5e, 0xf1,
	0x8d, 0x46, 0xa3, 0x4a, 0x08, 0xeb, 0x3a, 0x74, 0x32, 0xc6, 0xde, 0x06, 0x27, 0x3a, 0xf5, 0x68,
	0x22, 0x89, 0x06, 0x81, 0x27, 0x9a, 0xd8, 0xed, 0x8a, 0x17, 0x76, 0x3a, 0x35, 0x0c, 0xc1, 0x74,
	0xa5, 0xfc, 0x25, 0xda, 0xa1, 0xac, 0x43, 0x25, 0xf7, 0x0e, 0xcc, 0xa0, 0x95, 0xd9, 0x0f, 0x5a,
	0x5d, 0x34, 0x08, 0x07, 0x27, 0x5b, 0x0d, 0xb9, 0x1d, 0xa4, 0xd5, 0xfd, 0x18, 0x16, 0x11, 0x11,
	0x0f, 0x4a, 0xb0, 0xe1, 0xe3, 0x3e, 0x37, 0x86, 0x67, 0x46, 0x37, 0x3e, 0x7e, 0x16, 0x4c, 0xe0,
	0x4f, 0xf7, 0x33, 0xb8, 0x65, 0xc7, 0x1a, 0x65, 0x81, 0xab, 0xcc, 0xce, 0x35, 0xf1, 0xe3, 0x88,
	0xc7, 0xb3, 0xda, 0x84, 0xae, 0x33, 0xab, 0xa5, 0xf6, 0xa9, 0x06, 0xf2, 0x6d, 0xb8, 0xbe, 0xd1,
	0xc6, 0x08, 0x14, 0xcf, 0xd3, 0xb3, 0x7e, 0x2b, 0xf2, 0xf5, 0x73, 0xc4, 0x22, 0x25, 0xa3, 0x5b,
	0x45, 0xff, 0x15, 0x54, 0xd9, 0x62, 0xa1, 0x7a, 0xb5, 0x60, 0x3b, 0x3f, 0x27, 0xa7, 0xf0, 0x1d,
	0xed, 0x14, 0xea, 0x88, 0x96, 0xb3, 0xe8, 0xfe, 0x67, 0x05, 0x2d, 0xbb, 0x06, 0x35, 0xd4, 0x2d,
	0x8c, 0x76, 0xcc, 0x2d, 0xaa, 0xd4, 0x45, 0x45, 0xb4, 0xd5, 0x7b, 0x6c, 0x89, 0xc5, 0xec, 0x25,
	0x77, 0x57, 0x0f, 0xda, 0xd2, 0xd4, 0xa3, 0xbd, 0x1c, 0x36, 0x70, 0xe7, 0x49, 0xce, 0x9b, 0x03,
	0x08, 0x83, 0xaa, 0xb5, 0x61, 0x78, 0x7e, 0x59, 0x78, 0xdb, 0x0d, 0x36, 0xda, 0x4b, 0xbf, 0x7e,
	0xbc, 0xd5, 0xc5, 0x0d, 0x8b, 0xb9, 0x61, 0x9d, 0xf2, 0xec, 0x9d, 0x6e, 0x8c, 0x21, 0x2d, 0x59,
	0x31, 0x75, 0x83, 0x0f, 0xc0, 0x89, 0x8c, 0x19, 0x4b, 0x17, 0xf3, 0x4e, 0xc1, 0x14, 0x33, 0xa5,
	0x6b, 0xc1, 0x77, 0x77, 0xe1, 0x16, 0xf3, 0x2e, 0xd7, 0x84, 0x05, 0x67, 0x57, 0xfb, 0x96, 0x68,
	0xda, 0x72, 0xd1, 0xcc, 0xce, 0x5b, 0x3d, 0x0c, 0x8f, 0xdb, 0xe9, 0xdd, 0xa5, 0xfc, 0x72, 0xeb,
	0xe0, 0xe6, 0x10, 0xd4, 0x13, 0x71, 0x67, 0xa5, 0xd3, 0x20, 0x37, 0xe9, 0xb6, 0x9e, 0xa7, 0xa1,
	0xd8, 0xd2, 0x8d, 0x97, 0x38, 0xa8, 0x69, 0xe6, 0x9e, 0x06, 0x89, 0xcf, 0x04, 0x7c, 0x64, 0x7d,
	0x8a, 0x62, 0x9d, 0xe1, 0xa8, 0x27, 0xf5, 0x3d, 0xe1, 0x6a, 0xb1, 0x8b, 0x08, 0x5c, 0x91, 0x92,
	0x6b, 0x7b, 0x74, 0x1b, 0x35, 0xe0, 0x37, 0x4b, 0x0a, 0xbd, 0x0f, 0xf3, 0x5b, 0xbc, 0x63, 0xad,
	0x13, 0xa2, 0xab, 0x56, 0x32, 0x36, 0x3a, 0x99, 0x3a, 0xf4, 0x28, 0xf2, 0xff, 0xef, 0x28, 0x29,
	0x6b, 0x3e, 0xaa, 0x68, 0x11, 0x6b, 0x60, 0xc0, 0x9a, 0x49, 0xca, 0x0c, 0x8c, 0xb5, 0x85, 0x0a,
	0x1c, 0xf7, 0xf0, 0xd7, 0x70, 0x9f, 0xc5, 0x8e, 0x8a, 0x7d, 0x26, 0x79, 0x1a, 0x91, 0x76, 0xd2,
	0xf2, 0x73, 0x0c, 0x2b, 0x0c, 0x3b, 0xfc, 0x52, 0x87, 0x61, 0xe1, 0x6f, 0x67, 0x07, 0x20, 0x38,
	0xe9, 0xb7, 0x23, 0x81, 0x34, 0xc9, 0x97, 0x64, 0x59, 0xdf, 0x62, 0x83, 0xa7, 0xda, 0x10, 0x41,
	0x86, 0x00, 0x19, 0x05, 0xf7, 0x97, 0x70, 0xab, 0x14, 0x81, 0x2d, 0x41, 0xb7, 0x8d, 0x27, 0x5c,
	0x08, 0xfe, 0xb8, 0x27, 0xbf, 0x98, 0xf3, 0xde, 0xc6, 0xf3, 0xd7, 0xf1, 0x93, 0x2c, 0x7e, 0x57,
	0x5a, 0xdc, 0x7f, 0xab, 0xc0, 0xbc, 0x4e, 0x9d, 0x7b, 0xdd, 0x82, 0x28, 0xce, 0xff, 0xe5, 0x69,
	0x12, 0xc4, 0x3b, 0x18, 0x9f, 0x06, 0x0d, 0x49, 0x59, 0x6d, 0x1a, 0x42, 0x70, 0x12, 0xc2, 0xf5,
	0x4e, 0x21, 0x44, 0x13, 0x83, 0x60, 0xc7, 0x30, 0xa5, 0x31, 0x2e, 0x20, 0x94, 0xa6, 0x21, 0x84,
	0xa4, 0x31, 0xa1, 0x40, 0x48, 0x1a, 0x38, 0x89, 0x23, 0x3f, 0xe6, 0x53, 0x0e, 0x1a, 0x32, 0x93,
	0xaa, 0xb4, 0xb8, 0xa7, 0xf0, 0xf6, 0x6a, 0xa3, 0xa1, 0x4f, 0x83, 0x7a, 0x80, 0xed, 0xcc, 0x41,
	0xbb, 0x53, 0xb2, 0x19, 0xd2, 0x03, 0x64, 0x18, 0x3c, 0xf8, 0x61, 0x00, 0x1b, 0xfc, 0x86, 0x7a,
	0x8c, 0x9f, 0x00, 0xa5, 0xc5, 0xfd, 0x10, 0x6e, 0x5a, 0x86, 0x56, 0x0f, 0x67, 0x7a, 0xd0, 0xc6,
	0xc4, 0x41, 0x73, 0x7f, 0x0b, 0x8b, 0xe8, 0x22, 0xb4, 0x9b, 0xa7, 0x7f, 0x10, 0x7e, 0x6f, 0xc3,
	0x2d, 0xfb, 0xe8, 0x7a, 0xf2, 0x0d, 0x4d, 0x75, 0x17, 0x23, 0xba, 0x02, 0x16, 0xe9, 0xb4, 0x6e,
	0x33, 0x43, 0x6d, 0xc3, 0x51, 0x09, 0xbf, 0x86, 0x05, 0xae, 0x20, 0x35, 0x10, 0x5d, 0xdf, 0xe2,
	0x41, 0x66, 0xc9, 0x89, 0xad, 0x94, 0xb6, 0xfc, 0x72, 0x3e, 0xe7, 0x17, 0xa8, 0xe9, 0xb5, 0xca,
	0xa8, 0x8b, 0x22, 0x71, 0xdc, 0xbf, 0x33, 0x8e, 0x79, 0xad, 0x97, 0x44, 0xa7, 0x6f, 0xba, 0xda,
	0x9f, 0xa1, 0x2b, 0xc5, 0xc4, 0x45, 0xf2, 0x74, 0xb7, 0x00, 0x35, 0x13, 0x2b, 0x4f, 0xe0, 0xb8,
	0x7f, 0x01, 0x8b, 0xd6, 0xc5, 0x50, 0x0f, 0xcf, 0x2a, 0x4c, 0x61, 0x80, 0xc6, 0x7c, 0xa8, 0xd4,
	0x39, 0x2f, 0x1a, 0x23, 0x9b, 0x93, 0x37, 0x44, 0x73, 0xe6, 0xe1, 0x2c, 0x8a, 0xca, 0x53, 0xf4,
	0xa0, 0xa4, 0xf8, 0xa7, 0x9f, 0xee, 0xff, 0x54, 0xc0, 0xe1, 0x04, 0xf6, 0x50, 0x6d, 0x65, 0x9a,
	0xb1, 0xca, 0x92, 0x92, 0x61, 0x47, 0x5e, 0x2b, 0xf0, 0xdc, 0x5c, 0xfa, 0xcd, 0xfc, 0x83, 0x90,
	0xa5, 0xde, 0x76, 0xb2, 0xc4, 0x5d, 0xd6, 0x30, 0xcc, 0xdc, 0xed, 0xd0, 0xcc, 0x5d, 0x9a, 0xbd,
	0xef, 0xa2, 0xab, 0xc5, 0x75, 0xe5, 0xa4, 0xc7, 0x7f, 0x33, 0x17, 0xbe, 0xd3, 0xee, 0xb6, 0x13,
	0xae, 0x26, 0xc7, 0x3d, 0xf1, 0xe1, 0xbc, 0x0f, 0x6f, 0x75, 0xfd, 0x93, 0x54, 0x47, 0x71, 0x29,
	0x3f, 0xc5, 0x40, 0x9a, 0x41, 0x98, 0x1d, 0xce, 0x43, 0x70, 0x1a, 0xa2, 0x2c, 0x44, 0xc9, 0x97,
	0xf3, 0x38, 0xfa, 0xc2, 0xa3, 0xca, 0x43, 0xcf, 0xd2, 0xe9, 0xfe, 0x47, 0x05, 0x2e, 0x0d, 0x67,
	0xfe, 0x13, 0x2b, 0x3c, 0xf4, 0x87, 0xf9, 0xe7, 0xee, 0xab, 0x20, 0x12, 0x73, 0x13, 0x3a, 0x8f,
	0xb4, 0x52, 0xc5, 0x38, 0x51, 0xaa, 0x18, 0x27, 0x0d, 0xc5, 0x88, 0x1e, 0xcc, 0x7c, 0xaa, 0x7d,
	0xd8, 0x4c, 0x34, 0x41, 0xfa, 0x48, 0x3b, 0xd5, 0x0b, 0xe6, 0xb1, 0xd1, 0x76, 0x5d, 0x1c, 0x68,
	0x9e, 0xb3, 0xd4, 0x08, 0xaa, 0xd2, 0xeb, 0xc1, 0x75, 0x45, 0x77, 0xfc, 0x34, 0x03, 0xa2, 0x2b,
	0x6d, 0xd0, 0x54, 0xc7, 0xfc, 0x23, 0x96, 0xeb, 0x18, 0xaa, 0x15, 0x63, 0x4c, 0xfd, 0xac, 0x8e,
	0xa9, 0x67, 0x55, 0xe4, 0x33, 0x08, 0xaa, 0x4a, 0xfa, 0x4b, 0xa8, 0x0e, 0xe5, 0x8f, 0xf5, 0xc6,
	0xf4, 0x32, 0x91, 0x69, 0x9e, 0x3d, 0x9d, 0xba, 0xd6, 0xc6, 0xbc, 0x56, 0x4a, 0x41, 0x15, 0xde,
	0x47, 0x70, 0x16, 0x25, 0x30, 0xca, 0x92, 0xfb, 0x8b, 0xf6, 0x35, 0x51, 0xc4, 0x36, 0x45, 0x28,
	0x90, 0xda, 0xdf, 0xa9, 0x67, 0x57, 0xd1, 0x62, 0x3f, 0x66, 0xf9, 0x9d, 0x9f, 0xe9, 0x0a, 0x2c,
	0x87, 0x41, 0x53, 0x77, 0x3d, 0x80, 0xeb, 0xd2, 0x15, 0xdc, 0x6e, 0xf7, 0x8e, 0x47, 0xf0, 0x1d,
	0xf7, 0x78, 0x3d, 0x87, 0x8e, 0xf0, 0x66, 0xfe, 0xe3, 0x47, 0xfc, 0xaa, 0x6a, 0x2d, 0xec, 0x25,
	0xb8, 0x66, 0xfb, 0x83, 0x6e, 0xd7, 0x8f, 0xca, 0x4b, 0x44, 0x7e, 0xc5, 0x2f, 0xa1, 0x28, 0x12,
	0xd9, 0xb4, 0x58, 0xb4, 0xcb, 0x95, 0x24, 0x6b, 0xa2, 0xa1, 0xca, 0x4d, 0x93, 0x08, 0xb8, 0x2a,
	0xd7, 0x90, 0xfa, 0x57, 0x83, 0x30, 0xf1, 0x9f, 0xc5, 0x34, 0xb6, 0xb5, 0xb1, 0xb3, 0x07, 0x55,
	0x82, 0xa0, 0xb2, 0xb2, 0x02, 0x93, 0x03, 0xd6, 0x2a, 0x19, 0xb9, 0xa1, 0x31, 0x92, 0x21, 0xc9,
	0x8d, 0xe1, 0xa0, 0xee, 0xbf, 0x56, 0x78, 0x0d, 0x06, 0xef, 0x2d, 0x8d, 0x63, 0x58, 0xe8, 0x9e,
	0xde, 0x11, 0x70, 0x0c, 0x19, 0xf2, 0x91, 0x56, 0xa6, 0x8f, 0xe5, 0x65, 0x93, 0x02, 0x2a, 0x82,
	0x3f, 0xb3, 0xc3, 0xf9, 0x02, 0xce, 0xc9, 0x46, 0x76, 0x9d, 0xc6, 0xd5, 0xfd, 0xcc, 0xca, 0xdb,
	0xb6, 0xeb, 0xac, 0xec, 0xba, 0x4d, 0xc5, 0x90, 0x25, 0x1e, 0x72, 0x0a, 0xaa, 0xc4, 0xfe, 0x65,
	0x05, 0xde, 0xda, 0x88, 0x4f, 0x7b, 0xf5, 0xf2, 0xe2, 0x49, 0x71, 0x3f, 0x2d, 0x6f, 0xab, 0xe5,
	0x17, 0xce, 0xe3, 0x22, 0x4b, 0xc6, 0x8a, 0x2a, 0xc9, 0xb4, 0x8a, 0xb2, 0xb2, 0xe4, 0x3c, 0x1a,
	0xfb, 0xe0, 0xa1, 0x47, 0xbb, 0x8a, 0x52, 0xb6, 0x73, 0xe0, 0x48, 0x3e, 0x54, 0xf6, 0x0e, 0xf8,
	0xd2, 0xb3, 0x28, 0xb8, 0x2c, 0xbd, 0x85, 0x66, 0xaf, 0x9b, 0x64, 0x21, 0xb6, 0xf8, 0x60, 0xad,
	0x7e, 0x92, 0xc5, 0xd5, 0xe2, 0x43, 0xae, 0x86, 0xa4, 0xaa, 0x0e, 0xf7, 0x4f, 0x15, 0xb8, 0x26,
	0xea, 0xf3, 0xf6, 0x4f, 0xbb, 0x18, 0xdb, 0x1e, 0x53, 0x3f, 0x0a, 0xe3, 0xf6, 0x56, 0x90, 0xa6,
	0x41, 0xe4, 0x17, 0x3b, 0x07, 0x0c, 0x56, 0xae, 0x0c, 0xff, 0x8d, 0x0e, 0x10, 0x4b, 0x12, 0xb1,
	0x9c, 0x1a, 0x1f, 0xba, 0x3c, 0xdd, 0x96, 0x82, 0x1b, 0xf9, 0xb6, 0x09, 0x4b, 0xbe, 0xed, 0x06,
	0x54, 0x09, 0x9b, 0xea, 0x2c, 0x84, 0xcc, 0x30, 0xa5, 0x70, 0xc0, 0x19, 0x2c, 0x95, 0x99, 0xcf,
	0xb9, 0xcc, 0xa8, 0x08, 0xaa, 0xcc, 0xb0, 0xdc, 0x0d, 0x6f, 0xde, 0x13, 0x78, 0x15, 0x9e, 0xbb,
	0x19, 0xb6, 0xb8, 0xbf, 0x01, 0xf7, 0x59, 0xbf, 0x81, 0xcc, 0x88, 0xaa, 0x92, 0x30, 0xda, 0x6b,
	0xf7, 0x03, 0xe4, 0x4a, 0x97, 0xd5, 0x4f, 0xf4, 0x1a, 0x83, 0xd2, 0x1c, 0xbf, 0xac, 0x1e, 0x2c,
	0xcb, 0x94, 0xfc, 0x12, 0x6e, 0xe7, 0x0d, 0xfe, 0xe6, 0x15, 0x0e, 0x7f, 0x3b, 0x06, 0x55, 0x41,
	0xdd, 0x3a, 0xa5, 0x92, 0x74, 0x11, 0xab, 0x22, 0x0a, 0x3b, 0x82, 0xec, 0xa8, 0xd5, 0x2c, 0x43,
	0x04, 0x86, 0xdc, 0x0b, 0x5e, 0x0b, 0xe4, 0xf1, 0x11, 0x91, 0x53, 0x04, 0x3c, 0x7d, 0xec, 0xb7,
	0x5a, 0x7e, 0x74, 0xc3, 0x7e, 0x83, 0xbe, 0x9e, 0x61, 0x0e, 0xeb, 0x53, 0xa4, 0xde, 0xd8, 0x5a,
	0x67, 0x09, 0x19, 0x56, 0x6f, 0xa0, 0xb4, 0xb0, 0x6b, 0x3c, 0xba, 0x22, 0xba, 0x03, 0xb0, 0x88,
	0x92, 0xf5, 0xd8, 0xef, 0xf8, 0xbd, 0x7a, 0x10, 0x3d, 0xf6, 0x7b, 0x8d, 0xd7, 0xed, 0x46, 0x72,
	0xa4, 0x2d, 0x1b, 0x2b, 0xc0, 0x4d, 0x3b, 0xa4, 0x3f, 0x98, 0x35, 0xb0, 0xa0, 0xc7, 0x4e, 0x41,
	0x1d, 0xc6, 0x85, 0x45, 0x79, 0x2f, 0x5f, 0x1b, 0x16, 0x8f, 0x3f, 0x09, 0x34, 0x5b, 0xe5, 0xbe,
	0xe2, 0x37, 0xe6, 0x16, 0x18, 0xf5, 0x5c, 0x7c, 0x05, 0x6f, 0x35, 0x28, 0x84, 0x34, 0x99, 0xb7,
	0x8d, 0x15, 0xd3, 0xa0, 0xc4, 0xc2, 0x99, 0xd8, 0x6e, 0x63, 0x28, 0x9b, 0x69, 0x92, 0xf4, 0x47,
	0x24, 0x54, 0xd3, 0x6f, 0x25, 0x28, 0xd0, 0xda, 0xdc, 0x55, 0xb8, 0x4e, 0x47, 0x51, 0xe7, 0xa5,
	0x90, 0xd8, 0xcb, 0xa4, 0x5d, 0x6b, 0x73, 0xff, 0xbe, 0x02, 0x55, 0x51, 0xc7, 0xf0, 0xa3, 0x39,
	0x5d, 0x82, 0x8b, 0xe9, 0xf7, 0x6e, 0xa7, 0xa1, 0x88, 0x28, 0x6d, 0x56, 0x21, 0x77, 0xf0, 0xac,
	0x65, 0x35, 0x25, 0xb4, 0x99, 0x9d, 0x30, 0xca, 0x95, 0xba, 0xf5, 0x5f, 0xa0, 0x3b, 0xdd, 0xe9,
	0x84, 0xaf, 0x7f, 0x2c, 0xcf, 0x4c, 0x77, 0x12, 0x02, 0x2a, 0xf9, 0xc7, 0x70, 0x63, 0xbd, 0x1d,
	0xfb, 0x6f, 0x34, 0xc2, 0x02, 0xbc, 0x6d, 0xd2, 0x50, 0x07, 0xc1, 0x23, 0x22, 0x4a, 0x3c, 0x7e,
	0xc2, 0x23, 0x32, 0x66, 0x1c, 0x11, 0x5c, 0x48, 0x3a, 0x8a, 0xca, 0xc4, 0x31, 0x5c, 0x5d, 0x63,
	0x99, 0x96, 0xd5, 0x7a, 0x3d, 0x88, 0xcb, 0x2f, 0x68, 0x3f, 0x97, 0xa1, 0xe6, 0x18, 0xbf, 0x60,
	0x5f, 0xd2, 0x2b, 0x0a, 0xeb, 0x8a, 0xd7, 0x8c, 0xb6, 0x4d, 0xbd, 0x62, 0xe7, 0x58, 0x2c, 0x6d,
	0xa0, 0x0d, 0xa6, 0x32, 0x72, 0x9b, 0x0b, 0xea, 0xda, 0x20, 0x62, 0xa6, 0x8d, 0x65, 0x43, 0xb6,
	0xc3, 0xd6, 0xc1, 0x49, 0x5b, 0xbb, 0xbe, 0x74, 0x3f, 0xe5, 0xe9, 0x2b, 0x1b, 0x90, 0x7a, 0xec,
	0x91, 0xf1, 0xe4, 0x64, 0x78, 0x87, 0xc2, 0x7f, 0xcb, 0xb2, 0x67, 0x9e, 0x65, 0xd9, 0x88, 0xc2,
	0x2e, 0xa5, 0x6c, 0xc5, 0xf9, 0x8e, 0x3b, 0xc2, 0x04, 0x47, 0x2f, 0x1b, 0x81, 0xe0, 0x15, 0xbb,
	0x0b, 0x90, 0x85, 0x19, 0xa6, 0x33, 0x59, 0x1b, 0x76, 0xa7, 0xd7, 0x8f, 0xc3, 0x86, 0xfb, 0xdf,
	0xc2, 0xc5, 0xb5, 0xe1, 0xb3, 0x06, 0x41, 0x10, 0xe0, 0xcc, 0x9a, 0x57, 0x5b, 0x3d, 0xa8, 0xcd,
	0x56, 0x9c, 0x0b, 0x30, 0xbd, 0xfb, 0x75, 0xcd, 0x7b, 0xee, 0x6d, 0xe1, 0xe7, 0x18, 0xeb, 0x5a,
	0xdd, 0xdb, 0xab, 0xed, 0xac, 0xcf, 0x4e, 0xa0, 0xdf, 0x73, 0x7e, 0x7b, 0xf5, 0xc5, 0xb7, 0x87,
	0x7b, 0x35, 0x6f, 0x7f, 0x6b, 0xff, 0x60, 0x76, 0x96, 0x01, 0xef, 0xd4, 0x9e, 0x1f, 0x3e, 0xde,
	0xde, 0x5d, 0x7b, 0x32, 0xbb, 0x78, 0xff, 0x1e, 0xbc, 0x65, 0xd4, 0x77, 0xe2, 0x14, 0x67, 0x76,
	0x76, 0x0f, 0x11, 0x62, 0x75, 0xfb, 0x50, 0x50, 0xad, 0xdc, 0x7f, 0x02, 0x57, 0x73, 0x12, 0xb5,
	0xce, 0x59, 0x18, 0x5f, 0xdd, 0xde, 0x46, 0x46, 0xa6, 0x60, 0x62, 0x7b, 0xeb, 0x6b, 0xc6, 0x03,
	0xfe, 0x5a, 0xaf, 0xad, 0xae, 0xcf, 0x8e, 0x3b, 0x97, 0xe0, 0xe2, 0x7a, 0x6d, 0x6d, 0xf7, 0xe9,
	0xd3, 0xad, 0xfd, 0xfd, 0xad, 0xdd, 0x9d, 0xad, 0x9d, 0xcd, 0xd9, 0x89, 0xfb, 0x47, 0x70, 0xc9,
	0x92, 0xea, 0x63, 0xe3, 0xee, 0xaf, 0x6e, 0xd4, 0x9e, 0xee, 0xae, 0xd7, 0x0e, 0xb7, 0x6b, 0xab,
	0x5f, 0xb3, 0xc9, 0xa9, 0x6d, 0xb5, 0x9d, 0x83, 0x9a, 0x87, 0xd4, 0x71, 0x56, 0xc3, 0xb6, 0xcd,
	0xda, 0x01, 0x8e, 0x72, 0x15, 0x09, 0xa6, 0x2d, 0x1b, 0xbb, 0xde, 0x1a, 0xc2, 0x7e, 0xb3, 0x75,
	0x80, 0x23, 0xa1, 0xf8, 0xe7, 0xa6, 0x73, 0x9c, 0x69, 0x98, 0xfc, 0xea, 0x59, 0xcd, 0xfb, 0x16,
	0x87, 0xc1, 0x9f, 0xfb, 0x07, 0xab, 0xde, 0x01, 0x52, 0x3f, 0x0f, 0x53, 0x1b, 0x5b, 0x3b, 0xab,
	0xdb, 0x5b, 0x2f, 0x6a, 0xb3, 0xe3, 0xf7, 0xaf, 0xc3, 0xcc, 0x5a, 0x7a, 0x77, 0x37, 0xc4, 0xe2,
	0x43, 0xcc, 0x56, 0x56, 0xfe, 0x7b, 0x03, 0xae, 0xd8, 0x5f, 0x3b, 0x39, 0x1d, 0x78, 0xab, 0x45,
	0x5f, 0x03, 0x39, 0xf7, 0xb5, 0x2d, 0x2f, 0x7c, 0x90, 0x54, 0x7d, 0xaf, 0x0c, 0x56, 0x3d, 0x5f,
	0x62, 0x34, 0xfd, 0xd5, 0x8e, 0x39, 0x5a, 0xfe, 0xd3, 0x21, 0x73, 0xb4, 0xa2, 0x57, 0x44, 0x4f,
	0xd0, 0xb9, 0xe7, 0xe7, 0xd1, 0x21, 0x31, 0xae, 0xf1, 0x1a, 0xa8, 0xba, 0x68, 0x05, 0x20, 0xc4,
	0x7c, 0xfe, 0x78, 0x84, 0x10, 0x33, 0x9f, 0xab, 0x10, 0x62, 0xb6, 0x27, 0x27, 0x75, 0xf6, 0xbe,
	0x49, 0xbd, 0x67, 0x72, 0xf4, 0x4c, 0x7a, 0xfe, 0x1b, 0x91, 0xea, 0x52, 0x21, 0xa0, 0x3a, 0x48,
	0x1b, 0x66, 0xe9, 0xcb, 0x09, 0xe7, 0x5d, 0x8a, 0x9d, 0xfb, 0x6e, 0xa2, 0x7a, 0xbf, 0x04, 0x54,
	0x1d, 0x2a, 0x04, 0x67, 0x60, 0x3c, 0xd3, 0x70, 0xf4, 0xcd, 0x2a, 0x7e, 0xfb, 0x51, 0x7d, 0xbf,
	0x14, 0x98, 0xcc, 0xad, 0x55, 0x3c, 0xb7, 0xcd, 0xd1, 0xe7, 0xb6, 0x59, 0x36, 0xb7, 0x96, 0xf1,
	0x38, 0xc3, 0x79, 0xaf, 0x88, 0x02, 0x79, 0xdf, 0x41, 0xe6, 0x56, 0xf6, 0xd4, 0xe3, 0xd7, 0x70,
	0x21, 0x56, 0x5f, 0x4e, 0x38, 0xef, 0xd0, 0x9d, 0xb0, 0x3f, 0xe2, 0xa8, 0xde, 0x2b, 0x82, 0xd3,
	0xdd, 0xc3, 0xa9, 0x58, 0xbe, 0x8c, 0x70, 0x6e, 0x51, 0x24, 0xe3, 0x51, 0x46, 0xd5, 0xcd, 0x01,
	0x51, 0x49, 0x7e, 0x07, 0xe7, 0x7d, 0xe5, 0x09, 0x83, 0xa3, 0x5f, 0x3e, 0xe7, 0xbd, 0xb6, 0xa8,
	0xbe, 0x53, 0x00, 0x46, 0x38, 0xf6, 0xa5, 0xfe, 0x27, 0x1c, 0xdb, 0x9e, 0x46, 0x10, 0x8e, 0xed,
	0xd5, 0xff, 0x27, 0x70, 0xb9, 0x65, 0xab, 0x21, 0x77, 0x96, 0xe9, 0x6e, 0x15, 0x97, 0xfa, 0x57,
	0x1f, 0x8c, 0x02, 0x4f, 0x26, 0x53, 0x97, 0x65, 0xdc, 0x64, 0x32, 0xb6, 0xba, 0x73, 0x32, 0x19,
	0x7b, 0x01, 0x78, 0x13, 0x2e, 0x46, 0x7a, 0x45, 0xb6, 0xa3, 0x2b, 0x8a, 0x82, 0x32, 0xf0, 0xea,
	0xbb, 0xc5, 0x90, 0x54, 0xa5, 0xf2, 0xea, 0x6c, 0xaa, 0x52, 0x8d, 0x72, 0xef, 0xea, 0xa2, 0x15,
	0x80, 0xac, 0x43, 0x22, 0x6b, 0xad, 0xc9, 0x3a, 0xd8, 0x4a, 0xbd, 0xc9, 0x3a, 0xd8, 0xab, 0xb4,
	0x9f, 0xb0, 0xfc, 0x2e, 0x7f, 0x1b, 0xb4, 0x40, 0x26, 0x45, 0x4b, 0xb4, 0x09, 0x7f, 0xb6, 0x4a,
	0xec, 0x1d, 0x38, 0x2b, 0x88, 0xad, 0x38, 0x36, 0x60, 0xad, 0x0e, 0xbb, 0x7a, 0xcb, 0x0e, 0x41,
	0x98, 0xe3, 0x25, 0x76, 0x94, 0x39, 0xb3, 0xba, 0x9a, 0x30, 0x67, 0x2b, 0x9c, 0x46, 0x62, 0x5d,
	0x5e, 0x9b, 0x4c, 0x88, 0x99, 0x45, 0xd3, 0x84, 0x98, 0xad, 0xa2, 0xf9, 0x39, 0x40, 0x6b, 0x58,
	0x49, 0xec, 0xdc, 0xa6, 0x07, 0xda, 0x52, 0xf9, 0x5b, 0xbd, 0x93, 0x0b, 0x44, 0x08, 0x47, 0xc3,
	0xd2, 0x52, 0x42, 0xd8, 0x5e, 0xad, 0x4a, 0x08, 0xe7, 0x14, 0xa6, 0x32, 0x7d, 0x13, 0x29, 0xa5,
	0xa4, 0x44, 0xdf, 0xe4, 0xd5, 0xac, 0x12, 0x7d, 0x93, 0x5f, 0x8c, 0xfa, 0x0d, 0x5f, 0x10, 0x59,
	0x58, 0xea, 0x18, 0x73, 0xb5, 0x55, 0xa3, 0x56, 0x73, 0xa0, 0xac, 0x2e, 0x90, 0xee, 0xa3, 0x9a,
	0x2e, 0x50, 0x7e, 0x5d, 0xa5, 0xe9, 0x02, 0x15, 0x15, 0x4a, 0x7e, 0x5f, 0x81, 0xf9, 0x56, 0x4e,
	0xa9, 0x9f, 0xf3, 0x30, 0x8f, 0x52, 0x6e, 0x81, 0x64, 0x75, 0x65, 0x44, 0x14, 0x53, 0xd1, 0x9a,
	0x25, 0x7a, 0xa6, 0xa2, 0x2d, 0xae, 0x03, 0x34, 0x15, 0x6d, 0x59, 0xd9, 0xdf, 0x0b, 0x38, 0x17,
	0x67, 0xa5, 0x76, 0x64, 0x1b, 0x73, 0x4a, 0xff, 0xaa, 0x77, 0xf3, 0xa1, 0xa8, 0x95, 0x56, 0x2b,
	0xe7, 0xa8, 0x95, 0xce, 0x2b, 0xd7, 0xa3, 0x56, 0x3a, 0xbf, 0xfa, 0xee, 0x00, 0xa6, 0xa3, 0xb4,
	0x90, 0xce, 0x71, 0x8d, 0xda, 0x25, 0xa3, 0xf2, 0xae, 0x7a, 0x3b, 0x0f, 0x46, 0xa5, 0x3a, 0x80,
	0xb9, 0xc8, 0x52, 0x26, 0xe7, 0x7c, 0x40, 0x24, 0xa3, 0xb8, 0xfe, 0xae, 0xba, 0x3c, 0x02, 0xb8,
	0x21, 0xaf, 0x59, 0x11, 0x9d, 0x21, 0xaf, 0xf6, 0xda, 0x3b, 0x43, 0x5e, 0x73, 0xca, 0xf0, 0x98,
	0xfd, 0x6b, 0xea, 0x75, 0x76, 0xc4, 0xfe, 0x15, 0x14, 0xe9, 0x11, 0xfb, 0x57, 0x54, 0xaf, 0xc7,
	0x1c, 0x77, 0xbd, 0x3c, 0x8c, 0x38, 0xee, 0xf9, 0xc5, 0x7c, 0xc4, 0x71, 0x2f, 0xaa, 0x61, 0x43,
	0x81, 0xe9, 0xd8, 0x8a, 0xc3, 0x88, 0xc0, 0x94, 0x56, 0xa4, 0x11, 0x81, 0x19, 0xa1, 0xe0, 0x0c,
	0x2d, 0x72, 0x57, 0x56, 0x7f, 0x11, 0x8b, 0x6c, 0x2b, 0x24, 0x23, 0x16, 0xd9, 0x5a, 0x37, 0xc6,
	0x64, 0xb0, 0x95, 0x95, 0x82, 0x59, 0x54, 0xa9, 0xa5, 0xa2, 0x8c, 0xc8, 0x60, 0x6e, 0x29, 0x19,
	0xea, 0x52, 0x9f, 0x96, 0xd4, 0x10, 0x5d, 0x5a, 0x58, 0xed, 0x43, 0x74, 0x69, 0x49, 0x79, 0x0e,
	0x4a, 0x4e, 0xd7, 0x52, 0x10, 0x43, 0x24, 0xa7, 0xac, 0x62, 0x87, 0x48, 0x4e, 0x69, 0x89, 0x8d,
	0x10, 0x58, 0xb3, 0x5c, 0xc6, 0x10, 0xd8, 0xe2, 0x2a, 0x1c, 0x43, 0x60, 0x4b, 0x0a, 0x70, 0x9c,
	0x08, 0x2e, 0x75, 0xcc, 0x9a, 0x13, 0xe7, 0x7d, 0xf3, 0x48, 0xe5, 0x97, 0xe8, 0x54, 0x3f, 0x28,
	0x87, 0xa6, 0x41, 0x84, 0x52, 0x53, 0x40, 0x83, 0x88, 0x9c, 0xfa, 0x05, 0x1a, 0x44, 0xe4, 0x55,
	0x25, 0x30, 0x25, 0xd1, 0xd5, 0x2b, 0x08, 0x88, 0x92, 0x28, 0xa8, 0x59, 0x20, 0x4a, 0xa2, 0xa8,
	0x12, 0x41, 0x38, 0xe3, 0x5a, 0x39, 0x81, 0xe1, 0x8c, 0xe7, 0xd6, 0x29, 0x18, 0xce, 0x78, 0x7e,
	0x59, 0x02, 0x53, 0x46, 0x1d, 0xad, 0xa8, 0x80, 0x28, 0xa3, 0xfc, 0x9a, 0x05, 0xa2, 0x8c, 0x8a,
	0x4a, 0x13, 0x70, 0x32, 0x2d, 0x3d, 0x1d, 0x4f, 0x26, 0x53, 0x90, 0xdd, 0xaf, 0xbe, 0x5b, 0x0c,
	0x69, 0xfa, 0x45, 0x7a, 0xd2, 0xdc, 0xf4, 0x8b, 0xf2, 0x93, 0xf8, 0xa6, 0x5f, 0x54, 0x94, 0xbb,
	0x17, 0x11, 0xb0, 0xc8, 0x42, 0x1b, 0x11, 0xb0, 0x91, 0x12, 0x37, 0x23, 0x60, 0x33, 0xe5, 0xec,
	0xfc, 0x02, 0x26, 0x9b, 0x2c, 0xd3, 0xeb, 0xd0, 0x94, 0x28, 0xc9, 0x42, 0x57, 0x17, 0x6c, 0xfd,
	0x26, 0x73, 0x3c, 0x8f, 0x6b, 0x32, 0x67, 0x24, 0x8d, 0x4d, 0xe6, 0xcc, 0x0c, 0x30, 0xf3, 0x56,
	0xea, 0x6a, 0x66, 0x95, 0x78, 0x2b, 0xb9, 0xc9, 0xe1, 0xea, 0xbd, 0x22, 0x38, 0x32, 0x42, 0x4b,
	0x4d, 0xb6, 0x92, 0x11, 0x72, 0x33, 0xb7, 0x64, 0x84, 0x82, 0x84, 0xed, 0x6f, 0xe0, 0xca, 0xc0,
	0x9a, 0x13, 0x75, 0x74, 0x3b, 0x57, 0x9e, 0xb5, 0xad, 0x7e, 0x38, 0x12, 0x02, 0x91, 0xb5, 0x81,
	0x96, 0x20, 0x24, 0xb2, 0x96, 0x9f, 0x4f, 0x25, 0xb2, 0x56, 0x90, 0x66, 0x74, 0x62, 0x7e, 0xd5,
	0xc4, 0xa2, 0xbd, 0x16, 0xbf, 0xcf, 0x3b, 0x08, 0x8f, 0x83, 0x5e, 0xa6, 0xe8, 0xeb, 0x61, 0xb7,
	0x1b, 0xf6, 0xb8, 0xd7, 0xad, 0x83, 0xd8, 0x15, 0x7d, 0x01, 0xb8, 0x3a, 0xe8, 0x29, 0xb3, 0x2f,
	0x18, 0x64, 0xd1, 0x61, 0x1f, 0x10, 0x3a, 0x9e, 0x05, 0xc8, 0xbe, 0xa8, 0x85, 0x08, 0xea, 0xd0,
	0xbf, 0x85, 0xcb, 0x75, 0x96, 0x0f, 0xed, 0xd0, 0xb1, 0x29, 0xa9, 0x35, 0x1b, 0x94, 0x36, 0xf8,
	0xc3, 0xd1, 0x30, 0x88, 0x61, 0x8d, 0x2d, 0x29, 0x59, 0x62, 0x58, 0xcb, 0xf2, 0xbe, 0xc4, 0xb0,
	0x96, 0x26, 0x79, 0xd9, 0xb0, 0x2d, 0x4b, 0x02, 0x97, 0x0c, 0x5b, 0x96, 0x07, 0xae, 0x2e, 0x8f,
	0x00, 0x4e, 0x0e, 0x70, 0x5d, 0xcb, 0xac, 0x3a, 0x56, 0xd1, 0xb6, 0x64, 0xee, 0xc8, 0x01, 0x2e,
	0xca, 0xcf, 0x32, 0xf7, 0x58, 0x4b, 0x72, 0x52, 0xf7, 0x38, 0x37, 0x2f, 0x4b, 0xdd, 0xe3, 0xfc,
	0x54, 0x29, 0xd3, 0x34, 0x5a, 0x12, 0x92, 0x68, 0x9a, 0xdc, 0x34, 0x2a, 0xd1, 0x34, 0xf9, 0xd9,
	0x52, 0x76, 0xbb, 0xdc, 0x20, 0x99, 0x4e, 0x72, 0xbb, 0x5c, 0x94, 0x4c, 0x25, 0xb7, 0xcb, 0x85,
	0x39, 0x53, 0xe7, 0xaf, 0x2a, 0x50, 0x6d, 0xe5, 0x3e, 0xa0, 0x76, 0x3e, 0x32, 0x6e, 0x8e, 0xcb,
	0x1f, 0x65, 0x57, 0x3f, 0x1e, 0x19, 0x89, 0xec, 0x5d, 0x43, 0xcb, 0xab, 0x92, 0xbd, 0xcb, 0x4f,
	0xed, 0x92, 0xbd, 0x2b, 0xc8, 0xce, 0xca, 0xbb, 0x00, 0xf3, 0x39, 0xb3, 0x79, 0x17, 0x50, 0xfc,
	0x82, 0xdb, 0xbc, 0x0b, 0x28, 0x7b, 0x64, 0x8d, 0xbe, 0x65, 0x5b, 0x79, 0x16, 0x42, 0x7c, 0xcb,
	0xbc, 0xf7, 0x25, 0xc4, 0xb7, 0xcc, 0x7f, 0x58, 0x82, 0x47, 0x46, 0xf8, 0x96, 0x32, 0x69, 0xcc,
	0x72, 0x04, 0x36, 0x97, 0x31, 0xeb, 0x2e, 0x38, 0x32, 0x26, 0x28, 0x19, 0x4a, 0xb8, 0x97, 0xb9,
	0x43, 0x79, 0xa4, 0xbb, 0x60, 0x28, 0x13, 0xd4, 0x3a, 0x94, 0x4c, 0xb0, 0x21, 0x9c, 0x75, 0xa8,
	0xac, 0xbb, 0x74, 0x28, 0x15, 0x94, 0xde, 0x76, 0xa4, 0xbc, 0xd0, 0xdb, 0x8e, 0xb4, 0xbd, 0xe8,
	0xb6, 0x23, 0x83, 0x21, 0xb7, 0xa4, 0xa8, 0xe3, 0x19, 0xc9, 0x05, 0xaa, 0xa6, 0x29, 0xbd, 0x45,
	0x2b, 0x00, 0x39, 0x42, 0x2d, 0xde, 0x2c, 0x2e, 0xff, 0x1c, 0x23, 0x4a, 0x1d, 0x76, 0x15, 0x1c,
	0x21, 0x1d, 0xcc, 0x74, 0xfb, 0xbe, 0x59, 0x4d, 0x12, 0x4b, 0x56, 0x86, 0x37, 0x17, 0xbb, 0x7d,
	0x12, 0x84, 0x2c, 0x6a, 0x4b, 0x76, 0xd0, 0x2b, 0xa4, 0xcd, 0xb4, 0xbd, 0x60, 0x51, 0x15, 0x18,
	0x72, 0xa9, 0xcb, 0xe2, 0x0e, 0x49, 0xf6, 0xb6, 0x11, 0x4a, 0x58, 0xe8, 0xde, 0xc9, 0x05, 0x22,
	0x77, 0x05, 0xe2, 0x0c, 0x88, 0x45, 0xb8, 0x63, 0xd9, 0x61, 0x73, 0x1d, 0xee, 0xe6, 0x43, 0x11,
	0xda, 0xf5, 0xac, 0x54, 0x83, 0xd0, 0xce, 0xa9, 0x18, 0x21, 0xb4, 0xf3, 0x4a, 0x3d, 0x98, 0x49,
	0x17, 0xb6, 0x35, 0xb3, 0xbf, 0x2f, 0xc2, 0x1e, 0x0d, 0xd1, 0xd7, 0x2c, 0x20, 0x05, 0x26, 0xdd,
	0x0e, 0x6e, 0x09, 0xd1, 0x75, 0x10, 0x5b, 0x88, 0x4e, 0x20, 0x4a, 0x42, 0x74, 0x03, 0xda, 0x94,
	0x81, 0xda, 0x0b, 0xe6, 0x28, 0xb3, 0xfa, 0x19, 0x43, 0x06, 0x86, 0x5d, 0xc5, 0x32, 0xa0, 0x80,
	0x11, 0x1f, 0x1f, 0x65, 0xa0, 0x26, 0xfe, 0x32, 0xea, 0x1a, 0xff, 0xcb, 0xa8, 0x32, 0xbb, 0xfb,
	0x80, 0x1e, 0x77, 0x0b, 0x50, 0x81, 0x8f, 0x9f, 0x87, 0x60, 0x1a, 0x27, 0xb3, 0x18, 0xc7, 0x34,
	0x4e, 0xc5, 0x55, 0x3d, 0xa6, 0x71, 0x2a, 0x2b, 0xf0, 0x11, 0xe9, 0x6c, 0xad, 0x30, 0xc7, 0x4c,
	0x67, 0xe7, 0xd6, 0xfa, 0x98, 0xe9, 0xec, 0x82, 0x12, 0x1f, 0x99, 0x11, 0x30, 0x17, 0x83, 0x99,
	0x11, 0x23, 0x23, 0x60, 0x05, 0x2b, 0xce, 0x08, 0xe4, 0xa0, 0x90, 0x5d, 0x6e, 0x8d, 0xb2, 0xcb,
	0x9b, 0x3f, 0x74, 0x97, 0x37, 0x47, 0xd8, 0x65, 0x11, 0xa8, 0x66, 0x45, 0xf1, 0x66, 0xa0, 0x6a,
	0x2f, 0xcb, 0x37, 0x03, 0xd5, 0x9c, 0x6a, 0xfc, 0xc7, 0x4f, 0xe0, 0x6e, 0x18, 0xb5, 0x96, 0xd9,
	0x5f, 0x1b, 0x39, 0x0a, 0x34, 0xa4, 0xbe, 0xf6, 0x47, 0x86, 0x1f, 0xe7, 0xfc, 0x09, 0x62, 0xfe,
	0x7f, 0xfc, 0xfb, 0x4a, 0xe5, 0x1f, 0x2b, 0x95, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x7a, 0xd6,
	0x38, 0x7b, 0xa7, 0x58, 0x00, 0x00,
}
