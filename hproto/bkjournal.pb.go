// Code generated by protoc-gen-go.
// source: bkjournal.proto
// DO NOT EDIT!

package hproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type VersionProto struct {
	LayoutVersion    *int32              `protobuf:"varint,1,req,name=layoutVersion" json:"layoutVersion,omitempty"`
	NamespaceInfo    *NamespaceInfoProto `protobuf:"bytes,2,opt,name=namespaceInfo" json:"namespaceInfo,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *VersionProto) Reset()                    { *m = VersionProto{} }
func (m *VersionProto) String() string            { return proto.CompactTextString(m) }
func (*VersionProto) ProtoMessage()               {}
func (*VersionProto) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *VersionProto) GetLayoutVersion() int32 {
	if m != nil && m.LayoutVersion != nil {
		return *m.LayoutVersion
	}
	return 0
}

func (m *VersionProto) GetNamespaceInfo() *NamespaceInfoProto {
	if m != nil {
		return m.NamespaceInfo
	}
	return nil
}

type EditLogLedgerProto struct {
	DataLayoutVersion *int32 `protobuf:"varint,1,req,name=dataLayoutVersion" json:"dataLayoutVersion,omitempty"`
	LedgerId          *int64 `protobuf:"varint,2,req,name=ledgerId" json:"ledgerId,omitempty"`
	FirstTxId         *int64 `protobuf:"varint,3,req,name=firstTxId" json:"firstTxId,omitempty"`
	LastTxId          *int64 `protobuf:"varint,4,opt,name=lastTxId" json:"lastTxId,omitempty"`
	XXX_unrecognized  []byte `json:"-"`
}

func (m *EditLogLedgerProto) Reset()                    { *m = EditLogLedgerProto{} }
func (m *EditLogLedgerProto) String() string            { return proto.CompactTextString(m) }
func (*EditLogLedgerProto) ProtoMessage()               {}
func (*EditLogLedgerProto) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *EditLogLedgerProto) GetDataLayoutVersion() int32 {
	if m != nil && m.DataLayoutVersion != nil {
		return *m.DataLayoutVersion
	}
	return 0
}

func (m *EditLogLedgerProto) GetLedgerId() int64 {
	if m != nil && m.LedgerId != nil {
		return *m.LedgerId
	}
	return 0
}

func (m *EditLogLedgerProto) GetFirstTxId() int64 {
	if m != nil && m.FirstTxId != nil {
		return *m.FirstTxId
	}
	return 0
}

func (m *EditLogLedgerProto) GetLastTxId() int64 {
	if m != nil && m.LastTxId != nil {
		return *m.LastTxId
	}
	return 0
}

type MaxTxIdProto struct {
	TxId             *int64 `protobuf:"varint,1,req,name=txId" json:"txId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MaxTxIdProto) Reset()                    { *m = MaxTxIdProto{} }
func (m *MaxTxIdProto) String() string            { return proto.CompactTextString(m) }
func (*MaxTxIdProto) ProtoMessage()               {}
func (*MaxTxIdProto) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *MaxTxIdProto) GetTxId() int64 {
	if m != nil && m.TxId != nil {
		return *m.TxId
	}
	return 0
}

type CurrentInprogressProto struct {
	Path             *string `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	Hostname         *string `protobuf:"bytes,2,opt,name=hostname" json:"hostname,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CurrentInprogressProto) Reset()                    { *m = CurrentInprogressProto{} }
func (m *CurrentInprogressProto) String() string            { return proto.CompactTextString(m) }
func (*CurrentInprogressProto) ProtoMessage()               {}
func (*CurrentInprogressProto) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *CurrentInprogressProto) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *CurrentInprogressProto) GetHostname() string {
	if m != nil && m.Hostname != nil {
		return *m.Hostname
	}
	return ""
}

func init() {
	proto.RegisterType((*VersionProto)(nil), "hadoop.hdfs.VersionProto")
	proto.RegisterType((*EditLogLedgerProto)(nil), "hadoop.hdfs.EditLogLedgerProto")
	proto.RegisterType((*MaxTxIdProto)(nil), "hadoop.hdfs.MaxTxIdProto")
	proto.RegisterType((*CurrentInprogressProto)(nil), "hadoop.hdfs.CurrentInprogressProto")
}

func init() { proto.RegisterFile("bkjournal.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 318 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x51, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0x4d, 0x01, 0x13, 0x19, 0x20, 0x68, 0x0f, 0x86, 0x10, 0x13, 0x49, 0xf5, 0xc0, 0xc1, 0xec,
	0xc1, 0x9b, 0x57, 0x0c, 0x09, 0x28, 0x1a, 0x53, 0x8d, 0xf7, 0x85, 0x5d, 0xda, 0x2a, 0xee, 0x34,
	0xb3, 0x8b, 0xc1, 0xf8, 0x23, 0x1e, 0xfd, 0x54, 0x77, 0xb7, 0xb5, 0x42, 0xf4, 0xd2, 0xbc, 0x99,
	0x37, 0x6f, 0xe6, 0xf5, 0x2d, 0x74, 0xe7, 0x2f, 0xcf, 0xb8, 0x26, 0xc5, 0x57, 0x2c, 0x27, 0x34,
	0x18, 0xb6, 0x52, 0x2e, 0x10, 0x73, 0x96, 0x8a, 0xa5, 0xee, 0x83, 0xfb, 0x16, 0x44, 0xff, 0x60,
	0x62, 0xf1, 0x83, 0xa4, 0x37, 0x49, 0x45, 0x27, 0xfa, 0x80, 0xf6, 0x93, 0x24, 0x9d, 0xa1, 0xba,
	0xf7, 0xd2, 0x33, 0xe8, 0xac, 0xf8, 0x3b, 0xae, 0x4d, 0xd9, 0xed, 0x05, 0x83, 0xda, 0x70, 0x2f,
	0xde, 0x6d, 0x86, 0x63, 0xe8, 0x28, 0xfe, 0x2a, 0x75, 0xce, 0x17, 0x72, 0xaa, 0x96, 0xd8, 0xab,
	0x0d, 0x82, 0x61, 0xeb, 0xe2, 0x84, 0x6d, 0x1d, 0x66, 0x77, 0xdb, 0x13, 0x7e, 0x7b, 0xbc, 0xab,
	0x8a, 0x3e, 0x03, 0x08, 0xc7, 0x22, 0x33, 0x33, 0x4c, 0x66, 0x52, 0x24, 0x92, 0x0a, 0x0f, 0xe7,
	0x70, 0x28, 0xb8, 0xe1, 0xb3, 0x7f, 0x7c, 0xfc, 0x25, 0xc2, 0x3e, 0xec, 0xaf, 0xbc, 0x78, 0x2a,
	0xac, 0x8d, 0xda, 0xb0, 0x1e, 0x57, 0x75, 0x78, 0x0c, 0xcd, 0x65, 0x46, 0xda, 0x3c, 0x6e, 0x2c,
	0x59, 0xf7, 0xe4, 0x6f, 0xc3, 0x2b, 0x79, 0x49, 0x36, 0xec, 0x0f, 0x38, 0x65, 0x59, 0x47, 0x11,
	0xb4, 0x6f, 0xf9, 0xc6, 0xc1, 0xc2, 0x53, 0x08, 0x0d, 0xe3, 0xe6, 0x02, 0xbf, 0xc4, 0xe3, 0x68,
	0x02, 0x47, 0x57, 0x6b, 0x22, 0xa9, 0xcc, 0x54, 0xd9, 0x34, 0x13, 0x92, 0x5a, 0x57, 0xd3, 0x39,
	0x37, 0xa9, 0x9f, 0x6e, 0xc6, 0x1e, 0xbb, 0x6b, 0x29, 0x6a, 0xe3, 0x12, 0xf0, 0x71, 0x35, 0xe3,
	0xaa, 0x1e, 0x5d, 0xc2, 0x29, 0x52, 0xc2, 0xb8, 0x4d, 0x26, 0x95, 0x3f, 0x21, 0x2e, 0x50, 0x19,
	0xca, 0xe6, 0xac, 0x7a, 0xdd, 0x51, 0x77, 0x74, 0x73, 0x5d, 0x40, 0x7f, 0x46, 0x7f, 0x05, 0xc1,
	0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x51, 0xc5, 0x9f, 0x92, 0xfd, 0x01, 0x00, 0x00,
}
