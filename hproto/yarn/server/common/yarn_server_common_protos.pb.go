// Code generated by protoc-gen-go.
// source: yarn_server_common_protos.proto
// DO NOT EDIT!

package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import hadoop_yarn "."

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type NodeActionProto int32

const (
	NodeActionProto_NORMAL   NodeActionProto = 0
	NodeActionProto_RESYNC   NodeActionProto = 1
	NodeActionProto_SHUTDOWN NodeActionProto = 2
)

var NodeActionProto_name = map[int32]string{
	0: "NORMAL",
	1: "RESYNC",
	2: "SHUTDOWN",
}
var NodeActionProto_value = map[string]int32{
	"NORMAL":   0,
	"RESYNC":   1,
	"SHUTDOWN": 2,
}

func (x NodeActionProto) Enum() *NodeActionProto {
	p := new(NodeActionProto)
	*p = x
	return p
}
func (x NodeActionProto) String() string {
	return proto.EnumName(NodeActionProto_name, int32(x))
}
func (x *NodeActionProto) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NodeActionProto_value, data, "NodeActionProto")
	if err != nil {
		return err
	}
	*x = NodeActionProto(value)
	return nil
}
func (NodeActionProto) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

type NodeStatusProto struct {
	NodeId                *hadoop_yarn.NodeIdProto              `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	ResponseId            *int32                                `protobuf:"varint,2,opt,name=response_id,json=responseId" json:"response_id,omitempty"`
	ContainersStatuses    []*hadoop_yarn.ContainerStatusProto   `protobuf:"bytes,3,rep,name=containersStatuses" json:"containersStatuses,omitempty"`
	NodeHealthStatus      *NodeHealthStatusProto                `protobuf:"bytes,4,opt,name=nodeHealthStatus" json:"nodeHealthStatus,omitempty"`
	KeepAliveApplications []*hadoop_yarn.ApplicationIdProto     `protobuf:"bytes,5,rep,name=keep_alive_applications,json=keepAliveApplications" json:"keep_alive_applications,omitempty"`
	ContainersUtilization *hadoop_yarn.ResourceUtilizationProto `protobuf:"bytes,6,opt,name=containers_utilization,json=containersUtilization" json:"containers_utilization,omitempty"`
	NodeUtilization       *hadoop_yarn.ResourceUtilizationProto `protobuf:"bytes,7,opt,name=node_utilization,json=nodeUtilization" json:"node_utilization,omitempty"`
	IncreasedContainers   []*hadoop_yarn.ContainerProto         `protobuf:"bytes,8,rep,name=increased_containers,json=increasedContainers" json:"increased_containers,omitempty"`
	QueuedContainerStatus *QueuedContainersStatusProto          `protobuf:"bytes,9,opt,name=queued_container_status,json=queuedContainerStatus" json:"queued_container_status,omitempty"`
	XXX_unrecognized      []byte                                `json:"-"`
}

func (m *NodeStatusProto) Reset()                    { *m = NodeStatusProto{} }
func (m *NodeStatusProto) String() string            { return proto.CompactTextString(m) }
func (*NodeStatusProto) ProtoMessage()               {}
func (*NodeStatusProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *NodeStatusProto) GetNodeId() *hadoop_yarn.NodeIdProto {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *NodeStatusProto) GetResponseId() int32 {
	if m != nil && m.ResponseId != nil {
		return *m.ResponseId
	}
	return 0
}

func (m *NodeStatusProto) GetContainersStatuses() []*hadoop_yarn.ContainerStatusProto {
	if m != nil {
		return m.ContainersStatuses
	}
	return nil
}

func (m *NodeStatusProto) GetNodeHealthStatus() *NodeHealthStatusProto {
	if m != nil {
		return m.NodeHealthStatus
	}
	return nil
}

func (m *NodeStatusProto) GetKeepAliveApplications() []*hadoop_yarn.ApplicationIdProto {
	if m != nil {
		return m.KeepAliveApplications
	}
	return nil
}

func (m *NodeStatusProto) GetContainersUtilization() *hadoop_yarn.ResourceUtilizationProto {
	if m != nil {
		return m.ContainersUtilization
	}
	return nil
}

func (m *NodeStatusProto) GetNodeUtilization() *hadoop_yarn.ResourceUtilizationProto {
	if m != nil {
		return m.NodeUtilization
	}
	return nil
}

func (m *NodeStatusProto) GetIncreasedContainers() []*hadoop_yarn.ContainerProto {
	if m != nil {
		return m.IncreasedContainers
	}
	return nil
}

func (m *NodeStatusProto) GetQueuedContainerStatus() *QueuedContainersStatusProto {
	if m != nil {
		return m.QueuedContainerStatus
	}
	return nil
}

type QueuedContainersStatusProto struct {
	EstimatedQueueWaitTime *int32 `protobuf:"varint,1,opt,name=estimated_queue_wait_time,json=estimatedQueueWaitTime" json:"estimated_queue_wait_time,omitempty"`
	WaitQueueLength        *int32 `protobuf:"varint,2,opt,name=wait_queue_length,json=waitQueueLength" json:"wait_queue_length,omitempty"`
	XXX_unrecognized       []byte `json:"-"`
}

func (m *QueuedContainersStatusProto) Reset()                    { *m = QueuedContainersStatusProto{} }
func (m *QueuedContainersStatusProto) String() string            { return proto.CompactTextString(m) }
func (*QueuedContainersStatusProto) ProtoMessage()               {}
func (*QueuedContainersStatusProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *QueuedContainersStatusProto) GetEstimatedQueueWaitTime() int32 {
	if m != nil && m.EstimatedQueueWaitTime != nil {
		return *m.EstimatedQueueWaitTime
	}
	return 0
}

func (m *QueuedContainersStatusProto) GetWaitQueueLength() int32 {
	if m != nil && m.WaitQueueLength != nil {
		return *m.WaitQueueLength
	}
	return 0
}

type MasterKeyProto struct {
	KeyId            *int32 `protobuf:"varint,1,opt,name=key_id,json=keyId" json:"key_id,omitempty"`
	Bytes            []byte `protobuf:"bytes,2,opt,name=bytes" json:"bytes,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MasterKeyProto) Reset()                    { *m = MasterKeyProto{} }
func (m *MasterKeyProto) String() string            { return proto.CompactTextString(m) }
func (*MasterKeyProto) ProtoMessage()               {}
func (*MasterKeyProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *MasterKeyProto) GetKeyId() int32 {
	if m != nil && m.KeyId != nil {
		return *m.KeyId
	}
	return 0
}

func (m *MasterKeyProto) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

type NodeHealthStatusProto struct {
	IsNodeHealthy        *bool   `protobuf:"varint,1,opt,name=is_node_healthy,json=isNodeHealthy" json:"is_node_healthy,omitempty"`
	HealthReport         *string `protobuf:"bytes,2,opt,name=health_report,json=healthReport" json:"health_report,omitempty"`
	LastHealthReportTime *int64  `protobuf:"varint,3,opt,name=last_health_report_time,json=lastHealthReportTime" json:"last_health_report_time,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *NodeHealthStatusProto) Reset()                    { *m = NodeHealthStatusProto{} }
func (m *NodeHealthStatusProto) String() string            { return proto.CompactTextString(m) }
func (*NodeHealthStatusProto) ProtoMessage()               {}
func (*NodeHealthStatusProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *NodeHealthStatusProto) GetIsNodeHealthy() bool {
	if m != nil && m.IsNodeHealthy != nil {
		return *m.IsNodeHealthy
	}
	return false
}

func (m *NodeHealthStatusProto) GetHealthReport() string {
	if m != nil && m.HealthReport != nil {
		return *m.HealthReport
	}
	return ""
}

func (m *NodeHealthStatusProto) GetLastHealthReportTime() int64 {
	if m != nil && m.LastHealthReportTime != nil {
		return *m.LastHealthReportTime
	}
	return 0
}

type VersionProto struct {
	MajorVersion     *int32 `protobuf:"varint,1,opt,name=major_version,json=majorVersion" json:"major_version,omitempty"`
	MinorVersion     *int32 `protobuf:"varint,2,opt,name=minor_version,json=minorVersion" json:"minor_version,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *VersionProto) Reset()                    { *m = VersionProto{} }
func (m *VersionProto) String() string            { return proto.CompactTextString(m) }
func (*VersionProto) ProtoMessage()               {}
func (*VersionProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

func (m *VersionProto) GetMajorVersion() int32 {
	if m != nil && m.MajorVersion != nil {
		return *m.MajorVersion
	}
	return 0
}

func (m *VersionProto) GetMinorVersion() int32 {
	if m != nil && m.MinorVersion != nil {
		return *m.MinorVersion
	}
	return 0
}

func init() {
	proto.RegisterType((*NodeStatusProto)(nil), "hadoop.yarn.NodeStatusProto")
	proto.RegisterType((*QueuedContainersStatusProto)(nil), "hadoop.yarn.QueuedContainersStatusProto")
	proto.RegisterType((*MasterKeyProto)(nil), "hadoop.yarn.MasterKeyProto")
	proto.RegisterType((*NodeHealthStatusProto)(nil), "hadoop.yarn.NodeHealthStatusProto")
	proto.RegisterType((*VersionProto)(nil), "hadoop.yarn.VersionProto")
	proto.RegisterEnum("hadoop.yarn.NodeActionProto", NodeActionProto_name, NodeActionProto_value)
}

func init() { proto.RegisterFile("yarn_server_common_protos.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 644 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x54, 0xdd, 0x4e, 0x13, 0x4f,
	0x14, 0xff, 0x2f, 0xfd, 0x6f, 0x81, 0x43, 0xb1, 0x65, 0xe4, 0x63, 0x15, 0x13, 0xb0, 0x46, 0x43,
	0xb8, 0x68, 0xa2, 0x89, 0x31, 0x26, 0x7a, 0x51, 0xaa, 0x09, 0x46, 0x28, 0xb0, 0x05, 0x91, 0xc4,
	0x64, 0x1c, 0xb7, 0x13, 0xba, 0xd2, 0xee, 0x2c, 0x33, 0x53, 0x4c, 0xbd, 0xf6, 0xc2, 0x77, 0xf0,
	0xc6, 0x77, 0xf1, 0xc5, 0x9c, 0x39, 0xb3, 0x6d, 0x77, 0x85, 0x98, 0x78, 0xd5, 0xce, 0xef, 0x6b,
	0xce, 0x9e, 0x39, 0x33, 0xb0, 0x31, 0x62, 0x32, 0xa1, 0x8a, 0xcb, 0x2b, 0x2e, 0x69, 0x24, 0x06,
	0x03, 0x91, 0xd0, 0x54, 0x0a, 0x2d, 0x54, 0x03, 0x7f, 0xc8, 0x42, 0x8f, 0x75, 0x85, 0x48, 0x1b,
	0x56, 0x77, 0x77, 0x09, 0xd5, 0x79, 0xbe, 0xfe, 0xcb, 0x87, 0x6a, 0x5b, 0x74, 0x79, 0x47, 0x33,
	0x3d, 0x54, 0x87, 0xe8, 0x79, 0x0c, 0xb3, 0x89, 0x81, 0x68, 0xdc, 0x0d, 0xbc, 0x4d, 0x6f, 0x6b,
	0xe1, 0x49, 0xd0, 0xc8, 0xa5, 0x34, 0xac, 0xfc, 0x4d, 0x17, 0xa5, 0x61, 0x39, 0xc1, 0x05, 0xd9,
	0x80, 0x05, 0xc9, 0x55, 0x2a, 0x12, 0x85, 0xb6, 0x19, 0x63, 0xf3, 0x43, 0x18, 0x43, 0x46, 0x70,
	0x04, 0x24, 0x12, 0x89, 0x66, 0x71, 0xc2, 0xa5, 0x72, 0x9b, 0x71, 0x15, 0x94, 0x36, 0x4b, 0x26,
	0xfe, 0x7e, 0x21, 0xbe, 0x35, 0x96, 0xe5, 0x4a, 0x0a, 0x6f, 0x30, 0x93, 0x36, 0xd4, 0xec, 0xee,
	0xbb, 0x9c, 0xf5, 0x75, 0xcf, 0xa1, 0xc1, 0xff, 0x58, 0x6f, 0xfd, 0x5a, 0xbd, 0x79, 0x91, 0x4b,
	0xbc, 0xe6, 0x25, 0xa7, 0xb0, 0x76, 0xc1, 0x79, 0x4a, 0x59, 0x3f, 0xbe, 0xe2, 0x94, 0xa5, 0x69,
	0x3f, 0x8e, 0x98, 0x8e, 0xcd, 0x07, 0x04, 0x3e, 0xd6, 0xb9, 0x51, 0x88, 0x6d, 0x4e, 0x05, 0xe3,
	0x6e, 0xac, 0x58, 0x7f, 0xd3, 0xda, 0x73, 0xa4, 0x22, 0x1f, 0x60, 0x75, 0x5a, 0x3e, 0x1d, 0xea,
	0xb8, 0x1f, 0x7f, 0x45, 0x2a, 0x28, 0x63, 0xb9, 0x0f, 0x0b, 0xb9, 0x21, 0x57, 0x62, 0x28, 0x23,
	0x7e, 0x32, 0xd5, 0x65, 0xe9, 0xd3, 0x90, 0x1c, 0x47, 0x0e, 0x5d, 0x1b, 0x0a, 0xb9, 0xb3, 0xff,
	0x92, 0x5b, 0xb5, 0xf6, 0x7c, 0x62, 0x1b, 0x96, 0xe3, 0x24, 0x92, 0x9c, 0x29, 0xde, 0xa5, 0xd3,
	0x4d, 0x83, 0x39, 0xec, 0xc2, 0xfa, 0xcd, 0xa7, 0xe5, 0xb2, 0x6e, 0x4f, 0x8c, 0x13, 0x42, 0x91,
	0x8f, 0xb0, 0x76, 0x39, 0xe4, 0xc3, 0x7c, 0x18, 0x55, 0xee, 0xbc, 0xe6, 0xb1, 0xd0, 0xad, 0x42,
	0xe4, 0x11, 0x6a, 0x5b, 0x7f, 0x1c, 0x78, 0xd6, 0x83, 0xcb, 0x22, 0xe9, 0xb8, 0xfa, 0x37, 0x0f,
	0xd6, 0xff, 0x62, 0x23, 0xcf, 0xe1, 0x0e, 0x57, 0x3a, 0x1e, 0x30, 0x6d, 0x8a, 0xc0, 0x08, 0xfa,
	0x85, 0xc5, 0x9a, 0x1a, 0x88, 0xe3, 0x8c, 0xfb, 0xe1, 0xea, 0x44, 0x80, 0x41, 0xa7, 0x86, 0x3e,
	0x36, 0x2c, 0xd9, 0x86, 0x25, 0x94, 0x3a, 0x57, 0x9f, 0x27, 0xe7, 0xba, 0x97, 0xcd, 0x77, 0xd5,
	0x12, 0xa8, 0xde, 0x43, 0xb8, 0xfe, 0x12, 0x6e, 0xed, 0x33, 0xa5, 0xb9, 0x7c, 0xcb, 0x47, 0x6e,
	0xe3, 0x15, 0x28, 0x5f, 0xf0, 0xd1, 0xf8, 0x26, 0xf9, 0xa1, 0x6f, 0x56, 0xe6, 0x36, 0x2c, 0x83,
	0xff, 0x69, 0xa4, 0xcd, 0x05, 0xb0, 0x41, 0x95, 0xd0, 0x2d, 0xea, 0x3f, 0x3c, 0x58, 0xb9, 0x71,
	0x58, 0xc9, 0x23, 0xa8, 0xc6, 0x8a, 0xe2, 0x31, 0xf7, 0x90, 0x1c, 0x61, 0xde, 0x5c, 0xb8, 0x18,
	0xab, 0xa9, 0x63, 0x44, 0x1e, 0xc0, 0xa2, 0xe3, 0xa9, 0xe4, 0xa9, 0x90, 0x1a, 0xf3, 0xe7, 0xc3,
	0x8a, 0x03, 0x43, 0xc4, 0xc8, 0x53, 0x58, 0xeb, 0x9b, 0x2a, 0x69, 0x41, 0xe9, 0x5a, 0x51, 0x32,
	0xf2, 0x52, 0xb8, 0x6c, 0xe9, 0xdd, 0x9c, 0xc5, 0x36, 0xa2, 0xfe, 0x1e, 0x2a, 0xef, 0x4c, 0x5b,
	0xc7, 0x63, 0x63, 0xf7, 0x1a, 0xb0, 0xcf, 0x42, 0xd2, 0x2b, 0x87, 0x66, 0x5f, 0x58, 0x41, 0x30,
	0x53, 0xa2, 0x28, 0x4e, 0x72, 0xa2, 0x99, 0x4c, 0x64, 0xc1, 0x4c, 0xb4, 0xfd, 0xcc, 0x3d, 0x41,
	0xcd, 0x68, 0x32, 0x93, 0x04, 0xa0, 0xdc, 0x3e, 0x08, 0xf7, 0x9b, 0x7b, 0xb5, 0xff, 0xec, 0xff,
	0xf0, 0x75, 0xe7, 0xac, 0xdd, 0xaa, 0x79, 0xa4, 0x02, 0x73, 0x9d, 0xdd, 0x93, 0xe3, 0x57, 0x07,
	0xa7, 0xed, 0xda, 0xcc, 0xce, 0x0b, 0xb8, 0x27, 0xe4, 0x79, 0x83, 0xa5, 0x2c, 0xea, 0xf1, 0xc2,
	0x0c, 0xe1, 0xe3, 0xb6, 0xb3, 0x7a, 0x66, 0xfe, 0x77, 0xf0, 0x71, 0x6c, 0xe1, 0xdb, 0x88, 0xe1,
	0xea, 0xbb, 0xe7, 0xfd, 0xf4, 0xbc, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9d, 0xc7, 0xc7, 0x5a,
	0x3c, 0x05, 0x00, 0x00,
}
