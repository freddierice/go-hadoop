// Code generated by protoc-gen-go.
// source: yarn_server_resourcemanager_recovery.proto
// DO NOT EDIT!

/*
Package resourcemanager is a generated protocol buffer package.

It is generated from these files:
	yarn_server_resourcemanager_recovery.proto

It has these top-level messages:
	ApplicationStateDataProto
	ApplicationAttemptStateDataProto
	EpochProto
	AMRMTokenSecretManagerStateProto
	RMDelegationTokenIdentifierDataProto
*/
package resourcemanager

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import hadoop_yarn1 "."
import hadoop_yarn "."
import hadoop_yarn2 "."
import hadoop_common1 "."

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// //////////////////////////////////////////////////////////////////////
// //// RM recovery related records /////////////////////////////////////
// //////////////////////////////////////////////////////////////////////
type RMAppAttemptStateProto int32

const (
	RMAppAttemptStateProto_RMATTEMPT_NEW                       RMAppAttemptStateProto = 1
	RMAppAttemptStateProto_RMATTEMPT_SUBMITTED                 RMAppAttemptStateProto = 2
	RMAppAttemptStateProto_RMATTEMPT_SCHEDULED                 RMAppAttemptStateProto = 3
	RMAppAttemptStateProto_RMATTEMPT_ALLOCATED                 RMAppAttemptStateProto = 4
	RMAppAttemptStateProto_RMATTEMPT_LAUNCHED                  RMAppAttemptStateProto = 5
	RMAppAttemptStateProto_RMATTEMPT_FAILED                    RMAppAttemptStateProto = 6
	RMAppAttemptStateProto_RMATTEMPT_RUNNING                   RMAppAttemptStateProto = 7
	RMAppAttemptStateProto_RMATTEMPT_FINISHING                 RMAppAttemptStateProto = 8
	RMAppAttemptStateProto_RMATTEMPT_FINISHED                  RMAppAttemptStateProto = 9
	RMAppAttemptStateProto_RMATTEMPT_KILLED                    RMAppAttemptStateProto = 10
	RMAppAttemptStateProto_RMATTEMPT_ALLOCATED_SAVING          RMAppAttemptStateProto = 11
	RMAppAttemptStateProto_RMATTEMPT_LAUNCHED_UNMANAGED_SAVING RMAppAttemptStateProto = 12
	RMAppAttemptStateProto_RMATTEMPT_RECOVERED                 RMAppAttemptStateProto = 13
	RMAppAttemptStateProto_RMATTEMPT_FINAL_SAVING              RMAppAttemptStateProto = 14
)

var RMAppAttemptStateProto_name = map[int32]string{
	1:  "RMATTEMPT_NEW",
	2:  "RMATTEMPT_SUBMITTED",
	3:  "RMATTEMPT_SCHEDULED",
	4:  "RMATTEMPT_ALLOCATED",
	5:  "RMATTEMPT_LAUNCHED",
	6:  "RMATTEMPT_FAILED",
	7:  "RMATTEMPT_RUNNING",
	8:  "RMATTEMPT_FINISHING",
	9:  "RMATTEMPT_FINISHED",
	10: "RMATTEMPT_KILLED",
	11: "RMATTEMPT_ALLOCATED_SAVING",
	12: "RMATTEMPT_LAUNCHED_UNMANAGED_SAVING",
	13: "RMATTEMPT_RECOVERED",
	14: "RMATTEMPT_FINAL_SAVING",
}
var RMAppAttemptStateProto_value = map[string]int32{
	"RMATTEMPT_NEW":                       1,
	"RMATTEMPT_SUBMITTED":                 2,
	"RMATTEMPT_SCHEDULED":                 3,
	"RMATTEMPT_ALLOCATED":                 4,
	"RMATTEMPT_LAUNCHED":                  5,
	"RMATTEMPT_FAILED":                    6,
	"RMATTEMPT_RUNNING":                   7,
	"RMATTEMPT_FINISHING":                 8,
	"RMATTEMPT_FINISHED":                  9,
	"RMATTEMPT_KILLED":                    10,
	"RMATTEMPT_ALLOCATED_SAVING":          11,
	"RMATTEMPT_LAUNCHED_UNMANAGED_SAVING": 12,
	"RMATTEMPT_RECOVERED":                 13,
	"RMATTEMPT_FINAL_SAVING":              14,
}

func (x RMAppAttemptStateProto) Enum() *RMAppAttemptStateProto {
	p := new(RMAppAttemptStateProto)
	*p = x
	return p
}
func (x RMAppAttemptStateProto) String() string {
	return proto.EnumName(RMAppAttemptStateProto_name, int32(x))
}
func (x *RMAppAttemptStateProto) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RMAppAttemptStateProto_value, data, "RMAppAttemptStateProto")
	if err != nil {
		return err
	}
	*x = RMAppAttemptStateProto(value)
	return nil
}
func (RMAppAttemptStateProto) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type RMAppStateProto int32

const (
	RMAppStateProto_RMAPP_NEW          RMAppStateProto = 1
	RMAppStateProto_RMAPP_NEW_SAVING   RMAppStateProto = 2
	RMAppStateProto_RMAPP_SUBMITTED    RMAppStateProto = 3
	RMAppStateProto_RMAPP_ACCEPTED     RMAppStateProto = 4
	RMAppStateProto_RMAPP_RUNNING      RMAppStateProto = 5
	RMAppStateProto_RMAPP_FINAL_SAVING RMAppStateProto = 6
	RMAppStateProto_RMAPP_FINISHING    RMAppStateProto = 7
	RMAppStateProto_RMAPP_FINISHED     RMAppStateProto = 8
	RMAppStateProto_RMAPP_FAILED       RMAppStateProto = 9
	RMAppStateProto_RMAPP_KILLED       RMAppStateProto = 10
)

var RMAppStateProto_name = map[int32]string{
	1:  "RMAPP_NEW",
	2:  "RMAPP_NEW_SAVING",
	3:  "RMAPP_SUBMITTED",
	4:  "RMAPP_ACCEPTED",
	5:  "RMAPP_RUNNING",
	6:  "RMAPP_FINAL_SAVING",
	7:  "RMAPP_FINISHING",
	8:  "RMAPP_FINISHED",
	9:  "RMAPP_FAILED",
	10: "RMAPP_KILLED",
}
var RMAppStateProto_value = map[string]int32{
	"RMAPP_NEW":          1,
	"RMAPP_NEW_SAVING":   2,
	"RMAPP_SUBMITTED":    3,
	"RMAPP_ACCEPTED":     4,
	"RMAPP_RUNNING":      5,
	"RMAPP_FINAL_SAVING": 6,
	"RMAPP_FINISHING":    7,
	"RMAPP_FINISHED":     8,
	"RMAPP_FAILED":       9,
	"RMAPP_KILLED":       10,
}

func (x RMAppStateProto) Enum() *RMAppStateProto {
	p := new(RMAppStateProto)
	*p = x
	return p
}
func (x RMAppStateProto) String() string {
	return proto.EnumName(RMAppStateProto_name, int32(x))
}
func (x *RMAppStateProto) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RMAppStateProto_value, data, "RMAppStateProto")
	if err != nil {
		return err
	}
	*x = RMAppStateProto(value)
	return nil
}
func (RMAppStateProto) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ApplicationStateDataProto struct {
	SubmitTime                   *int64                                         `protobuf:"varint,1,opt,name=submit_time,json=submitTime" json:"submit_time,omitempty"`
	ApplicationSubmissionContext *hadoop_yarn.ApplicationSubmissionContextProto `protobuf:"bytes,2,opt,name=application_submission_context,json=applicationSubmissionContext" json:"application_submission_context,omitempty"`
	User                         *string                                        `protobuf:"bytes,3,opt,name=user" json:"user,omitempty"`
	StartTime                    *int64                                         `protobuf:"varint,4,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	ApplicationState             *RMAppStateProto                               `protobuf:"varint,5,opt,name=application_state,json=applicationState,enum=hadoop.yarn.RMAppStateProto" json:"application_state,omitempty"`
	Diagnostics                  *string                                        `protobuf:"bytes,6,opt,name=diagnostics,def=N/A" json:"diagnostics,omitempty"`
	FinishTime                   *int64                                         `protobuf:"varint,7,opt,name=finish_time,json=finishTime" json:"finish_time,omitempty"`
	CallerContext                *hadoop_common1.RPCCallerContextProto          `protobuf:"bytes,8,opt,name=caller_context,json=callerContext" json:"caller_context,omitempty"`
	XXX_unrecognized             []byte                                         `json:"-"`
}

func (m *ApplicationStateDataProto) Reset()                    { *m = ApplicationStateDataProto{} }
func (m *ApplicationStateDataProto) String() string            { return proto.CompactTextString(m) }
func (*ApplicationStateDataProto) ProtoMessage()               {}
func (*ApplicationStateDataProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

const Default_ApplicationStateDataProto_Diagnostics string = "N/A"

func (m *ApplicationStateDataProto) GetSubmitTime() int64 {
	if m != nil && m.SubmitTime != nil {
		return *m.SubmitTime
	}
	return 0
}

func (m *ApplicationStateDataProto) GetApplicationSubmissionContext() *hadoop_yarn.ApplicationSubmissionContextProto {
	if m != nil {
		return m.ApplicationSubmissionContext
	}
	return nil
}

func (m *ApplicationStateDataProto) GetUser() string {
	if m != nil && m.User != nil {
		return *m.User
	}
	return ""
}

func (m *ApplicationStateDataProto) GetStartTime() int64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *ApplicationStateDataProto) GetApplicationState() RMAppStateProto {
	if m != nil && m.ApplicationState != nil {
		return *m.ApplicationState
	}
	return RMAppStateProto_RMAPP_NEW
}

func (m *ApplicationStateDataProto) GetDiagnostics() string {
	if m != nil && m.Diagnostics != nil {
		return *m.Diagnostics
	}
	return Default_ApplicationStateDataProto_Diagnostics
}

func (m *ApplicationStateDataProto) GetFinishTime() int64 {
	if m != nil && m.FinishTime != nil {
		return *m.FinishTime
	}
	return 0
}

func (m *ApplicationStateDataProto) GetCallerContext() *hadoop_common1.RPCCallerContextProto {
	if m != nil {
		return m.CallerContext
	}
	return nil
}

type ApplicationAttemptStateDataProto struct {
	AttemptId              *hadoop_yarn.ApplicationAttemptIdProto   `protobuf:"bytes,1,opt,name=attemptId" json:"attemptId,omitempty"`
	MasterContainer        *hadoop_yarn.ContainerProto              `protobuf:"bytes,2,opt,name=master_container,json=masterContainer" json:"master_container,omitempty"`
	AppAttemptTokens       []byte                                   `protobuf:"bytes,3,opt,name=app_attempt_tokens,json=appAttemptTokens" json:"app_attempt_tokens,omitempty"`
	AppAttemptState        *RMAppAttemptStateProto                  `protobuf:"varint,4,opt,name=app_attempt_state,json=appAttemptState,enum=hadoop.yarn.RMAppAttemptStateProto" json:"app_attempt_state,omitempty"`
	FinalTrackingUrl       *string                                  `protobuf:"bytes,5,opt,name=final_tracking_url,json=finalTrackingUrl" json:"final_tracking_url,omitempty"`
	Diagnostics            *string                                  `protobuf:"bytes,6,opt,name=diagnostics,def=N/A" json:"diagnostics,omitempty"`
	StartTime              *int64                                   `protobuf:"varint,7,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	FinalApplicationStatus *hadoop_yarn.FinalApplicationStatusProto `protobuf:"varint,8,opt,name=final_application_status,json=finalApplicationStatus,enum=hadoop.yarn.FinalApplicationStatusProto" json:"final_application_status,omitempty"`
	AmContainerExitStatus  *int32                                   `protobuf:"varint,9,opt,name=am_container_exit_status,json=amContainerExitStatus,def=-1000" json:"am_container_exit_status,omitempty"`
	MemorySeconds          *int64                                   `protobuf:"varint,10,opt,name=memory_seconds,json=memorySeconds" json:"memory_seconds,omitempty"`
	VcoreSeconds           *int64                                   `protobuf:"varint,11,opt,name=vcore_seconds,json=vcoreSeconds" json:"vcore_seconds,omitempty"`
	FinishTime             *int64                                   `protobuf:"varint,12,opt,name=finish_time,json=finishTime" json:"finish_time,omitempty"`
	XXX_unrecognized       []byte                                   `json:"-"`
}

func (m *ApplicationAttemptStateDataProto) Reset()         { *m = ApplicationAttemptStateDataProto{} }
func (m *ApplicationAttemptStateDataProto) String() string { return proto.CompactTextString(m) }
func (*ApplicationAttemptStateDataProto) ProtoMessage()    {}
func (*ApplicationAttemptStateDataProto) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1}
}

const Default_ApplicationAttemptStateDataProto_Diagnostics string = "N/A"
const Default_ApplicationAttemptStateDataProto_AmContainerExitStatus int32 = -1000

func (m *ApplicationAttemptStateDataProto) GetAttemptId() *hadoop_yarn.ApplicationAttemptIdProto {
	if m != nil {
		return m.AttemptId
	}
	return nil
}

func (m *ApplicationAttemptStateDataProto) GetMasterContainer() *hadoop_yarn.ContainerProto {
	if m != nil {
		return m.MasterContainer
	}
	return nil
}

func (m *ApplicationAttemptStateDataProto) GetAppAttemptTokens() []byte {
	if m != nil {
		return m.AppAttemptTokens
	}
	return nil
}

func (m *ApplicationAttemptStateDataProto) GetAppAttemptState() RMAppAttemptStateProto {
	if m != nil && m.AppAttemptState != nil {
		return *m.AppAttemptState
	}
	return RMAppAttemptStateProto_RMATTEMPT_NEW
}

func (m *ApplicationAttemptStateDataProto) GetFinalTrackingUrl() string {
	if m != nil && m.FinalTrackingUrl != nil {
		return *m.FinalTrackingUrl
	}
	return ""
}

func (m *ApplicationAttemptStateDataProto) GetDiagnostics() string {
	if m != nil && m.Diagnostics != nil {
		return *m.Diagnostics
	}
	return Default_ApplicationAttemptStateDataProto_Diagnostics
}

func (m *ApplicationAttemptStateDataProto) GetStartTime() int64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *ApplicationAttemptStateDataProto) GetFinalApplicationStatus() hadoop_yarn.FinalApplicationStatusProto {
	if m != nil && m.FinalApplicationStatus != nil {
		return *m.FinalApplicationStatus
	}
	return hadoop_yarn.FinalApplicationStatusProto_APP_UNDEFINED
}

func (m *ApplicationAttemptStateDataProto) GetAmContainerExitStatus() int32 {
	if m != nil && m.AmContainerExitStatus != nil {
		return *m.AmContainerExitStatus
	}
	return Default_ApplicationAttemptStateDataProto_AmContainerExitStatus
}

func (m *ApplicationAttemptStateDataProto) GetMemorySeconds() int64 {
	if m != nil && m.MemorySeconds != nil {
		return *m.MemorySeconds
	}
	return 0
}

func (m *ApplicationAttemptStateDataProto) GetVcoreSeconds() int64 {
	if m != nil && m.VcoreSeconds != nil {
		return *m.VcoreSeconds
	}
	return 0
}

func (m *ApplicationAttemptStateDataProto) GetFinishTime() int64 {
	if m != nil && m.FinishTime != nil {
		return *m.FinishTime
	}
	return 0
}

type EpochProto struct {
	Epoch            *int64 `protobuf:"varint,1,opt,name=epoch" json:"epoch,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *EpochProto) Reset()                    { *m = EpochProto{} }
func (m *EpochProto) String() string            { return proto.CompactTextString(m) }
func (*EpochProto) ProtoMessage()               {}
func (*EpochProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *EpochProto) GetEpoch() int64 {
	if m != nil && m.Epoch != nil {
		return *m.Epoch
	}
	return 0
}

type AMRMTokenSecretManagerStateProto struct {
	CurrentMasterKey *hadoop_yarn1.MasterKeyProto `protobuf:"bytes,1,opt,name=current_master_key,json=currentMasterKey" json:"current_master_key,omitempty"`
	NextMasterKey    *hadoop_yarn1.MasterKeyProto `protobuf:"bytes,2,opt,name=next_master_key,json=nextMasterKey" json:"next_master_key,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *AMRMTokenSecretManagerStateProto) Reset()         { *m = AMRMTokenSecretManagerStateProto{} }
func (m *AMRMTokenSecretManagerStateProto) String() string { return proto.CompactTextString(m) }
func (*AMRMTokenSecretManagerStateProto) ProtoMessage()    {}
func (*AMRMTokenSecretManagerStateProto) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3}
}

func (m *AMRMTokenSecretManagerStateProto) GetCurrentMasterKey() *hadoop_yarn1.MasterKeyProto {
	if m != nil {
		return m.CurrentMasterKey
	}
	return nil
}

func (m *AMRMTokenSecretManagerStateProto) GetNextMasterKey() *hadoop_yarn1.MasterKeyProto {
	if m != nil {
		return m.NextMasterKey
	}
	return nil
}

type RMDelegationTokenIdentifierDataProto struct {
	TokenIdentifier  *hadoop_yarn2.YARNDelegationTokenIdentifierProto `protobuf:"bytes,1,opt,name=token_identifier,json=tokenIdentifier" json:"token_identifier,omitempty"`
	RenewDate        *int64                                           `protobuf:"varint,2,opt,name=renewDate" json:"renewDate,omitempty"`
	XXX_unrecognized []byte                                           `json:"-"`
}

func (m *RMDelegationTokenIdentifierDataProto) Reset()         { *m = RMDelegationTokenIdentifierDataProto{} }
func (m *RMDelegationTokenIdentifierDataProto) String() string { return proto.CompactTextString(m) }
func (*RMDelegationTokenIdentifierDataProto) ProtoMessage()    {}
func (*RMDelegationTokenIdentifierDataProto) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4}
}

func (m *RMDelegationTokenIdentifierDataProto) GetTokenIdentifier() *hadoop_yarn2.YARNDelegationTokenIdentifierProto {
	if m != nil {
		return m.TokenIdentifier
	}
	return nil
}

func (m *RMDelegationTokenIdentifierDataProto) GetRenewDate() int64 {
	if m != nil && m.RenewDate != nil {
		return *m.RenewDate
	}
	return 0
}

func init() {
	proto.RegisterType((*ApplicationStateDataProto)(nil), "hadoop.yarn.ApplicationStateDataProto")
	proto.RegisterType((*ApplicationAttemptStateDataProto)(nil), "hadoop.yarn.ApplicationAttemptStateDataProto")
	proto.RegisterType((*EpochProto)(nil), "hadoop.yarn.EpochProto")
	proto.RegisterType((*AMRMTokenSecretManagerStateProto)(nil), "hadoop.yarn.AMRMTokenSecretManagerStateProto")
	proto.RegisterType((*RMDelegationTokenIdentifierDataProto)(nil), "hadoop.yarn.RMDelegationTokenIdentifierDataProto")
	proto.RegisterEnum("hadoop.yarn.RMAppAttemptStateProto", RMAppAttemptStateProto_name, RMAppAttemptStateProto_value)
	proto.RegisterEnum("hadoop.yarn.RMAppStateProto", RMAppStateProto_name, RMAppStateProto_value)
}

func init() { proto.RegisterFile("yarn_server_resourcemanager_recovery.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1029 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x56, 0xdd, 0x72, 0xda, 0x46,
	0x14, 0x1e, 0x19, 0x63, 0x9b, 0x83, 0xc1, 0xf2, 0xa6, 0x71, 0x89, 0xeb, 0x26, 0x19, 0x9c, 0x34,
	0x19, 0x4f, 0x4b, 0x5c, 0x5f, 0xe6, 0xa2, 0x33, 0xb2, 0xc0, 0x31, 0x63, 0x24, 0x33, 0x02, 0xd2,
	0x49, 0x6f, 0x34, 0x1b, 0xb1, 0xc6, 0x1a, 0x23, 0x89, 0x91, 0x96, 0x34, 0xdc, 0xf5, 0xb2, 0x8f,
	0x91, 0x67, 0xe8, 0xf4, 0x15, 0xfa, 0x0c, 0x7d, 0x9d, 0xae, 0xce, 0x2e, 0x12, 0x22, 0x4e, 0xdb,
	0x3b, 0xf4, 0x9d, 0xbf, 0x6f, 0xbf, 0xef, 0xac, 0x10, 0x9c, 0x2c, 0x68, 0x1c, 0xba, 0x09, 0x8b,
	0x3f, 0xb0, 0xd8, 0x8d, 0x59, 0x12, 0xcd, 0x63, 0x8f, 0x05, 0x34, 0xa4, 0x13, 0x7c, 0xf6, 0x22,
	0x81, 0x2f, 0x5a, 0xb3, 0x38, 0xe2, 0x11, 0xa9, 0xde, 0xd2, 0x71, 0x14, 0xcd, 0x5a, 0x69, 0xc9,
	0xe1, 0x93, 0xd5, 0x42, 0x2f, 0x0a, 0x82, 0x28, 0x74, 0x31, 0x2d, 0x91, 0xd9, 0x87, 0xfb, 0x98,
	0x50, 0x80, 0x1e, 0xa9, 0x1a, 0x6f, 0x1e, 0xfb, 0x7c, 0xe1, 0xf2, 0xe8, 0x8e, 0x85, 0x2a, 0xb4,
	0xe7, 0xcc, 0xbc, 0x4b, 0x46, 0xc7, 0x2c, 0x96, 0x40, 0xf3, 0xaf, 0x12, 0x3c, 0x32, 0x66, 0xb3,
	0xa9, 0xef, 0x51, 0xee, 0x47, 0xe1, 0x80, 0x53, 0xce, 0xda, 0x94, 0xd3, 0x3e, 0x52, 0x79, 0x02,
	0xd5, 0x64, 0xfe, 0x3e, 0xf0, 0xb9, 0xcb, 0xfd, 0x80, 0x35, 0xb4, 0xa7, 0xda, 0xcb, 0x92, 0x03,
	0x12, 0x1a, 0x0a, 0x84, 0x70, 0x78, 0x4c, 0xf3, 0x6a, 0x17, 0x23, 0x49, 0x92, 0xfe, 0xf4, 0xa2,
	0x90, 0xb3, 0x8f, 0xbc, 0xb1, 0x21, 0x6a, 0xaa, 0x67, 0xad, 0xd6, 0xca, 0xa1, 0x5a, 0xab, 0x03,
	0xb3, 0x0a, 0x53, 0x16, 0xe0, 0x60, 0xe7, 0x88, 0xfe, 0x4b, 0x0a, 0x21, 0xb0, 0x39, 0x17, 0x92,
	0x34, 0x4a, 0xa2, 0x77, 0xc5, 0xc1, 0xdf, 0xe4, 0x5b, 0x80, 0x84, 0xd3, 0x58, 0x31, 0xdd, 0x44,
	0xa6, 0x15, 0x44, 0x90, 0x68, 0x17, 0xf6, 0x0b, 0x44, 0xd3, 0x73, 0x36, 0xca, 0x22, 0xab, 0x7e,
	0x76, 0x54, 0xe0, 0xe6, 0x58, 0x82, 0x1d, 0xca, 0x20, 0x99, 0xe8, 0x74, 0x4d, 0x1d, 0xf2, 0x1c,
	0xaa, 0x63, 0x9f, 0x4e, 0xc2, 0x28, 0xe1, 0xbe, 0x97, 0x34, 0xb6, 0x52, 0x12, 0xaf, 0x4b, 0xf6,
	0x2b, 0xc3, 0x59, 0xc5, 0x53, 0xed, 0x6e, 0xfc, 0xd0, 0x4f, 0x6e, 0x25, 0xa3, 0x6d, 0xa9, 0x9d,
	0x84, 0x90, 0xd2, 0x15, 0xd4, 0x3d, 0x3a, 0x9d, 0xa2, 0xaf, 0x52, 0xab, 0x1d, 0xd4, 0xea, 0xd9,
	0x92, 0x8f, 0xb4, 0xbb, 0xe5, 0xf4, 0x4d, 0x13, 0xf3, 0x0a, 0x0a, 0xd5, 0xbc, 0x55, 0xac, 0xf9,
	0x67, 0x19, 0x9e, 0xae, 0xc8, 0x6a, 0x70, 0xce, 0x82, 0x19, 0x5f, 0xb3, 0xb3, 0x0d, 0x15, 0x2a,
	0x03, 0xdd, 0x31, 0x9a, 0x59, 0x3d, 0xfb, 0xee, 0x4b, 0xc6, 0x18, 0xcb, 0x44, 0x39, 0x2e, 0x2f,
	0x24, 0x17, 0xa0, 0x07, 0x34, 0xe1, 0x8a, 0x37, 0xf5, 0x43, 0xe1, 0x84, 0x74, 0xf9, 0x9b, 0x42,
	0x33, 0x73, 0x19, 0x95, 0x1d, 0xf6, 0x64, 0x51, 0x86, 0x92, 0xef, 0x81, 0x08, 0x6d, 0x5d, 0xd5,
	0x58, 0xae, 0x69, 0x82, 0x9e, 0xee, 0xa2, 0xea, 0x8a, 0xc1, 0x10, 0x71, 0x72, 0x8d, 0x06, 0x66,
	0xd9, 0xd2, 0xc0, 0x4d, 0x34, 0xf0, 0xf8, 0x73, 0x03, 0x57, 0xcf, 0xaf, 0xc6, 0xd3, 0x22, 0x9a,
	0x8e, 0x17, 0x66, 0xd0, 0xa9, 0xcb, 0x63, 0xea, 0xdd, 0xf9, 0xe1, 0xc4, 0x9d, 0xc7, 0x53, 0x5c,
	0x89, 0x8a, 0xa3, 0x63, 0x64, 0xa8, 0x02, 0xa3, 0x78, 0xfa, 0x7f, 0x4d, 0x2f, 0x6e, 0xe1, 0xf6,
	0xfa, 0x16, 0xbe, 0x87, 0x86, 0x9c, 0xb9, 0xbe, 0x8b, 0xf3, 0x04, 0xcd, 0xaf, 0x9f, 0xbd, 0x2c,
	0x9c, 0xe5, 0x22, 0x4d, 0x5e, 0xbb, 0x9e, 0xf3, 0x44, 0x1e, 0xe8, 0xe0, 0xe6, 0xde, 0x20, 0xf9,
	0x09, 0x1a, 0x34, 0xc8, 0xad, 0x71, 0xd9, 0x47, 0x9f, 0x2f, 0x67, 0x54, 0xc4, 0x8c, 0xf2, 0xeb,
	0xf2, 0x0f, 0x3f, 0x9e, 0x9e, 0x9e, 0x3a, 0x0f, 0x69, 0x90, 0x99, 0xd1, 0x11, 0x49, 0xaa, 0xfe,
	0x39, 0xd4, 0x03, 0x16, 0x44, 0xf1, 0x22, 0x7d, 0x83, 0x44, 0xe1, 0x38, 0x69, 0x00, 0x1e, 0xa3,
	0x26, 0xd1, 0x81, 0x04, 0xc9, 0x31, 0xd4, 0x3e, 0x78, 0x51, 0xcc, 0xb2, 0xac, 0x2a, 0x66, 0xed,
	0x22, 0xb8, 0x4c, 0x5a, 0xbb, 0x03, 0xbb, 0xeb, 0x77, 0xa0, 0xd9, 0x04, 0xe8, 0xcc, 0x22, 0xef,
	0x56, 0xee, 0xe7, 0x57, 0x50, 0x66, 0xe9, 0x93, 0x7a, 0xd1, 0xc8, 0x87, 0xe6, 0x1f, 0x9a, 0x58,
	0x6d, 0xcb, 0xb1, 0x70, 0x11, 0x44, 0xe7, 0x98, 0x71, 0x4b, 0xbe, 0x39, 0x73, 0x7b, 0xc5, 0xfd,
	0x26, 0xe2, 0x75, 0x17, 0xb3, 0x90, 0xbb, 0x6a, 0x39, 0xef, 0xd8, 0x42, 0xed, 0x78, 0x71, 0x2d,
	0x2d, 0x0c, 0x5f, 0xb1, 0x85, 0xba, 0xdf, 0xaa, 0x2c, 0x83, 0x89, 0x09, 0x7b, 0xa1, 0xb8, 0x52,
	0xab, 0x7d, 0x36, 0xfe, 0xbb, 0x4f, 0x2d, 0xad, 0xc9, 0xb0, 0xe6, 0x27, 0x0d, 0x9e, 0x39, 0x56,
	0x9b, 0x4d, 0xd9, 0x04, 0xcd, 0x41, 0xf2, 0xdd, 0xb1, 0x18, 0xe4, 0xdf, 0xf8, 0x2c, 0xce, 0xef,
	0xe4, 0x2f, 0xa0, 0xe3, 0xe6, 0xbb, 0x7e, 0x16, 0x54, 0xb4, 0x5f, 0x15, 0xc6, 0xbd, 0x33, 0x1c,
	0xfb, 0x8b, 0xed, 0xd4, 0x8a, 0xf3, 0x22, 0x4a, 0x8e, 0xa0, 0x22, 0x8e, 0xc6, 0x7e, 0x6d, 0xa7,
	0x77, 0x65, 0x43, 0x2e, 0x63, 0x06, 0x9c, 0xfc, 0x56, 0x82, 0x83, 0xfb, 0x2f, 0x0b, 0xd9, 0x87,
	0x9a, 0x88, 0x0c, 0x87, 0x1d, 0xab, 0x3f, 0x74, 0xed, 0xce, 0xcf, 0xba, 0x46, 0xbe, 0x86, 0x07,
	0x39, 0x34, 0x18, 0x9d, 0x5b, 0x5d, 0xf1, 0xbb, 0xad, 0x6f, 0xac, 0x05, 0xcc, 0xcb, 0x4e, 0x7b,
	0xd4, 0x13, 0x81, 0x52, 0x31, 0x60, 0xf4, 0x7a, 0xd7, 0xa6, 0x91, 0x56, 0x6c, 0x92, 0x03, 0x20,
	0x79, 0xa0, 0x67, 0x8c, 0xec, 0xb4, 0x48, 0x2f, 0x0b, 0xfb, 0xf5, 0x1c, 0xbf, 0x30, 0xba, 0x69,
	0x9b, 0x2d, 0xf2, 0x10, 0xf6, 0x73, 0xd4, 0x19, 0xd9, 0x76, 0xd7, 0x7e, 0xa3, 0x6f, 0x17, 0xbb,
	0x5f, 0x74, 0xed, 0xee, 0xe0, 0x32, 0x0d, 0xec, 0x14, 0xbb, 0xcb, 0x80, 0xe8, 0x53, 0x29, 0x76,
	0xbf, 0xea, 0xf6, 0xd2, 0xee, 0x40, 0x1e, 0xc3, 0xe1, 0x3d, 0x24, 0xdd, 0x81, 0xf1, 0x36, 0xed,
	0x56, 0x25, 0x2f, 0xe0, 0xf8, 0x73, 0xae, 0xee, 0xc8, 0xb6, 0x0c, 0xdb, 0x78, 0x93, 0x27, 0xee,
	0x16, 0xf9, 0x38, 0x1d, 0xf3, 0xfa, 0x6d, 0xc7, 0x11, 0x13, 0x6a, 0xe4, 0x10, 0x55, 0xce, 0xf9,
	0x18, 0xbd, 0x65, 0x51, 0xfd, 0xe4, 0x6f, 0x0d, 0xf6, 0xd6, 0xfe, 0x70, 0x48, 0x0d, 0x2a, 0x02,
	0xea, 0xf7, 0x95, 0xee, 0x92, 0xb6, 0x7c, 0x5c, 0x16, 0x6e, 0x90, 0x07, 0x58, 0x27, 0xd0, 0xdc,
	0x89, 0x92, 0xf8, 0x5b, 0xac, 0x4b, 0xd0, 0x30, 0xcd, 0x4e, 0x5f, 0x6a, 0x2d, 0x9d, 0x14, 0xd8,
	0x52, 0xb9, 0xb2, 0x12, 0x48, 0x40, 0x05, 0x32, 0x5b, 0x79, 0xcf, 0x5c, 0xcd, 0xed, 0xbc, 0x67,
	0xa6, 0xe4, 0x0e, 0xd1, 0x61, 0x57, 0x61, 0xd2, 0xa3, 0x4a, 0x8e, 0x2c, 0x75, 0x3d, 0xb7, 0xe0,
	0x28, 0x8a, 0x27, 0x2d, 0x3a, 0xa3, 0xde, 0x2d, 0x2b, 0x2c, 0x32, 0x7e, 0x77, 0x9c, 0xbf, 0x78,
	0x27, 0x7e, 0x0f, 0xf0, 0xb3, 0xc6, 0x51, 0x9f, 0x43, 0xea, 0x52, 0x3b, 0xea, 0x6b, 0x08, 0xd5,
	0x48, 0x7e, 0xd7, 0xb4, 0x4f, 0x9a, 0xf6, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa1, 0xd2, 0x35,
	0x6b, 0x40, 0x09, 0x00, 0x00,
}
